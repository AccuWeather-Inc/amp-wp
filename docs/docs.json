{
    "91": {
        "file": {
            "description": "Class AMP_Base_Sanitizer",
            "long_description": "",
            "tags": [
                {
                    "name": "package",
                    "content": "AMP"
                }
            ]
        },
        "path": "includes\/sanitizers\/class-amp-base-sanitizer.php",
        "root": "\/app\/public\/content\/plugins\/amp",
        "classes": [
            {
                "name": "AMP_Base_Sanitizer",
                "namespace": "global",
                "line": 16,
                "end_line": 796,
                "final": false,
                "abstract": true,
                "extends": "",
                "implements": [],
                "properties": [
                    {
                        "name": "$DEFAULT_ARGS",
                        "line": 34,
                        "end_line": 34,
                        "default": "array()",
                        "static": false,
                        "visibility": "protected",
                        "doc": {
                            "description": "Placeholder for default args, to be set in child classes.",
                            "long_description": "",
                            "tags": [
                                {
                                    "name": "since",
                                    "content": "0.2"
                                },
                                {
                                    "name": "var",
                                    "content": "",
                                    "types": [
                                        "array"
                                    ],
                                    "variable": ""
                                }
                            ]
                        }
                    },
                    {
                        "name": "$dom",
                        "line": 43,
                        "end_line": 43,
                        "default": null,
                        "static": false,
                        "visibility": "protected",
                        "doc": {
                            "description": "DOM.",
                            "long_description": "",
                            "tags": [
                                {
                                    "name": "var",
                                    "content": "An AmpProject\\Document representation of an HTML document.",
                                    "types": [
                                        "\\AmpProject\\Dom\\Document"
                                    ],
                                    "variable": ""
                                },
                                {
                                    "name": "since",
                                    "content": "0.2"
                                }
                            ]
                        }
                    },
                    {
                        "name": "$args",
                        "line": 64,
                        "end_line": 64,
                        "default": null,
                        "static": false,
                        "visibility": "protected",
                        "doc": {
                            "description": "Array of flags used to control sanitization.",
                            "long_description": "",
                            "tags": [
                                {
                                    "name": "var",
                                    "content": "{      @type int $content_max_width      @type bool $add_placeholder      @type bool $use_document_element      @type bool $require_https_src      @type string[] $amp_allowed_tags      @type string[] $amp_globally_allowed_attributes      @type string[] $amp_layout_allowed_attributes      @type array $amp_allowed_tags      @type array $amp_globally_allowed_attributes      @type array $amp_layout_allowed_attributes      @type array $amp_bind_placeholder_prefix      @type bool $should_locate_sources      @type callable $validation_error_callback }",
                                    "types": [
                                        "array"
                                    ],
                                    "variable": ""
                                }
                            ]
                        }
                    },
                    {
                        "name": "$did_convert_elements",
                        "line": 74,
                        "end_line": 74,
                        "default": "false",
                        "static": false,
                        "visibility": "protected",
                        "doc": {
                            "description": "Flag to be set in child class' sanitize() method indicating if the HTML contained in the Dom\\Document has been sanitized yet or not.",
                            "long_description": "",
                            "tags": [
                                {
                                    "name": "since",
                                    "content": "0.2"
                                },
                                {
                                    "name": "var",
                                    "content": "",
                                    "types": [
                                        "bool"
                                    ],
                                    "variable": ""
                                }
                            ]
                        }
                    },
                    {
                        "name": "$root_element",
                        "line": 81,
                        "end_line": 81,
                        "default": null,
                        "static": false,
                        "visibility": "protected",
                        "doc": {
                            "description": "The root element used for sanitization. Either html or body.",
                            "long_description": "",
                            "tags": [
                                {
                                    "name": "var",
                                    "content": "",
                                    "types": [
                                        "\\DOMElement"
                                    ],
                                    "variable": ""
                                }
                            ]
                        }
                    },
                    {
                        "name": "$nodes_to_keep",
                        "line": 88,
                        "end_line": 88,
                        "default": "array()",
                        "static": false,
                        "visibility": "private",
                        "doc": {
                            "description": "Keep track of nodes that should not be removed to prevent duplicated validation errors since sanitization is rejected.",
                            "long_description": "",
                            "tags": [
                                {
                                    "name": "var",
                                    "content": "",
                                    "types": [
                                        "array"
                                    ],
                                    "variable": ""
                                }
                            ]
                        }
                    }
                ],
                "methods": [
                    {
                        "name": "__construct",
                        "namespace": "",
                        "aliases": {
                            "DevMode": "\\AmpProject\\DevMode",
                            "Document": "\\AmpProject\\Dom\\Document"
                        },
                        "line": 107,
                        "end_line": 116,
                        "final": false,
                        "abstract": false,
                        "static": false,
                        "visibility": "public",
                        "arguments": [
                            {
                                "name": "$dom",
                                "default": null,
                                "type": ""
                            },
                            {
                                "name": "$args",
                                "default": "array()",
                                "type": ""
                            }
                        ],
                        "doc": {
                            "description": "AMP_Base_Sanitizer constructor.",
                            "long_description": "",
                            "tags": [
                                {
                                    "name": "since",
                                    "content": "0.2"
                                },
                                {
                                    "name": "param",
                                    "content": "Represents the HTML document to sanitize.",
                                    "types": [
                                        "\\AmpProject\\Dom\\Document"
                                    ],
                                    "variable": "$dom"
                                },
                                {
                                    "name": "param",
                                    "content": "{      Args.      @type int $content_max_width      @type bool $add_placeholder      @type bool $require_https_src      @type string[] $amp_allowed_tags      @type string[] $amp_globally_allowed_attributes      @type string[] $amp_layout_allowed_attributes }",
                                    "types": [
                                        "array"
                                    ],
                                    "variable": "$args"
                                }
                            ]
                        },
                        "uses": {
                            "functions": [
                                {
                                    "name": "array_merge",
                                    "line": 109,
                                    "end_line": 109
                                }
                            ]
                        }
                    },
                    {
                        "name": "add_buffering_hooks",
                        "namespace": "",
                        "aliases": {
                            "DevMode": "\\AmpProject\\DevMode",
                            "Document": "\\AmpProject\\Dom\\Document"
                        },
                        "line": 132,
                        "end_line": 132,
                        "final": false,
                        "abstract": false,
                        "static": true,
                        "visibility": "public",
                        "arguments": [
                            {
                                "name": "$args",
                                "default": "array()",
                                "type": ""
                            }
                        ],
                        "doc": {
                            "description": "Add filters to manipulate output during output buffering before the DOM is constructed.",
                            "long_description": "Add actions and filters before the page is rendered so that the sanitizer can fix issues during output buffering. This provides an alternative to manipulating the DOM in the sanitize method. This is a static function because it is invoked before the class is instantiated, as the DOM is not available yet. This method is only called when 'amp' theme support is present. It is conceptually similar to the AMP_Base_Embed_Handler class's register_embed method.",
                            "tags": [
                                {
                                    "name": "since",
                                    "content": "1.0"
                                },
                                {
                                    "name": "see",
                                    "content": "",
                                    "refers": "\\AMP_Base_Embed_Handler::register_embed()"
                                },
                                {
                                    "name": "param",
                                    "content": "Args.",
                                    "types": [
                                        "array"
                                    ],
                                    "variable": "$args"
                                }
                            ]
                        }
                    },
                    {
                        "name": "get_selector_conversion_mapping",
                        "namespace": "",
                        "aliases": {
                            "DevMode": "\\AmpProject\\DevMode",
                            "Document": "\\AmpProject\\Dom\\Document"
                        },
                        "line": 139,
                        "end_line": 141,
                        "final": false,
                        "abstract": false,
                        "static": false,
                        "visibility": "public",
                        "arguments": [],
                        "doc": {
                            "description": "Get mapping of HTML selectors to the AMP component selectors which they may be converted into.",
                            "long_description": "",
                            "tags": [
                                {
                                    "name": "return",
                                    "content": "Mapping.",
                                    "types": [
                                        "array"
                                    ]
                                }
                            ]
                        }
                    },
                    {
                        "name": "init",
                        "namespace": "",
                        "aliases": {
                            "DevMode": "\\AmpProject\\DevMode",
                            "Document": "\\AmpProject\\Dom\\Document"
                        },
                        "line": 151,
                        "end_line": 151,
                        "final": false,
                        "abstract": false,
                        "static": false,
                        "visibility": "public",
                        "arguments": [
                            {
                                "name": "$sanitizers",
                                "default": null,
                                "type": ""
                            }
                        ],
                        "doc": {
                            "description": "Run logic before any sanitizers are run.",
                            "long_description": "After the sanitizers are instantiated but before calling sanitize on each of them, this method is called with list of all the instantiated sanitizers.",
                            "tags": [
                                {
                                    "name": "param",
                                    "content": "Sanitizers.",
                                    "types": [
                                        "\\AMP_Base_Sanitizer[]"
                                    ],
                                    "variable": "$sanitizers"
                                }
                            ]
                        }
                    },
                    {
                        "name": "sanitize",
                        "namespace": "",
                        "aliases": {
                            "DevMode": "\\AmpProject\\DevMode",
                            "Document": "\\AmpProject\\Dom\\Document"
                        },
                        "line": 156,
                        "end_line": 156,
                        "final": false,
                        "abstract": true,
                        "static": false,
                        "visibility": "public",
                        "arguments": [],
                        "doc": {
                            "description": "Sanitize the HTML contained in the DOMDocument received by the constructor",
                            "long_description": "",
                            "tags": []
                        }
                    },
                    {
                        "name": "get_scripts",
                        "namespace": "",
                        "aliases": {
                            "DevMode": "\\AmpProject\\DevMode",
                            "Document": "\\AmpProject\\Dom\\Document"
                        },
                        "line": 170,
                        "end_line": 172,
                        "final": false,
                        "abstract": false,
                        "static": false,
                        "visibility": "public",
                        "arguments": [],
                        "doc": {
                            "description": "Return array of values that would be valid as an HTML `script` element.",
                            "long_description": "Array keys are AMP element names and array values are their respective Javascript URLs from https:\/\/cdn.ampproject.org",
                            "tags": [
                                {
                                    "name": "since",
                                    "content": "0.2"
                                },
                                {
                                    "name": "return",
                                    "content": "Returns component name as array key and JavaScript URL as array value,                  respectively. Will return an empty array if sanitization has yet to be run                  or if it did not find any HTML elements to convert to AMP equivalents.",
                                    "types": [
                                        "string[]"
                                    ]
                                }
                            ]
                        }
                    },
                    {
                        "name": "get_styles",
                        "namespace": "",
                        "aliases": {
                            "DevMode": "\\AmpProject\\DevMode",
                            "Document": "\\AmpProject\\Dom\\Document"
                        },
                        "line": 184,
                        "end_line": 186,
                        "final": false,
                        "abstract": false,
                        "static": false,
                        "visibility": "public",
                        "arguments": [],
                        "doc": {
                            "description": "Return array of values that would be valid as an HTML `style` attribute.",
                            "long_description": "",
                            "tags": [
                                {
                                    "name": "since",
                                    "content": "0.4"
                                },
                                {
                                    "name": "codeCoverageIgnore",
                                    "content": ""
                                },
                                {
                                    "name": "deprecated",
                                    "content": "As of 1.0, use get_stylesheets().",
                                    "description": "As of 1.0, use get_stylesheets()."
                                },
                                {
                                    "name": "internal",
                                    "content": ""
                                },
                                {
                                    "name": "return",
                                    "content": "Mapping of CSS selectors to arrays of properties.",
                                    "types": [
                                        "array[][]"
                                    ]
                                }
                            ]
                        }
                    },
                    {
                        "name": "get_stylesheets",
                        "namespace": "",
                        "aliases": {
                            "DevMode": "\\AmpProject\\DevMode",
                            "Document": "\\AmpProject\\Dom\\Document"
                        },
                        "line": 194,
                        "end_line": 204,
                        "final": false,
                        "abstract": false,
                        "static": false,
                        "visibility": "public",
                        "arguments": [],
                        "doc": {
                            "description": "Get stylesheets.",
                            "long_description": "",
                            "tags": [
                                {
                                    "name": "since",
                                    "content": "0.7"
                                },
                                {
                                    "name": "return",
                                    "content": "Values are the CSS stylesheets. Keys are MD5 hashes of the stylesheets.",
                                    "types": [
                                        "array"
                                    ]
                                }
                            ]
                        },
                        "uses": {
                            "methods": [
                                {
                                    "name": "get_styles",
                                    "class": "\\AMP_Base_Sanitizer",
                                    "static": false,
                                    "line": 197,
                                    "end_line": 197
                                }
                            ],
                            "functions": [
                                {
                                    "name": "sprintf",
                                    "line": 198,
                                    "end_line": 198
                                },
                                {
                                    "name": "implode",
                                    "line": 198,
                                    "end_line": 198
                                },
                                {
                                    "name": "md5",
                                    "line": 200,
                                    "end_line": 200
                                }
                            ]
                        }
                    },
                    {
                        "name": "get_body_node",
                        "namespace": "",
                        "aliases": {
                            "DevMode": "\\AmpProject\\DevMode",
                            "Document": "\\AmpProject\\Dom\\Document"
                        },
                        "line": 213,
                        "end_line": 216,
                        "final": false,
                        "abstract": false,
                        "static": false,
                        "visibility": "protected",
                        "arguments": [],
                        "doc": {
                            "description": "Get HTML body as DOMElement from Dom\\Document received by the constructor.",
                            "long_description": "",
                            "tags": [
                                {
                                    "name": "codeCoverageIgnore",
                                    "content": ""
                                },
                                {
                                    "name": "deprecated",
                                    "content": "Use $this->dom->body instead.",
                                    "description": "Use $this->dom->body instead."
                                },
                                {
                                    "name": "return",
                                    "content": "The body element.",
                                    "types": [
                                        "\\DOMElement"
                                    ]
                                }
                            ]
                        },
                        "uses": {
                            "functions": [
                                {
                                    "name": "_deprecated_function",
                                    "line": 214,
                                    "end_line": 214,
                                    "deprecation_version": "1.5.0"
                                }
                            ]
                        }
                    },
                    {
                        "name": "sanitize_dimension",
                        "namespace": "",
                        "aliases": {
                            "DevMode": "\\AmpProject\\DevMode",
                            "Document": "\\AmpProject\\Dom\\Document"
                        },
                        "line": 226,
                        "end_line": 253,
                        "final": false,
                        "abstract": false,
                        "static": false,
                        "visibility": "public",
                        "arguments": [
                            {
                                "name": "$value",
                                "default": null,
                                "type": ""
                            },
                            {
                                "name": "$dimension",
                                "default": null,
                                "type": ""
                            }
                        ],
                        "doc": {
                            "description": "Sanitizes a CSS dimension specifier while being sensitive to dimension context.",
                            "long_description": "",
                            "tags": [
                                {
                                    "name": "param",
                                    "content": "A valid CSS dimension specifier; e.g. 50, 50px, 50%. Can be 'auto' for width.",
                                    "types": [
                                        "string"
                                    ],
                                    "variable": "$value"
                                },
                                {
                                    "name": "param",
                                    "content": "Dimension, either 'width' or 'height'.",
                                    "types": [
                                        "string"
                                    ],
                                    "variable": "$dimension"
                                },
                                {
                                    "name": "return",
                                    "content": "Returns a numeric dimension value, 'auto', or an empty string.",
                                    "types": [
                                        "float",
                                        "int",
                                        "string"
                                    ]
                                }
                            ]
                        },
                        "uses": {
                            "functions": [
                                {
                                    "name": "is_numeric",
                                    "line": 239,
                                    "end_line": 239
                                },
                                {
                                    "name": "max",
                                    "line": 240,
                                    "end_line": 240
                                },
                                {
                                    "name": "absint",
                                    "line": 244,
                                    "end_line": 244
                                },
                                {
                                    "name": "absint",
                                    "line": 248,
                                    "end_line": 248
                                },
                                {
                                    "name": "round",
                                    "line": 249,
                                    "end_line": 249
                                }
                            ],
                            "methods": [
                                {
                                    "name": "endswith",
                                    "class": "\\AMP_String_Utils",
                                    "static": true,
                                    "line": 243,
                                    "end_line": 243
                                },
                                {
                                    "name": "endswith",
                                    "class": "\\AMP_String_Utils",
                                    "static": true,
                                    "line": 247,
                                    "end_line": 247
                                }
                            ]
                        }
                    },
                    {
                        "name": "is_empty_attribute_value",
                        "namespace": "",
                        "aliases": {
                            "DevMode": "\\AmpProject\\DevMode",
                            "Document": "\\AmpProject\\Dom\\Document"
                        },
                        "line": 261,
                        "end_line": 263,
                        "final": false,
                        "abstract": false,
                        "static": false,
                        "visibility": "public",
                        "arguments": [
                            {
                                "name": "$value",
                                "default": null,
                                "type": ""
                            }
                        ],
                        "doc": {
                            "description": "Determine if an attribute value is empty.",
                            "long_description": "",
                            "tags": [
                                {
                                    "name": "param",
                                    "content": "Attribute value.",
                                    "types": [
                                        "string",
                                        "null"
                                    ],
                                    "variable": "$value"
                                },
                                {
                                    "name": "return",
                                    "content": "True if empty, false if not.",
                                    "types": [
                                        "bool"
                                    ]
                                }
                            ]
                        }
                    },
                    {
                        "name": "set_layout",
                        "namespace": "",
                        "aliases": {
                            "DevMode": "\\AmpProject\\DevMode",
                            "Document": "\\AmpProject\\Dom\\Document"
                        },
                        "line": 283,
                        "end_line": 357,
                        "final": false,
                        "abstract": false,
                        "static": false,
                        "visibility": "public",
                        "arguments": [
                            {
                                "name": "$attributes",
                                "default": null,
                                "type": ""
                            }
                        ],
                        "doc": {
                            "description": "Sets the layout, and possibly the 'height' and 'width' attributes.",
                            "long_description": "",
                            "tags": [
                                {
                                    "name": "param",
                                    "content": "{      Attributes.      @type string     $bottom      @type int|string $height      @type string     $layout      @type string     $left      @type string     $position      @type string     $right      @type string     $style      @type string     $top      @type int|string $width }",
                                    "types": [
                                        "array"
                                    ],
                                    "variable": "$attributes"
                                },
                                {
                                    "name": "return",
                                    "content": "Attributes.",
                                    "types": [
                                        "array"
                                    ]
                                }
                            ]
                        },
                        "uses": {
                            "methods": [
                                {
                                    "name": "parse_style_string",
                                    "class": "\\AMP_Base_Sanitizer",
                                    "static": false,
                                    "line": 290,
                                    "end_line": 290
                                },
                                {
                                    "name": "reassemble_style_string",
                                    "class": "\\AMP_Base_Sanitizer",
                                    "static": false,
                                    "line": 304,
                                    "end_line": 304
                                },
                                {
                                    "name": "reassemble_style_string",
                                    "class": "\\AMP_Base_Sanitizer",
                                    "static": false,
                                    "line": 321,
                                    "end_line": 321
                                },
                                {
                                    "name": "reassemble_style_string",
                                    "class": "\\AMP_Base_Sanitizer",
                                    "static": false,
                                    "line": 335,
                                    "end_line": 335
                                }
                            ]
                        }
                    },
                    {
                        "name": "add_or_append_attribute",
                        "namespace": "",
                        "aliases": {
                            "DevMode": "\\AmpProject\\DevMode",
                            "Document": "\\AmpProject\\Dom\\Document"
                        },
                        "line": 378,
                        "end_line": 384,
                        "final": false,
                        "abstract": false,
                        "static": false,
                        "visibility": "public",
                        "arguments": [
                            {
                                "name": "$attributes",
                                "default": null,
                                "type": ""
                            },
                            {
                                "name": "$key",
                                "default": null,
                                "type": ""
                            },
                            {
                                "name": "$value",
                                "default": null,
                                "type": ""
                            },
                            {
                                "name": "$separator",
                                "default": "' '",
                                "type": ""
                            }
                        ],
                        "doc": {
                            "description": "Adds or appends key and value to list of attributes",
                            "long_description": "Adds key and value to list of attributes, or if the key already exists in the array it concatenates to existing attribute separator by a space or other supplied separator.",
                            "tags": [
                                {
                                    "name": "param",
                                    "content": "{      Attributes.      @type int $height      @type int $width      @type string $sizes      @type string $class      @type string $layout }",
                                    "types": [
                                        "string[]"
                                    ],
                                    "variable": "$attributes"
                                },
                                {
                                    "name": "param",
                                    "content": "Valid associative array index to add.",
                                    "types": [
                                        "string"
                                    ],
                                    "variable": "$key"
                                },
                                {
                                    "name": "param",
                                    "content": "Value to add or append to array indexed at the key.",
                                    "types": [
                                        "string"
                                    ],
                                    "variable": "$value"
                                },
                                {
                                    "name": "param",
                                    "content": "Optional; defaults to space but some other separator if needed.",
                                    "types": [
                                        "string"
                                    ],
                                    "variable": "$separator"
                                }
                            ]
                        },
                        "uses": {
                            "functions": [
                                {
                                    "name": "trim",
                                    "line": 380,
                                    "end_line": 380
                                }
                            ]
                        }
                    },
                    {
                        "name": "maybe_enforce_https_src",
                        "namespace": "",
                        "aliases": {
                            "DevMode": "\\AmpProject\\DevMode",
                            "Document": "\\AmpProject\\Dom\\Document"
                        },
                        "line": 395,
                        "end_line": 410,
                        "final": false,
                        "abstract": false,
                        "static": false,
                        "visibility": "public",
                        "arguments": [
                            {
                                "name": "$src",
                                "default": null,
                                "type": ""
                            },
                            {
                                "name": "$force_https",
                                "default": "false",
                                "type": ""
                            }
                        ],
                        "doc": {
                            "description": "Decide if we should remove a src attribute if https is required.",
                            "long_description": "If not required, the implementing class may want to try and force https instead.",
                            "tags": [
                                {
                                    "name": "param",
                                    "content": "URL to convert to HTTPS if forced, or made empty if $args['require_https_src'].",
                                    "types": [
                                        "string"
                                    ],
                                    "variable": "$src"
                                },
                                {
                                    "name": "param",
                                    "content": "Force setting of HTTPS if true.",
                                    "types": [
                                        "boolean"
                                    ],
                                    "variable": "$force_https"
                                },
                                {
                                    "name": "return",
                                    "content": "URL which may have been updated with HTTPS, or may have been made empty.",
                                    "types": [
                                        "string"
                                    ]
                                }
                            ]
                        },
                        "uses": {
                            "functions": [
                                {
                                    "name": "strtok",
                                    "line": 396,
                                    "end_line": 396
                                },
                                {
                                    "name": "set_url_scheme",
                                    "line": 405,
                                    "end_line": 405
                                }
                            ]
                        }
                    },
                    {
                        "name": "is_document_in_dev_mode",
                        "namespace": "",
                        "aliases": {
                            "DevMode": "\\AmpProject\\DevMode",
                            "Document": "\\AmpProject\\Dom\\Document"
                        },
                        "line": 421,
                        "end_line": 424,
                        "final": false,
                        "abstract": false,
                        "static": false,
                        "visibility": "protected",
                        "arguments": [],
                        "doc": {
                            "description": "Check whether the document of a given node is in dev mode.",
                            "long_description": "",
                            "tags": [
                                {
                                    "name": "since",
                                    "content": "1.3"
                                },
                                {
                                    "name": "deprecated",
                                    "content": "Use AmpProject\\DevMode::isActiveForDocument( $document ) instead.",
                                    "description": "Use AmpProject\\DevMode::isActiveForDocument( $document ) instead."
                                },
                                {
                                    "name": "return",
                                    "content": "Whether the document is in dev mode.",
                                    "types": [
                                        "bool"
                                    ]
                                }
                            ]
                        },
                        "uses": {
                            "functions": [
                                {
                                    "name": "_deprecated_function",
                                    "line": 422,
                                    "end_line": 422,
                                    "deprecation_version": "1.5"
                                }
                            ],
                            "methods": [
                                {
                                    "name": "isActiveForDocument",
                                    "class": "\\AmpProject\\DevMode",
                                    "static": true,
                                    "line": 423,
                                    "end_line": 423
                                }
                            ]
                        }
                    },
                    {
                        "name": "has_dev_mode_exemption",
                        "namespace": "",
                        "aliases": {
                            "DevMode": "\\AmpProject\\DevMode",
                            "Document": "\\AmpProject\\Dom\\Document"
                        },
                        "line": 436,
                        "end_line": 439,
                        "final": false,
                        "abstract": false,
                        "static": false,
                        "visibility": "protected",
                        "arguments": [
                            {
                                "name": "$node",
                                "default": null,
                                "type": "\\DOMNode"
                            }
                        ],
                        "doc": {
                            "description": "Check whether a node is exempt from validation during dev mode.",
                            "long_description": "",
                            "tags": [
                                {
                                    "name": "since",
                                    "content": "1.3"
                                },
                                {
                                    "name": "deprecated",
                                    "content": "Use AmpProject\\DevMode::hasExemptionForNode( $node ) instead.",
                                    "description": "Use AmpProject\\DevMode::hasExemptionForNode( $node ) instead."
                                },
                                {
                                    "name": "param",
                                    "content": "Node to check.",
                                    "types": [
                                        "\\DOMNode"
                                    ],
                                    "variable": "$node"
                                },
                                {
                                    "name": "return",
                                    "content": "Whether the node should be exempt during dev mode.",
                                    "types": [
                                        "bool"
                                    ]
                                }
                            ]
                        },
                        "uses": {
                            "functions": [
                                {
                                    "name": "_deprecated_function",
                                    "line": 437,
                                    "end_line": 437,
                                    "deprecation_version": "1.5"
                                }
                            ],
                            "methods": [
                                {
                                    "name": "hasExemptionForNode",
                                    "class": "\\AmpProject\\DevMode",
                                    "static": true,
                                    "line": 438,
                                    "end_line": 438
                                }
                            ]
                        }
                    },
                    {
                        "name": "is_exempt_from_validation",
                        "namespace": "",
                        "aliases": {
                            "DevMode": "\\AmpProject\\DevMode",
                            "Document": "\\AmpProject\\Dom\\Document"
                        },
                        "line": 449,
                        "end_line": 452,
                        "final": false,
                        "abstract": false,
                        "static": false,
                        "visibility": "protected",
                        "arguments": [
                            {
                                "name": "$node",
                                "default": null,
                                "type": "\\DOMNode"
                            }
                        ],
                        "doc": {
                            "description": "Check whether a certain node should be exempt from validation.",
                            "long_description": "",
                            "tags": [
                                {
                                    "name": "deprecated",
                                    "content": "Use AmpProject\\DevMode::isExemptFromValidation( $node ) instead.",
                                    "description": "Use AmpProject\\DevMode::isExemptFromValidation( $node ) instead."
                                },
                                {
                                    "name": "param",
                                    "content": "Node to check.",
                                    "types": [
                                        "\\DOMNode"
                                    ],
                                    "variable": "$node"
                                },
                                {
                                    "name": "return",
                                    "content": "Whether the node should be exempt from validation.",
                                    "types": [
                                        "bool"
                                    ]
                                }
                            ]
                        },
                        "uses": {
                            "functions": [
                                {
                                    "name": "_deprecated_function",
                                    "line": 450,
                                    "end_line": 450,
                                    "deprecation_version": "1.5"
                                }
                            ],
                            "methods": [
                                {
                                    "name": "isExemptFromValidation",
                                    "class": "\\AmpProject\\DevMode",
                                    "static": true,
                                    "line": 451,
                                    "end_line": 451
                                }
                            ]
                        }
                    },
                    {
                        "name": "remove_invalid_child",
                        "namespace": "",
                        "aliases": {
                            "DevMode": "\\AmpProject\\DevMode",
                            "Document": "\\AmpProject\\Dom\\Document"
                        },
                        "line": 466,
                        "end_line": 488,
                        "final": false,
                        "abstract": false,
                        "static": false,
                        "visibility": "public",
                        "arguments": [
                            {
                                "name": "$node",
                                "default": null,
                                "type": ""
                            },
                            {
                                "name": "$validation_error",
                                "default": "array()",
                                "type": ""
                            }
                        ],
                        "doc": {
                            "description": "Removes an invalid child of a node.",
                            "long_description": "Also, calls the mutation callback for it. This tracks all the nodes that were removed.",
                            "tags": [
                                {
                                    "name": "since",
                                    "content": "0.7"
                                },
                                {
                                    "name": "param",
                                    "content": "The node to remove.",
                                    "types": [
                                        "\\DOMNode",
                                        "\\DOMElement"
                                    ],
                                    "variable": "$node"
                                },
                                {
                                    "name": "param",
                                    "content": "Validation error details.",
                                    "types": [
                                        "array"
                                    ],
                                    "variable": "$validation_error"
                                },
                                {
                                    "name": "return",
                                    "content": "Whether the node should have been removed, that is, that the node was sanitized for validity.",
                                    "types": [
                                        "bool"
                                    ]
                                }
                            ]
                        },
                        "uses": {
                            "methods": [
                                {
                                    "name": "isExemptFromValidation",
                                    "class": "\\AmpProject\\DevMode",
                                    "static": true,
                                    "line": 467,
                                    "end_line": 467
                                },
                                {
                                    "name": "should_sanitize_validation_error",
                                    "class": "\\AMP_Base_Sanitizer",
                                    "static": false,
                                    "line": 476,
                                    "end_line": 476
                                },
                                {
                                    "name": "removeChild",
                                    "class": "$node->parentNode",
                                    "static": false,
                                    "line": 483,
                                    "end_line": 483
                                }
                            ],
                            "functions": [
                                {
                                    "name": "in_array",
                                    "line": 472,
                                    "end_line": 472
                                },
                                {
                                    "name": "compact",
                                    "line": 476,
                                    "end_line": 476
                                }
                            ]
                        }
                    },
                    {
                        "name": "remove_invalid_attribute",
                        "namespace": "",
                        "aliases": {
                            "DevMode": "\\AmpProject\\DevMode",
                            "Document": "\\AmpProject\\Dom\\Document"
                        },
                        "line": 504,
                        "end_line": 532,
                        "final": false,
                        "abstract": false,
                        "static": false,
                        "visibility": "public",
                        "arguments": [
                            {
                                "name": "$element",
                                "default": null,
                                "type": ""
                            },
                            {
                                "name": "$attribute",
                                "default": null,
                                "type": ""
                            },
                            {
                                "name": "$validation_error",
                                "default": "array()",
                                "type": ""
                            },
                            {
                                "name": "$attr_spec",
                                "default": "array()",
                                "type": ""
                            }
                        ],
                        "doc": {
                            "description": "Removes an invalid attribute of a node.",
                            "long_description": "Also, calls the mutation callback for it. This tracks all the attributes that were removed.",
                            "tags": [
                                {
                                    "name": "since",
                                    "content": "0.7"
                                },
                                {
                                    "name": "param",
                                    "content": "The node for which to remove the attribute.",
                                    "types": [
                                        "\\DOMElement"
                                    ],
                                    "variable": "$element"
                                },
                                {
                                    "name": "param",
                                    "content": "The attribute to remove from the element.",
                                    "types": [
                                        "\\DOMAttr",
                                        "string"
                                    ],
                                    "variable": "$attribute"
                                },
                                {
                                    "name": "param",
                                    "content": "Validation error details.",
                                    "types": [
                                        "array"
                                    ],
                                    "variable": "$validation_error"
                                },
                                {
                                    "name": "param",
                                    "content": "Attribute spec.",
                                    "types": [
                                        "array"
                                    ],
                                    "variable": "$attr_spec"
                                },
                                {
                                    "name": "return",
                                    "content": "Whether the node should have been removed, that is, that the node was sanitized for validity.",
                                    "types": [
                                        "bool"
                                    ]
                                }
                            ]
                        },
                        "uses": {
                            "methods": [
                                {
                                    "name": "isExemptFromValidation",
                                    "class": "\\AmpProject\\DevMode",
                                    "static": true,
                                    "line": 505,
                                    "end_line": 505
                                },
                                {
                                    "name": "getAttributeNode",
                                    "class": "$element",
                                    "static": false,
                                    "line": 510,
                                    "end_line": 510
                                },
                                {
                                    "name": "should_sanitize_validation_error",
                                    "class": "\\AMP_Base_Sanitizer",
                                    "static": false,
                                    "line": 520,
                                    "end_line": 520
                                },
                                {
                                    "name": "removeAttributeNode",
                                    "class": "$element",
                                    "static": false,
                                    "line": 527,
                                    "end_line": 527
                                }
                            ],
                            "functions": [
                                {
                                    "name": "is_string",
                                    "line": 509,
                                    "end_line": 509
                                },
                                {
                                    "name": "compact",
                                    "line": 520,
                                    "end_line": 520
                                }
                            ]
                        }
                    },
                    {
                        "name": "should_sanitize_validation_error",
                        "namespace": "",
                        "aliases": {
                            "DevMode": "\\AmpProject\\DevMode",
                            "Document": "\\AmpProject\\Dom\\Document"
                        },
                        "line": 543,
                        "end_line": 549,
                        "final": false,
                        "abstract": false,
                        "static": false,
                        "visibility": "public",
                        "arguments": [
                            {
                                "name": "$validation_error",
                                "default": null,
                                "type": ""
                            },
                            {
                                "name": "$data",
                                "default": "array()",
                                "type": ""
                            }
                        ],
                        "doc": {
                            "description": "Check whether or not sanitization should occur in response to validation error.",
                            "long_description": "",
                            "tags": [
                                {
                                    "name": "since",
                                    "content": "1.0"
                                },
                                {
                                    "name": "param",
                                    "content": "Validation error.",
                                    "types": [
                                        "array"
                                    ],
                                    "variable": "$validation_error"
                                },
                                {
                                    "name": "param",
                                    "content": "Data including the node.",
                                    "types": [
                                        "array"
                                    ],
                                    "variable": "$data"
                                },
                                {
                                    "name": "return",
                                    "content": "Whether to sanitize.",
                                    "types": [
                                        "bool"
                                    ]
                                }
                            ]
                        },
                        "uses": {
                            "functions": [
                                {
                                    "name": "is_callable",
                                    "line": 544,
                                    "end_line": 544
                                },
                                {
                                    "name": "call_user_func",
                                    "line": 548,
                                    "end_line": 548
                                }
                            ],
                            "methods": [
                                {
                                    "name": "prepare_validation_error",
                                    "class": "\\AMP_Base_Sanitizer",
                                    "static": false,
                                    "line": 547,
                                    "end_line": 547
                                }
                            ]
                        }
                    },
                    {
                        "name": "prepare_validation_error",
                        "namespace": "",
                        "aliases": {
                            "DevMode": "\\AmpProject\\DevMode",
                            "Document": "\\AmpProject\\Dom\\Document"
                        },
                        "line": 566,
                        "end_line": 632,
                        "final": false,
                        "abstract": false,
                        "static": false,
                        "visibility": "public",
                        "arguments": [
                            {
                                "name": "$error",
                                "default": "array()",
                                "type": "array"
                            },
                            {
                                "name": "$data",
                                "default": "array()",
                                "type": "array"
                            }
                        ],
                        "doc": {
                            "description": "Prepare validation error.",
                            "long_description": "",
                            "tags": [
                                {
                                    "name": "param",
                                    "content": "{     Error.     @type string $code Error code. }",
                                    "types": [
                                        "array"
                                    ],
                                    "variable": "$error"
                                },
                                {
                                    "name": "param",
                                    "content": "{     Data.     @type DOMElement|DOMNode $node The removed node. }",
                                    "types": [
                                        "array"
                                    ],
                                    "variable": "$data"
                                },
                                {
                                    "name": "return",
                                    "content": "Error.",
                                    "types": [
                                        "array"
                                    ]
                                }
                            ]
                        },
                        "uses": {
                            "methods": [
                                {
                                    "name": "hasAttribute",
                                    "class": "$node",
                                    "static": false,
                                    "line": 597,
                                    "end_line": 597
                                },
                                {
                                    "name": "hasAttributes",
                                    "class": "$node->parentNode",
                                    "static": false,
                                    "line": 617,
                                    "end_line": 617
                                }
                            ],
                            "functions": [
                                {
                                    "name": "strpos",
                                    "line": 602,
                                    "end_line": 602
                                },
                                {
                                    "name": "add_query_arg",
                                    "line": 603,
                                    "end_line": 603
                                },
                                {
                                    "name": "strpos",
                                    "line": 604,
                                    "end_line": 604
                                },
                                {
                                    "name": "add_query_arg",
                                    "line": 605,
                                    "end_line": 605
                                },
                                {
                                    "name": "preg_match",
                                    "line": 613,
                                    "end_line": 613
                                },
                                {
                                    "name": "trim",
                                    "line": 624,
                                    "end_line": 624
                                }
                            ]
                        }
                    },
                    {
                        "name": "clean_up_after_attribute_removal",
                        "namespace": "",
                        "aliases": {
                            "DevMode": "\\AmpProject\\DevMode",
                            "Document": "\\AmpProject\\Dom\\Document"
                        },
                        "line": 642,
                        "end_line": 657,
                        "final": false,
                        "abstract": false,
                        "static": false,
                        "visibility": "protected",
                        "arguments": [
                            {
                                "name": "$element",
                                "default": null,
                                "type": ""
                            },
                            {
                                "name": "$attribute",
                                "default": null,
                                "type": ""
                            }
                        ],
                        "doc": {
                            "description": "Cleans up artifacts after the removal of an attribute node.",
                            "long_description": "",
                            "tags": [
                                {
                                    "name": "since",
                                    "content": "1.3"
                                },
                                {
                                    "name": "param",
                                    "content": "The node for which the attribute was removed.",
                                    "types": [
                                        "\\DOMElement"
                                    ],
                                    "variable": "$element"
                                },
                                {
                                    "name": "param",
                                    "content": "The attribute that was removed.",
                                    "types": [
                                        "\\DOMAttr"
                                    ],
                                    "variable": "$attribute"
                                }
                            ]
                        },
                        "uses": {
                            "methods": [
                                {
                                    "name": "hasAttribute",
                                    "class": "$element",
                                    "static": false,
                                    "line": 652,
                                    "end_line": 652
                                },
                                {
                                    "name": "removeAttribute",
                                    "class": "$element",
                                    "static": false,
                                    "line": 653,
                                    "end_line": 653
                                }
                            ]
                        }
                    },
                    {
                        "name": "get_data_amp_attributes",
                        "namespace": "",
                        "aliases": {
                            "DevMode": "\\AmpProject\\DevMode",
                            "Document": "\\AmpProject\\Dom\\Document"
                        },
                        "line": 665,
                        "end_line": 681,
                        "final": false,
                        "abstract": false,
                        "static": false,
                        "visibility": "public",
                        "arguments": [
                            {
                                "name": "$node",
                                "default": null,
                                "type": ""
                            }
                        ],
                        "doc": {
                            "description": "Get data-amp-* values from the parent node 'figure' added by editor block.",
                            "long_description": "",
                            "tags": [
                                {
                                    "name": "param",
                                    "content": "Base node.",
                                    "types": [
                                        "\\DOMElement"
                                    ],
                                    "variable": "$node"
                                },
                                {
                                    "name": "return",
                                    "content": "AMP data array.",
                                    "types": [
                                        "array"
                                    ]
                                }
                            ]
                        },
                        "uses": {
                            "methods": [
                                {
                                    "name": "get_node_attributes_as_assoc_array",
                                    "class": "\\AMP_DOM_Utils",
                                    "static": true,
                                    "line": 671,
                                    "end_line": 671
                                }
                            ],
                            "functions": [
                                {
                                    "name": "filter_var",
                                    "line": 675,
                                    "end_line": 675
                                }
                            ]
                        }
                    },
                    {
                        "name": "filter_data_amp_attributes",
                        "namespace": "",
                        "aliases": {
                            "DevMode": "\\AmpProject\\DevMode",
                            "Document": "\\AmpProject\\Dom\\Document"
                        },
                        "line": 690,
                        "end_line": 698,
                        "final": false,
                        "abstract": false,
                        "static": false,
                        "visibility": "public",
                        "arguments": [
                            {
                                "name": "$attributes",
                                "default": null,
                                "type": ""
                            },
                            {
                                "name": "$amp_data",
                                "default": null,
                                "type": ""
                            }
                        ],
                        "doc": {
                            "description": "Set AMP attributes.",
                            "long_description": "",
                            "tags": [
                                {
                                    "name": "param",
                                    "content": "Array of attributes.",
                                    "types": [
                                        "array"
                                    ],
                                    "variable": "$attributes"
                                },
                                {
                                    "name": "param",
                                    "content": "Array of AMP attributes.",
                                    "types": [
                                        "array"
                                    ],
                                    "variable": "$amp_data"
                                },
                                {
                                    "name": "return",
                                    "content": "Updated attributes.",
                                    "types": [
                                        "array"
                                    ]
                                }
                            ]
                        }
                    },
                    {
                        "name": "filter_attachment_layout_attributes",
                        "namespace": "",
                        "aliases": {
                            "DevMode": "\\AmpProject\\DevMode",
                            "Document": "\\AmpProject\\Dom\\Document"
                        },
                        "line": 708,
                        "end_line": 734,
                        "final": false,
                        "abstract": false,
                        "static": false,
                        "visibility": "public",
                        "arguments": [
                            {
                                "name": "$node",
                                "default": null,
                                "type": ""
                            },
                            {
                                "name": "$new_attributes",
                                "default": null,
                                "type": ""
                            },
                            {
                                "name": "$layout",
                                "default": null,
                                "type": ""
                            }
                        ],
                        "doc": {
                            "description": "Set attributes to node's parent element according to layout.",
                            "long_description": "",
                            "tags": [
                                {
                                    "name": "param",
                                    "content": "Node.",
                                    "types": [
                                        "\\DOMElement"
                                    ],
                                    "variable": "$node"
                                },
                                {
                                    "name": "param",
                                    "content": "Attributes array.",
                                    "types": [
                                        "array"
                                    ],
                                    "variable": "$new_attributes"
                                },
                                {
                                    "name": "param",
                                    "content": "Layout.",
                                    "types": [
                                        "string"
                                    ],
                                    "variable": "$layout"
                                },
                                {
                                    "name": "return",
                                    "content": "New attributes.",
                                    "types": [
                                        "array"
                                    ]
                                }
                            ]
                        },
                        "uses": {
                            "methods": [
                                {
                                    "name": "setAttribute",
                                    "class": "$node->parentNode",
                                    "static": false,
                                    "line": 716,
                                    "end_line": 716
                                },
                                {
                                    "name": "setAttribute",
                                    "class": "$node->parentNode",
                                    "static": false,
                                    "line": 723,
                                    "end_line": 723
                                },
                                {
                                    "name": "setAttribute",
                                    "class": "$node->parentNode",
                                    "static": false,
                                    "line": 726,
                                    "end_line": 726
                                }
                            ]
                        }
                    },
                    {
                        "name": "parse_style_string",
                        "namespace": "",
                        "aliases": {
                            "DevMode": "\\AmpProject\\DevMode",
                            "Document": "\\AmpProject\\Dom\\Document"
                        },
                        "line": 742,
                        "end_line": 756,
                        "final": false,
                        "abstract": false,
                        "static": false,
                        "visibility": "protected",
                        "arguments": [
                            {
                                "name": "$style_string",
                                "default": null,
                                "type": ""
                            }
                        ],
                        "doc": {
                            "description": "Parse a style string into an associative array of style attributes.",
                            "long_description": "",
                            "tags": [
                                {
                                    "name": "param",
                                    "content": "Style string to parse.",
                                    "types": [
                                        "string"
                                    ],
                                    "variable": "$style_string"
                                },
                                {
                                    "name": "return",
                                    "content": "Associative array of style attributes.",
                                    "types": [
                                        "string[]"
                                    ]
                                }
                            ]
                        },
                        "uses": {
                            "functions": [
                                {
                                    "name": "trim",
                                    "line": 744,
                                    "end_line": 744
                                },
                                {
                                    "name": "preg_split",
                                    "line": 745,
                                    "end_line": 745
                                },
                                {
                                    "name": "count",
                                    "line": 747,
                                    "end_line": 747
                                },
                                {
                                    "name": "array_pop",
                                    "line": 749,
                                    "end_line": 749
                                },
                                {
                                    "name": "array_chunk",
                                    "line": 752,
                                    "end_line": 752
                                },
                                {
                                    "name": "array_combine",
                                    "line": 755,
                                    "end_line": 755
                                },
                                {
                                    "name": "array_column",
                                    "line": 755,
                                    "end_line": 755
                                },
                                {
                                    "name": "array_column",
                                    "line": 755,
                                    "end_line": 755
                                }
                            ]
                        }
                    },
                    {
                        "name": "reassemble_style_string",
                        "namespace": "",
                        "aliases": {
                            "DevMode": "\\AmpProject\\DevMode",
                            "Document": "\\AmpProject\\Dom\\Document"
                        },
                        "line": 764,
                        "end_line": 783,
                        "final": false,
                        "abstract": false,
                        "static": false,
                        "visibility": "protected",
                        "arguments": [
                            {
                                "name": "$styles",
                                "default": null,
                                "type": ""
                            }
                        ],
                        "doc": {
                            "description": "Reassemble a style string that can be used in a 'style' attribute.",
                            "long_description": "",
                            "tags": [
                                {
                                    "name": "param",
                                    "content": "Associative array of styles to reassemble into a string.",
                                    "types": [
                                        "array"
                                    ],
                                    "variable": "$styles"
                                },
                                {
                                    "name": "return",
                                    "content": "Reassembled style string.",
                                    "types": [
                                        "string"
                                    ]
                                }
                            ]
                        },
                        "uses": {
                            "functions": [
                                {
                                    "name": "is_array",
                                    "line": 765,
                                    "end_line": 765
                                },
                                {
                                    "name": "array_filter",
                                    "line": 770,
                                    "end_line": 770
                                },
                                {
                                    "name": "array_reduce",
                                    "line": 772,
                                    "end_line": 782
                                },
                                {
                                    "name": "array_keys",
                                    "line": 773,
                                    "end_line": 773
                                }
                            ]
                        }
                    },
                    {
                        "name": "get_validate_response_data",
                        "namespace": "",
                        "aliases": {
                            "DevMode": "\\AmpProject\\DevMode",
                            "Document": "\\AmpProject\\Dom\\Document"
                        },
                        "line": 793,
                        "end_line": 795,
                        "final": false,
                        "abstract": false,
                        "static": false,
                        "visibility": "public",
                        "arguments": [],
                        "doc": {
                            "description": "Get data that is returned in validate responses.",
                            "long_description": "The array returned is merged with the overall validate response data.",
                            "tags": [
                                {
                                    "name": "see",
                                    "content": "",
                                    "refers": "\\AMP_Validation_Manager::get_validate_response_data()"
                                },
                                {
                                    "name": "return",
                                    "content": "Validate response data.",
                                    "types": [
                                        "array"
                                    ]
                                }
                            ]
                        }
                    }
                ],
                "doc": {
                    "description": "Class AMP_Base_Sanitizer",
                    "long_description": "",
                    "tags": [
                        {
                            "name": "since",
                            "content": "0.2"
                        }
                    ]
                }
            }
        ]
    },
    "101": {
        "file": {
            "description": "Deprecated functions.",
            "long_description": "",
            "tags": [
                {
                    "name": "package",
                    "content": "AMP"
                }
            ]
        },
        "path": "includes\/deprecated.php",
        "root": "\/app\/public\/content\/plugins\/amp",
        "includes": [
            {
                "name": "",
                "line": 92,
                "type": "Require Once"
            }
        ],
        "functions": [
            {
                "name": "amp_load_classes",
                "namespace": "global",
                "aliases": [],
                "line": 16,
                "end_line": 18,
                "arguments": [],
                "doc": {
                    "description": "Load classes.",
                    "long_description": "",
                    "tags": [
                        {
                            "name": "since",
                            "content": "0.2"
                        },
                        {
                            "name": "codeCoverageIgnore",
                            "content": ""
                        },
                        {
                            "name": "deprecated",
                            "content": "As of 0.6 since autoloading is now employed.",
                            "description": "As of 0.6 since autoloading is now employed."
                        },
                        {
                            "name": "internal",
                            "content": ""
                        }
                    ]
                },
                "hooks": [],
                "uses": {
                    "functions": [
                        {
                            "name": "_deprecated_function",
                            "line": 17,
                            "end_line": 17,
                            "deprecation_version": "0.6"
                        }
                    ]
                }
            },
            {
                "name": "amp_maybe_add_actions",
                "namespace": "global",
                "aliases": [],
                "line": 32,
                "end_line": 81,
                "arguments": [],
                "doc": {
                    "description": "Conditionally add AMP actions or render the transitional mode template(s).",
                    "long_description": "If the request is for an AMP page and this is in 'canonical mode,' redirect to the non-AMP page. It won't need this plugin's template system, nor the frontend actions like the 'rel' link.",
                    "tags": [
                        {
                            "name": "codeCoverageIgnore",
                            "content": ""
                        },
                        {
                            "name": "deprecated",
                            "content": "This function is not used when 'amp' theme support is added.",
                            "description": "This function is not used when 'amp' theme support is added."
                        },
                        {
                            "name": "global",
                            "content": "WP_Query $wp_query"
                        },
                        {
                            "name": "since",
                            "content": "0.2"
                        },
                        {
                            "name": "return",
                            "content": "",
                            "types": [
                                "void"
                            ]
                        }
                    ]
                },
                "hooks": [],
                "uses": {
                    "functions": [
                        {
                            "name": "_deprecated_function",
                            "line": 33,
                            "end_line": 33,
                            "deprecation_version": "1.5"
                        },
                        {
                            "name": "current_theme_supports",
                            "line": 36,
                            "end_line": 36
                        },
                        {
                            "name": "is_singular",
                            "line": 42,
                            "end_line": 42
                        },
                        {
                            "name": "is_feed",
                            "line": 42,
                            "end_line": 42
                        },
                        {
                            "name": "amp_is_request",
                            "line": 46,
                            "end_line": 46
                        },
                        {
                            "name": "get_queried_object",
                            "line": 53,
                            "end_line": 53
                        },
                        {
                            "name": "amp_is_post_supported",
                            "line": 54,
                            "end_line": 54
                        },
                        {
                            "name": "wp_safe_redirect",
                            "line": 60,
                            "end_line": 60
                        },
                        {
                            "name": "get_permalink",
                            "line": 60,
                            "end_line": 60
                        },
                        {
                            "name": "current_user_can",
                            "line": 60,
                            "end_line": 60
                        },
                        {
                            "name": "wp_parse_str",
                            "line": 71,
                            "end_line": 71
                        },
                        {
                            "name": "amp_get_slug",
                            "line": 72,
                            "end_line": 72
                        },
                        {
                            "name": "amp_get_slug",
                            "line": 72,
                            "end_line": 72
                        },
                        {
                            "name": "wp_safe_redirect",
                            "line": 73,
                            "end_line": 73
                        },
                        {
                            "name": "amp_get_permalink",
                            "line": 73,
                            "end_line": 73
                        },
                        {
                            "name": "amp_prepare_render",
                            "line": 77,
                            "end_line": 77
                        },
                        {
                            "name": "amp_add_frontend_actions",
                            "line": 79,
                            "end_line": 79
                        }
                    ]
                }
            },
            {
                "name": "amp_add_post_template_actions",
                "namespace": "global",
                "aliases": [],
                "line": 90,
                "end_line": 94,
                "arguments": [],
                "doc": {
                    "description": "Add post template actions.",
                    "long_description": "",
                    "tags": [
                        {
                            "name": "since",
                            "content": "0.2"
                        },
                        {
                            "name": "codeCoverageIgnore",
                            "content": ""
                        },
                        {
                            "name": "deprecated",
                            "content": "This function is not used when 'amp' theme support is added.",
                            "description": "This function is not used when 'amp' theme support is added."
                        }
                    ]
                },
                "hooks": [],
                "uses": {
                    "functions": [
                        {
                            "name": "_deprecated_function",
                            "line": 91,
                            "end_line": 91,
                            "deprecation_version": "1.5"
                        },
                        {
                            "name": "amp_post_template_init_hooks",
                            "line": 93,
                            "end_line": 93
                        }
                    ]
                }
            },
            {
                "name": "amp_prepare_render",
                "namespace": "global",
                "aliases": [],
                "line": 104,
                "end_line": 107,
                "arguments": [],
                "doc": {
                    "description": "Add action to do post template rendering at template_redirect action.",
                    "long_description": "",
                    "tags": [
                        {
                            "name": "since",
                            "content": "0.2"
                        },
                        {
                            "name": "since",
                            "content": "1.0",
                            "description": "The amp_render() function is called at template_redirect action priority 11 instead of priority 10."
                        },
                        {
                            "name": "codeCoverageIgnore",
                            "content": ""
                        },
                        {
                            "name": "deprecated",
                            "content": "This function is not used when 'amp' theme support is added.",
                            "description": "This function is not used when 'amp' theme support is added."
                        }
                    ]
                },
                "hooks": [],
                "uses": {
                    "functions": [
                        {
                            "name": "_deprecated_function",
                            "line": 105,
                            "end_line": 105,
                            "deprecation_version": "1.5"
                        },
                        {
                            "name": "add_action",
                            "line": 106,
                            "end_line": 106
                        }
                    ]
                }
            },
            {
                "name": "amp_render",
                "namespace": "global",
                "aliases": [],
                "line": 116,
                "end_line": 125,
                "arguments": [],
                "doc": {
                    "description": "Render AMP for queried post.",
                    "long_description": "",
                    "tags": [
                        {
                            "name": "since",
                            "content": "0.1"
                        },
                        {
                            "name": "codeCoverageIgnore",
                            "content": ""
                        },
                        {
                            "name": "deprecated",
                            "content": "This function is not used when 'amp' theme support is added.",
                            "description": "This function is not used when 'amp' theme support is added."
                        }
                    ]
                },
                "hooks": [],
                "uses": {
                    "functions": [
                        {
                            "name": "_deprecated_function",
                            "line": 117,
                            "end_line": 117,
                            "deprecation_version": "1.5"
                        },
                        {
                            "name": "get_queried_object",
                            "line": 120,
                            "end_line": 120
                        },
                        {
                            "name": "amp_render_post",
                            "line": 122,
                            "end_line": 122
                        }
                    ]
                }
            },
            {
                "name": "amp_render_post",
                "namespace": "global",
                "aliases": [],
                "line": 137,
                "end_line": 183,
                "arguments": [
                    {
                        "name": "$post",
                        "default": null,
                        "type": ""
                    }
                ],
                "doc": {
                    "description": "Render AMP post template.",
                    "long_description": "",
                    "tags": [
                        {
                            "name": "since",
                            "content": "0.5"
                        },
                        {
                            "name": "codeCoverageIgnore",
                            "content": ""
                        },
                        {
                            "name": "deprecated",
                            "content": "Rendering a post is now handled by AMP_Theme_Support.",
                            "description": "Rendering a post is now handled by AMP_Theme_Support."
                        },
                        {
                            "name": "param",
                            "content": "Post.",
                            "types": [
                                "\\WP_Post",
                                "int"
                            ],
                            "variable": "$post"
                        },
                        {
                            "name": "global",
                            "content": "WP_Query $wp_query"
                        }
                    ]
                },
                "hooks": [
                    {
                        "name": "pre_amp_render_post",
                        "line": 174,
                        "end_line": 174,
                        "type": "action",
                        "arguments": [
                            "$post_id"
                        ],
                        "doc": {
                            "description": "Fires before rendering a post in AMP.",
                            "long_description": "This action is not triggered when 'amp' theme support is present. Instead, you should use 'template_redirect' action and check if `amp_is_request()`.",
                            "tags": [
                                {
                                    "name": "since",
                                    "content": "0.2"
                                },
                                {
                                    "name": "deprecated",
                                    "content": "Check amp_is_request() on the template_redirect action instead.",
                                    "description": "Check amp_is_request() on the template_redirect action instead."
                                },
                                {
                                    "name": "param",
                                    "content": "Post ID.",
                                    "types": [
                                        "int"
                                    ],
                                    "variable": "$post_id"
                                }
                            ]
                        }
                    }
                ],
                "uses": {
                    "functions": [
                        {
                            "name": "_deprecated_function",
                            "line": 138,
                            "end_line": 138,
                            "deprecation_version": "1.5"
                        },
                        {
                            "name": "get_post",
                            "line": 142,
                            "end_line": 142
                        },
                        {
                            "name": "amp_get_slug",
                            "line": 154,
                            "end_line": 154
                        },
                        {
                            "name": "amp_get_slug",
                            "line": 156,
                            "end_line": 156
                        },
                        {
                            "name": "extension_loaded",
                            "line": 160,
                            "end_line": 160
                        },
                        {
                            "name": "newrelic_disable_autorum",
                            "line": 161,
                            "end_line": 161
                        },
                        {
                            "name": "do_action",
                            "line": 174,
                            "end_line": 174
                        },
                        {
                            "name": "amp_add_post_template_actions",
                            "line": 176,
                            "end_line": 176
                        },
                        {
                            "name": "amp_get_slug",
                            "line": 181,
                            "end_line": 181
                        }
                    ],
                    "methods": [
                        {
                            "name": "__construct",
                            "class": "\\AMP_Post_Template",
                            "static": false,
                            "line": 177,
                            "end_line": 177
                        },
                        {
                            "name": "load",
                            "class": "$template",
                            "static": false,
                            "line": 178,
                            "end_line": 178
                        }
                    ]
                }
            },
            {
                "name": "amp_post_template_add_scripts",
                "namespace": "global",
                "aliases": [],
                "line": 195,
                "end_line": 207,
                "arguments": [
                    {
                        "name": "$amp_template",
                        "default": null,
                        "type": ""
                    }
                ],
                "doc": {
                    "description": "Print scripts.",
                    "long_description": "",
                    "tags": [
                        {
                            "name": "codeCoverageIgnore",
                            "content": ""
                        },
                        {
                            "name": "deprecated",
                            "content": "Scripts are now automatically added.",
                            "description": "Scripts are now automatically added."
                        },
                        {
                            "name": "internal",
                            "content": ""
                        },
                        {
                            "name": "see",
                            "content": "",
                            "refers": "amp_register_default_scripts()"
                        },
                        {
                            "name": "see",
                            "content": "",
                            "refers": "amp_filter_script_loader_tag()"
                        },
                        {
                            "name": "param",
                            "content": "Template.",
                            "types": [
                                "\\AMP_Post_Template"
                            ],
                            "variable": "$amp_template"
                        }
                    ]
                },
                "hooks": [],
                "uses": {
                    "functions": [
                        {
                            "name": "_deprecated_function",
                            "line": 196,
                            "end_line": 196,
                            "deprecation_version": "1.5"
                        },
                        {
                            "name": "amp_render_scripts",
                            "line": 198,
                            "end_line": 206
                        },
                        {
                            "name": "array_merge",
                            "line": 199,
                            "end_line": 205
                        }
                    ],
                    "methods": [
                        {
                            "name": "get",
                            "class": "$amp_template",
                            "static": false,
                            "line": 202,
                            "end_line": 202
                        },
                        {
                            "name": "get",
                            "class": "$amp_template",
                            "static": false,
                            "line": 204,
                            "end_line": 204
                        }
                    ]
                }
            },
            {
                "name": "amp_post_template_add_boilerplate_css",
                "namespace": "global",
                "aliases": [],
                "line": 218,
                "end_line": 221,
                "arguments": [],
                "doc": {
                    "description": "Print boilerplate CSS.",
                    "long_description": "",
                    "tags": [
                        {
                            "name": "codeCoverageIgnore",
                            "content": ""
                        },
                        {
                            "name": "deprecated",
                            "content": "Boilerplate is now automatically added via the ampproject\/optimizer library.",
                            "description": "Boilerplate is now automatically added via the ampproject\/optimizer library."
                        },
                        {
                            "name": "internal",
                            "content": ""
                        },
                        {
                            "name": "since",
                            "content": "0.3"
                        },
                        {
                            "name": "see",
                            "content": "",
                            "refers": "amp_get_boilerplate_code()"
                        }
                    ]
                },
                "hooks": [],
                "uses": {
                    "functions": [
                        {
                            "name": "_deprecated_function",
                            "line": 219,
                            "end_line": 219,
                            "deprecation_version": "1.5"
                        },
                        {
                            "name": "amp_get_boilerplate_code",
                            "line": 220,
                            "end_line": 220
                        }
                    ]
                }
            },
            {
                "name": "amp_post_template_add_schemaorg_metadata",
                "namespace": "global",
                "aliases": [],
                "line": 230,
                "end_line": 233,
                "arguments": [],
                "doc": {
                    "description": "Print Schema.org metadata.",
                    "long_description": "",
                    "tags": [
                        {
                            "name": "codeCoverageIgnore",
                            "content": ""
                        },
                        {
                            "name": "deprecated",
                            "content": "Since 0.7",
                            "description": "Since 0.7"
                        },
                        {
                            "name": "internal",
                            "content": ""
                        }
                    ]
                },
                "hooks": [],
                "uses": {
                    "functions": [
                        {
                            "name": "_deprecated_function",
                            "line": 231,
                            "end_line": 231,
                            "deprecation_version": "0.7"
                        },
                        {
                            "name": "amp_print_schemaorg_metadata",
                            "line": 232,
                            "end_line": 232
                        }
                    ]
                }
            },
            {
                "name": "amp_post_meta_box",
                "namespace": "global",
                "aliases": [],
                "line": 245,
                "end_line": 247,
                "arguments": [],
                "doc": {
                    "description": "Bootstrap AMP post meta box.",
                    "long_description": "This function must be invoked only once through the 'wp_loaded' action.",
                    "tags": [
                        {
                            "name": "since",
                            "content": "0.6"
                        },
                        {
                            "name": "codeCoverageIgnore",
                            "content": ""
                        },
                        {
                            "name": "deprecated",
                            "content": "Since 1.5.0, as admin class bootstrapping is moved to amp_bootstrap_admin().",
                            "description": "Since 1.5.0, as admin class bootstrapping is moved to amp_bootstrap_admin()."
                        },
                        {
                            "name": "internal",
                            "content": ""
                        }
                    ]
                },
                "hooks": [],
                "uses": {
                    "functions": [
                        {
                            "name": "_deprecated_function",
                            "line": 246,
                            "end_line": 246,
                            "deprecation_version": "1.5.0"
                        }
                    ]
                }
            },
            {
                "name": "amp_admin_pointer",
                "namespace": "global",
                "aliases": [],
                "line": 257,
                "end_line": 259,
                "arguments": [],
                "doc": {
                    "description": "Bootstrap the AMP admin pointer class.",
                    "long_description": "",
                    "tags": [
                        {
                            "name": "since",
                            "content": "1.0"
                        },
                        {
                            "name": "codeCoverageIgnore",
                            "content": ""
                        },
                        {
                            "name": "deprecated",
                            "content": "Since 1.5.0, as admin class bootstrapping is moved to amp_bootstrap_admin().",
                            "description": "Since 1.5.0, as admin class bootstrapping is moved to amp_bootstrap_admin()."
                        },
                        {
                            "name": "internal",
                            "content": ""
                        }
                    ]
                },
                "hooks": [],
                "uses": {
                    "functions": [
                        {
                            "name": "_deprecated_function",
                            "line": 258,
                            "end_line": 258,
                            "deprecation_version": "1.5.0"
                        }
                    ]
                }
            },
            {
                "name": "_amp_xdebug_admin_notice",
                "namespace": "global",
                "aliases": [],
                "line": 269,
                "end_line": 284,
                "arguments": [],
                "doc": {
                    "description": "Print admin notice if the Xdebug extension is loaded.",
                    "long_description": "",
                    "tags": [
                        {
                            "name": "since",
                            "content": "1.3"
                        },
                        {
                            "name": "deprecated",
                            "content": "1.5.0",
                            "description": "Warning moved to Site Health."
                        },
                        {
                            "name": "internal",
                            "content": ""
                        },
                        {
                            "name": "see",
                            "content": "",
                            "refers": "AmpProject\\AmpWP\\Admin\\SiteHealth::xdebug_extension()"
                        }
                    ]
                },
                "hooks": [],
                "uses": {
                    "functions": [
                        {
                            "name": "_deprecated_function",
                            "line": 270,
                            "end_line": 270,
                            "deprecation_version": "1.5.0"
                        },
                        {
                            "name": "esc_html_e",
                            "line": 276,
                            "end_line": 279
                        }
                    ]
                }
            }
        ]
    },
    "107": {
        "file": {
            "description": "Load the reader mode template.",
            "long_description": "",
            "tags": [
                {
                    "name": "package",
                    "content": "AMP"
                }
            ]
        },
        "path": "includes\/templates\/reader-template-loader.php",
        "root": "\/app\/public\/content\/plugins\/amp",
        "uses": {
            "functions": [
                {
                    "name": "get_queried_object",
                    "line": 18,
                    "end_line": 18
                },
                {
                    "name": "setup_postdata",
                    "line": 19,
                    "end_line": 19
                },
                {
                    "name": "do_action",
                    "line": 30,
                    "end_line": 30
                },
                {
                    "name": "get_queried_object_id",
                    "line": 30,
                    "end_line": 30
                },
                {
                    "name": "amp_post_template_init_hooks",
                    "line": 33,
                    "end_line": 33
                }
            ],
            "methods": [
                {
                    "name": "__construct",
                    "class": "\\AMP_Post_Template",
                    "static": false,
                    "line": 35,
                    "end_line": 35
                },
                {
                    "name": "load",
                    "class": "$amp_post_template",
                    "static": false,
                    "line": 36,
                    "end_line": 36
                }
            ]
        },
        "includes": [
            {
                "name": "",
                "line": 32,
                "type": "Require Once"
            }
        ],
        "hooks": [
            {
                "name": "pre_amp_render_post",
                "line": 30,
                "end_line": 30,
                "type": "action",
                "arguments": [
                    "get_queried_object_id()"
                ],
                "doc": {
                    "description": "Fires before rendering a post in AMP.",
                    "long_description": "This action is not triggered when 'amp' theme support is present. Instead, you should use 'template_redirect' action and check if `amp_is_request()`.",
                    "tags": [
                        {
                            "name": "since",
                            "content": "0.2"
                        },
                        {
                            "name": "param",
                            "content": "Post ID.",
                            "types": [
                                "int"
                            ],
                            "variable": "$post_id"
                        }
                    ]
                }
            }
        ]
    },
    "116": {
        "file": {
            "description": "Callbacks for adding AMP-related things to the main theme.",
            "long_description": "",
            "tags": [
                {
                    "name": "codeCoverageIgnore",
                    "content": ""
                },
                {
                    "name": "deprecated",
                    "content": "Function in this file has been moved to amp-helper-functions.php.",
                    "description": "Function in this file has been moved to amp-helper-functions.php."
                },
                {
                    "name": "package",
                    "content": "AMP"
                }
            ]
        },
        "path": "includes\/amp-frontend-actions.php",
        "root": "\/app\/public\/content\/plugins\/amp",
        "uses": {
            "functions": [
                {
                    "name": "_deprecated_file",
                    "line": 10,
                    "end_line": 20,
                    "deprecation_version": "1.0"
                },
                {
                    "name": "sprintf",
                    "line": 14,
                    "end_line": 19
                },
                {
                    "name": "esc_html__",
                    "line": 16,
                    "end_line": 16
                }
            ]
        },
        "functions": [
            {
                "name": "amp_frontend_add_canonical",
                "namespace": "global",
                "aliases": [],
                "line": 31,
                "end_line": 34,
                "arguments": [],
                "doc": {
                    "description": "Add amphtml link to frontend.",
                    "long_description": "",
                    "tags": [
                        {
                            "name": "deprecated",
                            "content": "Use amp_add_amphtml_link() instead.",
                            "description": "Use amp_add_amphtml_link() instead."
                        },
                        {
                            "name": "since",
                            "content": "0.2"
                        },
                        {
                            "name": "since",
                            "content": "1.0",
                            "description": "Deprecated"
                        },
                        {
                            "name": "see",
                            "content": "",
                            "refers": "amp_add_amphtml_link()"
                        }
                    ]
                },
                "hooks": [],
                "uses": {
                    "functions": [
                        {
                            "name": "_deprecated_function",
                            "line": 32,
                            "end_line": 32,
                            "deprecation_version": "1.0"
                        },
                        {
                            "name": "amp_add_amphtml_link",
                            "line": 33,
                            "end_line": 33
                        }
                    ]
                }
            }
        ]
    },
    "120": {
        "file": {
            "description": "AMP Helper Functions",
            "long_description": "",
            "tags": [
                {
                    "name": "package",
                    "content": "AMP"
                }
            ]
        },
        "path": "includes\/amp-helper-functions.php",
        "root": "\/app\/public\/content\/plugins\/amp",
        "functions": [
            {
                "name": "amp_activate",
                "namespace": "global",
                "aliases": {
                    "ReaderThemes": "\\AmpProject\\AmpWP\\Admin\\ReaderThemes",
                    "AmpWpPluginFactory": "\\AmpProject\\AmpWP\\AmpWpPluginFactory",
                    "Icon": "\\AmpProject\\AmpWP\\Icon",
                    "Option": "\\AmpProject\\AmpWP\\Option",
                    "QueryVar": "\\AmpProject\\AmpWP\\QueryVar"
                },
                "line": 22,
                "end_line": 29,
                "arguments": [
                    {
                        "name": "$network_wide",
                        "default": "false",
                        "type": ""
                    }
                ],
                "doc": {
                    "description": "Handle activation of plugin.",
                    "long_description": "",
                    "tags": [
                        {
                            "name": "since",
                            "content": "0.2"
                        },
                        {
                            "name": "internal",
                            "content": ""
                        },
                        {
                            "name": "param",
                            "content": "Whether the activation was done network-wide.",
                            "types": [
                                "bool"
                            ],
                            "variable": "$network_wide"
                        }
                    ]
                },
                "hooks": [],
                "uses": {
                    "methods": [
                        {
                            "name": "activate",
                            "class": "\\AmpProject\\AmpWP\\AmpWpPluginFactory::create()",
                            "static": false,
                            "line": 23,
                            "end_line": 23
                        },
                        {
                            "name": "create",
                            "class": "\\AmpProject\\AmpWP\\AmpWpPluginFactory",
                            "static": true,
                            "line": 23,
                            "end_line": 23
                        }
                    ],
                    "functions": [
                        {
                            "name": "amp_after_setup_theme",
                            "line": 24,
                            "end_line": 24
                        },
                        {
                            "name": "did_action",
                            "line": 25,
                            "end_line": 25
                        },
                        {
                            "name": "amp_init",
                            "line": 26,
                            "end_line": 26
                        },
                        {
                            "name": "flush_rewrite_rules",
                            "line": 28,
                            "end_line": 28
                        }
                    ]
                }
            },
            {
                "name": "amp_deactivate",
                "namespace": "global",
                "aliases": {
                    "ReaderThemes": "\\AmpProject\\AmpWP\\Admin\\ReaderThemes",
                    "AmpWpPluginFactory": "\\AmpProject\\AmpWP\\AmpWpPluginFactory",
                    "Icon": "\\AmpProject\\AmpWP\\Icon",
                    "Option": "\\AmpProject\\AmpWP\\Option",
                    "QueryVar": "\\AmpProject\\AmpWP\\QueryVar"
                },
                "line": 39,
                "end_line": 51,
                "arguments": [
                    {
                        "name": "$network_wide",
                        "default": "false",
                        "type": ""
                    }
                ],
                "doc": {
                    "description": "Handle deactivation of plugin.",
                    "long_description": "",
                    "tags": [
                        {
                            "name": "since",
                            "content": "0.2"
                        },
                        {
                            "name": "internal",
                            "content": ""
                        },
                        {
                            "name": "param",
                            "content": "Whether the activation was done network-wide.",
                            "types": [
                                "bool"
                            ],
                            "variable": "$network_wide"
                        }
                    ]
                },
                "hooks": [],
                "uses": {
                    "methods": [
                        {
                            "name": "deactivate",
                            "class": "\\AmpProject\\AmpWP\\AmpWpPluginFactory::create()",
                            "static": false,
                            "line": 40,
                            "end_line": 40
                        },
                        {
                            "name": "create",
                            "class": "\\AmpProject\\AmpWP\\AmpWpPluginFactory",
                            "static": true,
                            "line": 40,
                            "end_line": 40
                        }
                    ],
                    "functions": [
                        {
                            "name": "amp_get_slug",
                            "line": 44,
                            "end_line": 44
                        },
                        {
                            "name": "flush_rewrite_rules",
                            "line": 50,
                            "end_line": 50
                        }
                    ]
                }
            },
            {
                "name": "amp_bootstrap_plugin",
                "namespace": "global",
                "aliases": {
                    "ReaderThemes": "\\AmpProject\\AmpWP\\Admin\\ReaderThemes",
                    "AmpWpPluginFactory": "\\AmpProject\\AmpWP\\AmpWpPluginFactory",
                    "Icon": "\\AmpProject\\AmpWP\\Icon",
                    "Option": "\\AmpProject\\AmpWP\\Option",
                    "QueryVar": "\\AmpProject\\AmpWP\\QueryVar"
                },
                "line": 59,
                "end_line": 95,
                "arguments": [],
                "doc": {
                    "description": "Bootstrap plugin.",
                    "long_description": "",
                    "tags": [
                        {
                            "name": "since",
                            "content": "1.5"
                        },
                        {
                            "name": "internal",
                            "content": ""
                        }
                    ]
                },
                "hooks": [
                    {
                        "name": "amp_is_enabled",
                        "line": 68,
                        "end_line": 68,
                        "type": "filter",
                        "arguments": [
                            "true"
                        ],
                        "doc": {
                            "description": "Filters whether AMP is enabled on the current site.",
                            "long_description": "Useful if the plugin is network activated and you want to turn it off on select sites.",
                            "tags": [
                                {
                                    "name": "since",
                                    "content": "0.2"
                                },
                                {
                                    "name": "since",
                                    "content": "2.0",
                                    "description": "Filter now runs earlier at plugins_loaded (with earliest priority) rather than at the after_setup_theme action."
                                }
                            ]
                        }
                    }
                ],
                "uses": {
                    "functions": [
                        {
                            "name": "apply_filters",
                            "line": 68,
                            "end_line": 68
                        },
                        {
                            "name": "add_action",
                            "line": 82,
                            "end_line": 82
                        },
                        {
                            "name": "add_action",
                            "line": 84,
                            "end_line": 84
                        },
                        {
                            "name": "add_filter",
                            "line": 87,
                            "end_line": 87
                        },
                        {
                            "name": "add_filter",
                            "line": 90,
                            "end_line": 90
                        },
                        {
                            "name": "add_action",
                            "line": 92,
                            "end_line": 92
                        },
                        {
                            "name": "add_action",
                            "line": 94,
                            "end_line": 94
                        }
                    ],
                    "methods": [
                        {
                            "name": "register",
                            "class": "\\AmpProject\\AmpWP\\AmpWpPluginFactory::create()",
                            "static": false,
                            "line": 72,
                            "end_line": 72
                        },
                        {
                            "name": "create",
                            "class": "\\AmpProject\\AmpWP\\AmpWpPluginFactory",
                            "static": true,
                            "line": 72,
                            "end_line": 72
                        },
                        {
                            "name": "init_validate_request",
                            "class": "\\AMP_Validation_Manager",
                            "static": true,
                            "line": 76,
                            "end_line": 76
                        }
                    ]
                }
            },
            {
                "name": "amp_init",
                "namespace": "global",
                "aliases": {
                    "ReaderThemes": "\\AmpProject\\AmpWP\\Admin\\ReaderThemes",
                    "AmpWpPluginFactory": "\\AmpProject\\AmpWP\\AmpWpPluginFactory",
                    "Icon": "\\AmpProject\\AmpWP\\Icon",
                    "Option": "\\AmpProject\\AmpWP\\Option",
                    "QueryVar": "\\AmpProject\\AmpWP\\QueryVar"
                },
                "line": 103,
                "end_line": 226,
                "arguments": [],
                "doc": {
                    "description": "Init AMP.",
                    "long_description": "",
                    "tags": [
                        {
                            "name": "since",
                            "content": "0.1"
                        },
                        {
                            "name": "internal",
                            "content": ""
                        }
                    ]
                },
                "hooks": [
                    {
                        "name": "amp_init",
                        "line": 110,
                        "end_line": 110,
                        "type": "action",
                        "arguments": [],
                        "doc": {
                            "description": "Triggers on init when AMP plugin is active.",
                            "long_description": "",
                            "tags": [
                                {
                                    "name": "since",
                                    "content": "0.3"
                                }
                            ]
                        }
                    },
                    {
                        "name": "amp_plugin_update",
                        "line": 172,
                        "end_line": 172,
                        "type": "action",
                        "arguments": [
                            "$old_version"
                        ],
                        "doc": {
                            "description": "Triggers when after amp_init when the plugin version has updated.",
                            "long_description": "",
                            "tags": [
                                {
                                    "name": "param",
                                    "content": "Old version.",
                                    "types": [
                                        "string"
                                    ],
                                    "variable": "$old_version"
                                }
                            ]
                        }
                    }
                ],
                "uses": {
                    "functions": [
                        {
                            "name": "do_action",
                            "line": 110,
                            "end_line": 110
                        },
                        {
                            "name": "add_filter",
                            "line": 112,
                            "end_line": 112
                        },
                        {
                            "name": "add_action",
                            "line": 119,
                            "end_line": 119
                        },
                        {
                            "name": "add_action",
                            "line": 120,
                            "end_line": 120
                        },
                        {
                            "name": "add_action",
                            "line": 121,
                            "end_line": 121
                        },
                        {
                            "name": "add_action",
                            "line": 122,
                            "end_line": 122
                        },
                        {
                            "name": "add_rewrite_endpoint",
                            "line": 124,
                            "end_line": 124
                        },
                        {
                            "name": "amp_get_slug",
                            "line": 124,
                            "end_line": 124
                        },
                        {
                            "name": "add_action",
                            "line": 125,
                            "end_line": 125
                        },
                        {
                            "name": "add_action",
                            "line": 126,
                            "end_line": 126
                        },
                        {
                            "name": "add_action",
                            "line": 128,
                            "end_line": 137
                        },
                        {
                            "name": "is_admin",
                            "line": 132,
                            "end_line": 132
                        },
                        {
                            "name": "wp_style_is",
                            "line": 132,
                            "end_line": 132
                        },
                        {
                            "name": "wp_styles",
                            "line": 133,
                            "end_line": 133
                        },
                        {
                            "name": "wp_enqueue_style",
                            "line": 134,
                            "end_line": 134
                        },
                        {
                            "name": "add_action",
                            "line": 139,
                            "end_line": 139
                        },
                        {
                            "name": "add_filter",
                            "line": 140,
                            "end_line": 140
                        },
                        {
                            "name": "add_filter",
                            "line": 143,
                            "end_line": 143
                        },
                        {
                            "name": "defined",
                            "line": 145,
                            "end_line": 145
                        },
                        {
                            "name": "class_exists",
                            "line": 146,
                            "end_line": 146
                        },
                        {
                            "name": "get_option",
                            "line": 159,
                            "end_line": 159
                        },
                        {
                            "name": "is_admin",
                            "line": 162,
                            "end_line": 162
                        },
                        {
                            "name": "current_user_can",
                            "line": 162,
                            "end_line": 162
                        },
                        {
                            "name": "add_action",
                            "line": 164,
                            "end_line": 176
                        },
                        {
                            "name": "do_action",
                            "line": 172,
                            "end_line": 172
                        },
                        {
                            "name": "add_action",
                            "line": 179,
                            "end_line": 187
                        },
                        {
                            "name": "add_action",
                            "line": 195,
                            "end_line": 225
                        },
                        {
                            "name": "amp_is_dev_mode",
                            "line": 198,
                            "end_line": 198
                        },
                        {
                            "name": "is_admin_bar_showing",
                            "line": 198,
                            "end_line": 198
                        }
                    ],
                    "methods": [
                        {
                            "name": "purge_amp_query_vars",
                            "class": "\\AMP_HTTP",
                            "static": true,
                            "line": 113,
                            "end_line": 113
                        },
                        {
                            "name": "send_cors_headers",
                            "class": "\\AMP_HTTP",
                            "static": true,
                            "line": 114,
                            "end_line": 114
                        },
                        {
                            "name": "handle_xhr_request",
                            "class": "\\AMP_HTTP",
                            "static": true,
                            "line": 115,
                            "end_line": 115
                        },
                        {
                            "name": "init",
                            "class": "\\AMP_Theme_Support",
                            "static": true,
                            "line": 116,
                            "end_line": 116
                        },
                        {
                            "name": "init",
                            "class": "\\AMP_Validation_Manager",
                            "static": true,
                            "line": 117,
                            "end_line": 117
                        },
                        {
                            "name": "init",
                            "class": "\\AMP_Service_Worker",
                            "static": true,
                            "line": 118,
                            "end_line": 118
                        },
                        {
                            "name": "add_command",
                            "class": "\\WP_CLI",
                            "static": true,
                            "line": 147,
                            "end_line": 147
                        },
                        {
                            "name": "add_command",
                            "class": "\\WP_CLI",
                            "static": true,
                            "line": 150,
                            "end_line": 150
                        },
                        {
                            "name": "update_option",
                            "class": "\\AMP_Options_Manager",
                            "static": true,
                            "line": 173,
                            "end_line": 173
                        },
                        {
                            "name": "__construct",
                            "class": "\\AmpProject\\AmpWP\\Admin\\ReaderThemes",
                            "static": false,
                            "line": 182,
                            "end_line": 182
                        },
                        {
                            "name": "__construct",
                            "class": "\\AMP_Reader_Theme_REST_Controller",
                            "static": false,
                            "line": 184,
                            "end_line": 184
                        },
                        {
                            "name": "register_routes",
                            "class": "$reader_theme_controller",
                            "static": false,
                            "line": 185,
                            "end_line": 185
                        }
                    ]
                }
            },
            {
                "name": "amp_after_setup_theme",
                "namespace": "global",
                "aliases": {
                    "ReaderThemes": "\\AmpProject\\AmpWP\\Admin\\ReaderThemes",
                    "AmpWpPluginFactory": "\\AmpProject\\AmpWP\\AmpWpPluginFactory",
                    "Icon": "\\AmpProject\\AmpWP\\Icon",
                    "Option": "\\AmpProject\\AmpWP\\Option",
                    "QueryVar": "\\AmpProject\\AmpWP\\QueryVar"
                },
                "line": 237,
                "end_line": 257,
                "arguments": [],
                "doc": {
                    "description": "Set up AMP.",
                    "long_description": "This function must be invoked through the 'after_setup_theme' action to allow the AMP setting to declare the post types support earlier than plugins\/theme.",
                    "tags": [
                        {
                            "name": "since",
                            "content": "0.6"
                        },
                        {
                            "name": "internal",
                            "content": ""
                        }
                    ]
                },
                "hooks": [
                    {
                        "name": "amp_is_enabled",
                        "line": 241,
                        "end_line": 241,
                        "type": "filter",
                        "arguments": [
                            "true"
                        ],
                        "doc": {
                            "description": "This filter is documented in includes\/amp-helper-functions.php",
                            "long_description": "",
                            "tags": []
                        }
                    }
                ],
                "uses": {
                    "functions": [
                        {
                            "name": "amp_get_slug",
                            "line": 238,
                            "end_line": 238
                        },
                        {
                            "name": "apply_filters",
                            "line": 241,
                            "end_line": 241
                        },
                        {
                            "name": "_doing_it_wrong",
                            "line": 242,
                            "end_line": 253
                        },
                        {
                            "name": "esc_html",
                            "line": 244,
                            "end_line": 251
                        },
                        {
                            "name": "sprintf",
                            "line": 245,
                            "end_line": 250
                        },
                        {
                            "name": "__",
                            "line": 247,
                            "end_line": 247
                        },
                        {
                            "name": "add_action",
                            "line": 256,
                            "end_line": 256
                        }
                    ]
                }
            },
            {
                "name": "amp_force_query_var_value",
                "namespace": "global",
                "aliases": {
                    "ReaderThemes": "\\AmpProject\\AmpWP\\Admin\\ReaderThemes",
                    "AmpWpPluginFactory": "\\AmpProject\\AmpWP\\AmpWpPluginFactory",
                    "Icon": "\\AmpProject\\AmpWP\\Icon",
                    "Option": "\\AmpProject\\AmpWP\\Option",
                    "QueryVar": "\\AmpProject\\AmpWP\\QueryVar"
                },
                "line": 270,
                "end_line": 275,
                "arguments": [
                    {
                        "name": "$query_vars",
                        "default": null,
                        "type": ""
                    }
                ],
                "doc": {
                    "description": "Make sure the `amp` query var has an explicit value.",
                    "long_description": "This avoids issues when filtering the deprecated `query_string` hook.",
                    "tags": [
                        {
                            "name": "since",
                            "content": "0.3.3"
                        },
                        {
                            "name": "internal",
                            "content": ""
                        },
                        {
                            "name": "param",
                            "content": "Query vars.",
                            "types": [
                                "array"
                            ],
                            "variable": "$query_vars"
                        },
                        {
                            "name": "return",
                            "content": "Query vars.",
                            "types": [
                                "array"
                            ]
                        }
                    ]
                },
                "hooks": [],
                "uses": {
                    "functions": [
                        {
                            "name": "amp_get_slug",
                            "line": 271,
                            "end_line": 271
                        },
                        {
                            "name": "amp_get_slug",
                            "line": 271,
                            "end_line": 271
                        },
                        {
                            "name": "amp_get_slug",
                            "line": 272,
                            "end_line": 272
                        }
                    ]
                }
            },
            {
                "name": "amp_correct_query_when_is_front_page",
                "namespace": "global",
                "aliases": {
                    "ReaderThemes": "\\AmpProject\\AmpWP\\Admin\\ReaderThemes",
                    "AmpWpPluginFactory": "\\AmpProject\\AmpWP\\AmpWpPluginFactory",
                    "Icon": "\\AmpProject\\AmpWP\\Icon",
                    "Option": "\\AmpProject\\AmpWP\\Option",
                    "QueryVar": "\\AmpProject\\AmpWP\\QueryVar"
                },
                "line": 289,
                "end_line": 316,
                "arguments": [
                    {
                        "name": "$query",
                        "default": null,
                        "type": "\\WP_Query"
                    }
                ],
                "doc": {
                    "description": "Fix up WP_Query for front page when amp query var is present.",
                    "long_description": "Normally the front page would not get served if a query var is present other than preview, page, paged, and cpage.",
                    "tags": [
                        {
                            "name": "since",
                            "content": "0.6"
                        },
                        {
                            "name": "internal",
                            "content": ""
                        },
                        {
                            "name": "see",
                            "content": "",
                            "refers": "WP_Query::parse_query()"
                        },
                        {
                            "name": "link",
                            "content": "https:\/\/github.com\/WordPress\/wordpress-develop\/blob\/0baa8ae85c670d338e78e408f8d6e301c6410c86\/src\/wp-includes\/class-wp-query.php#L951-L971",
                            "link": "https:\/\/github.com\/WordPress\/wordpress-develop\/blob\/0baa8ae85c670d338e78e408f8d6e301c6410c86\/src\/wp-includes\/class-wp-query.php#L951-L971"
                        },
                        {
                            "name": "param",
                            "content": "Query.",
                            "types": [
                                "\\WP_Query"
                            ],
                            "variable": "$query"
                        }
                    ]
                },
                "hooks": [],
                "uses": {
                    "methods": [
                        {
                            "name": "is_main_query",
                            "class": "$query",
                            "static": false,
                            "line": 291,
                            "end_line": 291
                        },
                        {
                            "name": "is_home",
                            "class": "$query",
                            "static": false,
                            "line": 293,
                            "end_line": 293
                        },
                        {
                            "name": "get",
                            "class": "$query",
                            "static": false,
                            "line": 296,
                            "end_line": 296
                        },
                        {
                            "name": "is_front_page",
                            "class": "$query",
                            "static": false,
                            "line": 299,
                            "end_line": 299
                        },
                        {
                            "name": "set",
                            "class": "$query",
                            "static": false,
                            "line": 314,
                            "end_line": 314
                        }
                    ],
                    "functions": [
                        {
                            "name": "amp_get_slug",
                            "line": 296,
                            "end_line": 296
                        },
                        {
                            "name": "get_option",
                            "line": 302,
                            "end_line": 302
                        },
                        {
                            "name": "get_option",
                            "line": 305,
                            "end_line": 305
                        },
                        {
                            "name": "count",
                            "line": 308,
                            "end_line": 308
                        },
                        {
                            "name": "array_diff",
                            "line": 308,
                            "end_line": 308
                        },
                        {
                            "name": "array_keys",
                            "line": 308,
                            "end_line": 308
                        },
                        {
                            "name": "wp_parse_args",
                            "line": 308,
                            "end_line": 308
                        },
                        {
                            "name": "amp_get_slug",
                            "line": 308,
                            "end_line": 308
                        },
                        {
                            "name": "get_option",
                            "line": 314,
                            "end_line": 314
                        }
                    ]
                }
            },
            {
                "name": "amp_is_canonical",
                "namespace": "global",
                "aliases": {
                    "ReaderThemes": "\\AmpProject\\AmpWP\\Admin\\ReaderThemes",
                    "AmpWpPluginFactory": "\\AmpProject\\AmpWP\\AmpWpPluginFactory",
                    "Icon": "\\AmpProject\\AmpWP\\Icon",
                    "Option": "\\AmpProject\\AmpWP\\Option",
                    "QueryVar": "\\AmpProject\\AmpWP\\QueryVar"
                },
                "line": 363,
                "end_line": 365,
                "arguments": [],
                "doc": {
                    "description": "Whether this is in 'canonical mode'.",
                    "long_description": "Themes can register support for this with `add_theme_support( AMP_Theme_Support::SLUG )`:\n      add_theme_support( AMP_Theme_Support::SLUG );\n This will serve templates in AMP-first, allowing you to use AMP components in your theme templates. If you want to make available in transitional mode, where templates are served in AMP or non-AMP documents, do:\n      add_theme_support( AMP_Theme_Support::SLUG, array(          'paired' => true,      ) );\n Transitional mode is also implied if you define a template_dir:\n      add_theme_support( AMP_Theme_Support::SLUG, array(          'template_dir' => 'amp',      ) );\n If you want to have AMP-specific templates in addition to serving AMP-first, do:\n      add_theme_support( AMP_Theme_Support::SLUG, array(          'paired'       => false,          'template_dir' => 'amp',      ) );\n If you want to force AMP to always be served on a given template, you can use the templates_supported arg, for example to always serve the Category template in AMP:\n      add_theme_support( AMP_Theme_Support::SLUG, array(          'templates_supported' => array(              'is_category' => true,          ),      ) );\n Or if you want to force AMP to be used on all templates:\n      add_theme_support( AMP_Theme_Support::SLUG, array(          'templates_supported' => 'all',      ) );",
                    "tags": [
                        {
                            "name": "see",
                            "content": "",
                            "refers": "AMP_Theme_Support::read_theme_support()"
                        },
                        {
                            "name": "return",
                            "content": "Whether this is in AMP 'canonical' mode, that is whether it is AMP-first and there is not a separate (paired) AMP URL.",
                            "types": [
                                "boolean"
                            ]
                        }
                    ]
                },
                "hooks": [],
                "uses": {
                    "methods": [
                        {
                            "name": "get_option",
                            "class": "\\AMP_Options_Manager",
                            "static": true,
                            "line": 364,
                            "end_line": 364
                        }
                    ]
                }
            },
            {
                "name": "amp_is_legacy",
                "namespace": "global",
                "aliases": {
                    "ReaderThemes": "\\AmpProject\\AmpWP\\Admin\\ReaderThemes",
                    "AmpWpPluginFactory": "\\AmpProject\\AmpWP\\AmpWpPluginFactory",
                    "Icon": "\\AmpProject\\AmpWP\\Icon",
                    "Option": "\\AmpProject\\AmpWP\\Option",
                    "QueryVar": "\\AmpProject\\AmpWP\\QueryVar"
                },
                "line": 373,
                "end_line": 384,
                "arguments": [],
                "doc": {
                    "description": "Determines whether the legacy AMP post templates are being used.",
                    "long_description": "",
                    "tags": [
                        {
                            "name": "since",
                            "content": "2.0"
                        },
                        {
                            "name": "return",
                            "content": "",
                            "types": [
                                "bool"
                            ]
                        }
                    ]
                },
                "hooks": [],
                "uses": {
                    "methods": [
                        {
                            "name": "get_option",
                            "class": "\\AMP_Options_Manager",
                            "static": true,
                            "line": 374,
                            "end_line": 374
                        },
                        {
                            "name": "get_option",
                            "class": "\\AMP_Options_Manager",
                            "static": true,
                            "line": 378,
                            "end_line": 378
                        },
                        {
                            "name": "exists",
                            "class": "wp_get_theme($reader_theme)",
                            "static": false,
                            "line": 383,
                            "end_line": 383
                        }
                    ],
                    "functions": [
                        {
                            "name": "wp_get_theme",
                            "line": 383,
                            "end_line": 383
                        }
                    ]
                }
            },
            {
                "name": "amp_add_frontend_actions",
                "namespace": "global",
                "aliases": {
                    "ReaderThemes": "\\AmpProject\\AmpWP\\Admin\\ReaderThemes",
                    "AmpWpPluginFactory": "\\AmpProject\\AmpWP\\AmpWpPluginFactory",
                    "Icon": "\\AmpProject\\AmpWP\\Icon",
                    "Option": "\\AmpProject\\AmpWP\\Option",
                    "QueryVar": "\\AmpProject\\AmpWP\\QueryVar"
                },
                "line": 392,
                "end_line": 394,
                "arguments": [],
                "doc": {
                    "description": "Add frontend actions.",
                    "long_description": "",
                    "tags": [
                        {
                            "name": "since",
                            "content": "0.2"
                        },
                        {
                            "name": "internal",
                            "content": ""
                        }
                    ]
                },
                "hooks": [],
                "uses": {
                    "functions": [
                        {
                            "name": "add_action",
                            "line": 393,
                            "end_line": 393
                        }
                    ]
                }
            },
            {
                "name": "amp_is_available",
                "namespace": "global",
                "aliases": {
                    "ReaderThemes": "\\AmpProject\\AmpWP\\Admin\\ReaderThemes",
                    "AmpWpPluginFactory": "\\AmpProject\\AmpWP\\AmpWpPluginFactory",
                    "Icon": "\\AmpProject\\AmpWP\\Icon",
                    "Option": "\\AmpProject\\AmpWP\\Option",
                    "QueryVar": "\\AmpProject\\AmpWP\\QueryVar"
                },
                "line": 405,
                "end_line": 543,
                "arguments": [],
                "doc": {
                    "description": "Determine whether AMP is available for the current URL.",
                    "long_description": "",
                    "tags": [
                        {
                            "name": "since",
                            "content": "2.0"
                        },
                        {
                            "name": "return",
                            "content": "Whether there is an AMP version for the provided URL.",
                            "types": [
                                "bool"
                            ]
                        },
                        {
                            "name": "global",
                            "content": "string $pagenow"
                        },
                        {
                            "name": "global",
                            "content": "WP_Query $wp_query"
                        }
                    ]
                },
                "hooks": [],
                "uses": {
                    "functions": [
                        {
                            "name": "is_admin",
                            "line": 409,
                            "end_line": 409
                        },
                        {
                            "name": "in_array",
                            "line": 409,
                            "end_line": 409
                        },
                        {
                            "name": "sprintf",
                            "line": 418,
                            "end_line": 428
                        },
                        {
                            "name": "__",
                            "line": 420,
                            "end_line": 420
                        },
                        {
                            "name": "current_action",
                            "line": 424,
                            "end_line": 424
                        },
                        {
                            "name": "_doing_it_wrong",
                            "line": 429,
                            "end_line": 429
                        },
                        {
                            "name": "esc_html",
                            "line": 429,
                            "end_line": 429
                        },
                        {
                            "name": "did_action",
                            "line": 434,
                            "end_line": 434
                        },
                        {
                            "name": "warn",
                            "line": 435,
                            "end_line": 435
                        },
                        {
                            "name": "defined",
                            "line": 436,
                            "end_line": 436
                        },
                        {
                            "name": "did_action",
                            "line": 441,
                            "end_line": 441
                        },
                        {
                            "name": "warn",
                            "line": 442,
                            "end_line": 442
                        },
                        {
                            "name": "class_exists",
                            "line": 448,
                            "end_line": 448
                        },
                        {
                            "name": "defined",
                            "line": 448,
                            "end_line": 448
                        },
                        {
                            "name": "method_exists",
                            "line": 468,
                            "end_line": 468
                        },
                        {
                            "name": "is_customize_preview",
                            "line": 480,
                            "end_line": 480
                        },
                        {
                            "name": "amp_is_legacy",
                            "line": 484,
                            "end_line": 484
                        },
                        {
                            "name": "did_action",
                            "line": 487,
                            "end_line": 487
                        },
                        {
                            "name": "warn",
                            "line": 488,
                            "end_line": 488
                        },
                        {
                            "name": "amp_is_canonical",
                            "line": 494,
                            "end_line": 494
                        },
                        {
                            "name": "get_queried_object",
                            "line": 511,
                            "end_line": 511
                        },
                        {
                            "name": "amp_is_canonical",
                            "line": 523,
                            "end_line": 523
                        },
                        {
                            "name": "amp_get_current_url",
                            "line": 525,
                            "end_line": 525
                        },
                        {
                            "name": "count",
                            "line": 528,
                            "end_line": 528
                        },
                        {
                            "name": "amp_is_post_supported",
                            "line": 536,
                            "end_line": 536
                        }
                    ],
                    "methods": [
                        {
                            "name": "get",
                            "class": "$wp_query",
                            "static": false,
                            "line": 448,
                            "end_line": 448
                        },
                        {
                            "name": "is_embed",
                            "class": "$wp_query",
                            "static": false,
                            "line": 458,
                            "end_line": 458
                        },
                        {
                            "name": "is_feed",
                            "class": "$wp_query",
                            "static": false,
                            "line": 460,
                            "end_line": 460
                        },
                        {
                            "name": "is_comment_feed",
                            "class": "$wp_query",
                            "static": false,
                            "line": 462,
                            "end_line": 462
                        },
                        {
                            "name": "is_trackback",
                            "class": "$wp_query",
                            "static": false,
                            "line": 464,
                            "end_line": 464
                        },
                        {
                            "name": "is_robots",
                            "class": "$wp_query",
                            "static": false,
                            "line": 466,
                            "end_line": 466
                        },
                        {
                            "name": "is_favicon",
                            "class": "$wp_query",
                            "static": false,
                            "line": 468,
                            "end_line": 468
                        },
                        {
                            "name": "get_option",
                            "class": "\\AMP_Options_Manager",
                            "static": true,
                            "line": 476,
                            "end_line": 476
                        },
                        {
                            "name": "get_option",
                            "class": "\\AMP_Options_Manager",
                            "static": true,
                            "line": 478,
                            "end_line": 478
                        },
                        {
                            "name": "get_option",
                            "class": "\\AMP_Options_Manager",
                            "static": true,
                            "line": 489,
                            "end_line": 489
                        },
                        {
                            "name": "has_cap",
                            "class": "\\AMP_Validation_Manager",
                            "static": true,
                            "line": 494,
                            "end_line": 494
                        },
                        {
                            "name": "is_theme_support_forced",
                            "class": "\\AMP_Validation_Manager",
                            "static": true,
                            "line": 507,
                            "end_line": 507
                        },
                        {
                            "name": "get_template_availability",
                            "class": "\\AMP_Theme_Support",
                            "static": true,
                            "line": 514,
                            "end_line": 514
                        },
                        {
                            "name": "has_cap",
                            "class": "\\AMP_Validation_Manager",
                            "static": true,
                            "line": 523,
                            "end_line": 523
                        },
                        {
                            "name": "get_invalid_url_validation_errors",
                            "class": "\\AMP_Validated_URL_Post_Type",
                            "static": true,
                            "line": 524,
                            "end_line": 527
                        },
                        {
                            "name": "is_singular",
                            "class": "$wp_query",
                            "static": false,
                            "line": 535,
                            "end_line": 535
                        }
                    ]
                }
            },
            {
                "name": "_amp_bootstrap_customizer",
                "namespace": "global",
                "aliases": {
                    "ReaderThemes": "\\AmpProject\\AmpWP\\Admin\\ReaderThemes",
                    "AmpWpPluginFactory": "\\AmpProject\\AmpWP\\AmpWpPluginFactory",
                    "Icon": "\\AmpProject\\AmpWP\\Icon",
                    "Option": "\\AmpProject\\AmpWP\\Option",
                    "QueryVar": "\\AmpProject\\AmpWP\\QueryVar"
                },
                "line": 557,
                "end_line": 559,
                "arguments": [],
                "doc": {
                    "description": "Bootstraps the AMP customizer.",
                    "long_description": "Uses the priority of 12 for the 'after_setup_theme' action. Many themes run `add_theme_support()` on the 'after_setup_theme' hook, at the default priority of 10. And that function's documentation suggests adding it to that action. So this enables themes to `add_theme_support( AMP_Theme_Support::SLUG )`. And `amp_init_customizer()` will be able to recognize theme support by calling `amp_is_canonical()`.",
                    "tags": [
                        {
                            "name": "since",
                            "content": "0.4"
                        },
                        {
                            "name": "internal",
                            "content": ""
                        }
                    ]
                },
                "hooks": [],
                "uses": {
                    "functions": [
                        {
                            "name": "add_action",
                            "line": 558,
                            "end_line": 558
                        }
                    ]
                }
            },
            {
                "name": "amp_redirect_old_slug_to_new_url",
                "namespace": "global",
                "aliases": {
                    "ReaderThemes": "\\AmpProject\\AmpWP\\Admin\\ReaderThemes",
                    "AmpWpPluginFactory": "\\AmpProject\\AmpWP\\AmpWpPluginFactory",
                    "Icon": "\\AmpProject\\AmpWP\\Icon",
                    "Option": "\\AmpProject\\AmpWP\\Option",
                    "QueryVar": "\\AmpProject\\AmpWP\\QueryVar"
                },
                "line": 572,
                "end_line": 583,
                "arguments": [
                    {
                        "name": "$link",
                        "default": null,
                        "type": ""
                    }
                ],
                "doc": {
                    "description": "Redirects the old AMP URL to the new AMP URL.",
                    "long_description": "If post slug is updated the amp page with old post slug will be redirected to the updated url.",
                    "tags": [
                        {
                            "name": "since",
                            "content": "0.5"
                        },
                        {
                            "name": "internal",
                            "content": ""
                        },
                        {
                            "name": "param",
                            "content": "New URL of the post.",
                            "types": [
                                "string"
                            ],
                            "variable": "$link"
                        },
                        {
                            "name": "return",
                            "content": "URL to be redirected.",
                            "types": [
                                "string"
                            ]
                        }
                    ]
                },
                "hooks": [],
                "uses": {
                    "functions": [
                        {
                            "name": "amp_is_request",
                            "line": 574,
                            "end_line": 574
                        },
                        {
                            "name": "amp_is_canonical",
                            "line": 574,
                            "end_line": 574
                        },
                        {
                            "name": "amp_is_legacy",
                            "line": 575,
                            "end_line": 575
                        },
                        {
                            "name": "add_query_arg",
                            "line": 576,
                            "end_line": 576
                        },
                        {
                            "name": "amp_get_slug",
                            "line": 576,
                            "end_line": 576
                        },
                        {
                            "name": "trailingslashit",
                            "line": 578,
                            "end_line": 578
                        },
                        {
                            "name": "trailingslashit",
                            "line": 578,
                            "end_line": 578
                        },
                        {
                            "name": "amp_get_slug",
                            "line": 578,
                            "end_line": 578
                        }
                    ]
                }
            },
            {
                "name": "amp_get_slug",
                "namespace": "global",
                "aliases": {
                    "ReaderThemes": "\\AmpProject\\AmpWP\\Admin\\ReaderThemes",
                    "AmpWpPluginFactory": "\\AmpProject\\AmpWP\\AmpWpPluginFactory",
                    "Icon": "\\AmpProject\\AmpWP\\Icon",
                    "Option": "\\AmpProject\\AmpWP\\Option",
                    "QueryVar": "\\AmpProject\\AmpWP\\QueryVar"
                },
                "line": 596,
                "end_line": 607,
                "arguments": [],
                "doc": {
                    "description": "Get the slug used in AMP for the query var, endpoint, and post type support.",
                    "long_description": "The return value can be overridden by previously defining a AMP_QUERY_VAR constant or by adding a 'amp_query_var' filter, but *warning* this ability may be deprecated in the future. Normally the slug should be just 'amp'.",
                    "tags": [
                        {
                            "name": "since",
                            "content": "0.7"
                        },
                        {
                            "name": "return",
                            "content": "Slug used for query var, endpoint, and post type support.",
                            "types": [
                                "string"
                            ]
                        }
                    ]
                },
                "hooks": [
                    {
                        "name": "amp_query_var",
                        "line": 606,
                        "end_line": 606,
                        "type": "filter",
                        "arguments": [
                            "defined('AMP_QUERY_VAR') ? AMP_QUERY_VAR : \\AmpProject\\AmpWP\\QueryVar::AMP"
                        ],
                        "doc": {
                            "description": "Filter the AMP query variable.",
                            "long_description": "Warning: This filter may become deprecated.",
                            "tags": [
                                {
                                    "name": "since",
                                    "content": "0.3.2"
                                },
                                {
                                    "name": "param",
                                    "content": "The AMP query variable.",
                                    "types": [
                                        "string"
                                    ],
                                    "variable": "$query_var"
                                }
                            ]
                        }
                    }
                ],
                "uses": {
                    "functions": [
                        {
                            "name": "apply_filters",
                            "line": 606,
                            "end_line": 606
                        },
                        {
                            "name": "defined",
                            "line": 606,
                            "end_line": 606
                        }
                    ]
                }
            },
            {
                "name": "amp_get_current_url",
                "namespace": "global",
                "aliases": {
                    "ReaderThemes": "\\AmpProject\\AmpWP\\Admin\\ReaderThemes",
                    "AmpWpPluginFactory": "\\AmpProject\\AmpWP\\AmpWpPluginFactory",
                    "Icon": "\\AmpProject\\AmpWP\\Icon",
                    "Option": "\\AmpProject\\AmpWP\\Option",
                    "QueryVar": "\\AmpProject\\AmpWP\\QueryVar"
                },
                "line": 620,
                "end_line": 652,
                "arguments": [],
                "doc": {
                    "description": "Get the URL for the current request.",
                    "long_description": "This is essentially the REQUEST_URI prefixed by the scheme and host for the home URL. This is needed in particular due to subdirectory installs.",
                    "tags": [
                        {
                            "name": "since",
                            "content": "1.0"
                        },
                        {
                            "name": "internal",
                            "content": ""
                        },
                        {
                            "name": "return",
                            "content": "Current URL.",
                            "types": [
                                "string"
                            ]
                        }
                    ]
                },
                "hooks": [],
                "uses": {
                    "functions": [
                        {
                            "name": "wp_parse_url",
                            "line": 621,
                            "end_line": 621
                        },
                        {
                            "name": "home_url",
                            "line": 621,
                            "end_line": 621
                        },
                        {
                            "name": "is_array",
                            "line": 623,
                            "end_line": 623
                        },
                        {
                            "name": "is_ssl",
                            "line": 628,
                            "end_line": 628
                        },
                        {
                            "name": "wp_unslash",
                            "line": 631,
                            "end_line": 631
                        },
                        {
                            "name": "ltrim",
                            "line": 649,
                            "end_line": 649
                        },
                        {
                            "name": "wp_unslash",
                            "line": 649,
                            "end_line": 649
                        },
                        {
                            "name": "esc_url_raw",
                            "line": 651,
                            "end_line": 651
                        }
                    ]
                }
            },
            {
                "name": "amp_get_permalink",
                "namespace": "global",
                "aliases": {
                    "ReaderThemes": "\\AmpProject\\AmpWP\\Admin\\ReaderThemes",
                    "AmpWpPluginFactory": "\\AmpProject\\AmpWP\\AmpWpPluginFactory",
                    "Icon": "\\AmpProject\\AmpWP\\Icon",
                    "Option": "\\AmpProject\\AmpWP\\Option",
                    "QueryVar": "\\AmpProject\\AmpWP\\QueryVar"
                },
                "line": 662,
                "end_line": 731,
                "arguments": [
                    {
                        "name": "$post_id",
                        "default": null,
                        "type": ""
                    }
                ],
                "doc": {
                    "description": "Retrieves the full AMP-specific permalink for the given post ID.",
                    "long_description": "",
                    "tags": [
                        {
                            "name": "since",
                            "content": "0.1"
                        },
                        {
                            "name": "param",
                            "content": "Post ID.",
                            "types": [
                                "int"
                            ],
                            "variable": "$post_id"
                        },
                        {
                            "name": "return",
                            "content": "AMP permalink.",
                            "types": [
                                "string"
                            ]
                        }
                    ]
                },
                "hooks": [
                    {
                        "name": "amp_pre_get_permalink",
                        "line": 684,
                        "end_line": 684,
                        "type": "filter",
                        "arguments": [
                            "false",
                            "$post_id"
                        ],
                        "doc": {
                            "description": "Filters the AMP permalink to short-circuit normal generation.",
                            "long_description": "Returning a non-false value in this filter will cause the `get_permalink()` to get called and the `amp_get_permalink` filter to not apply.",
                            "tags": [
                                {
                                    "name": "since",
                                    "content": "0.4"
                                },
                                {
                                    "name": "since",
                                    "content": "1.0",
                                    "description": "This filter does not apply when 'amp' theme support is present."
                                },
                                {
                                    "name": "param",
                                    "content": "Short-circuited URL.",
                                    "types": [
                                        "false"
                                    ],
                                    "variable": "$url"
                                },
                                {
                                    "name": "param",
                                    "content": "Post ID.",
                                    "types": [
                                        "int"
                                    ],
                                    "variable": "$post_id"
                                }
                            ]
                        }
                    },
                    {
                        "name": "amp_get_permalink",
                        "line": 730,
                        "end_line": 730,
                        "type": "filter",
                        "arguments": [
                            "$amp_url",
                            "$post_id"
                        ],
                        "doc": {
                            "description": "Filters AMP permalink.",
                            "long_description": "",
                            "tags": [
                                {
                                    "name": "since",
                                    "content": "0.2"
                                },
                                {
                                    "name": "since",
                                    "content": "1.0",
                                    "description": "This filter does not apply when 'amp' theme support is present."
                                },
                                {
                                    "name": "param",
                                    "content": "AMP URL.",
                                    "types": [
                                        "false"
                                    ],
                                    "variable": "$amp_url"
                                },
                                {
                                    "name": "param",
                                    "content": "Post ID.",
                                    "types": [
                                        "int"
                                    ],
                                    "variable": "$post_id"
                                }
                            ]
                        }
                    }
                ],
                "uses": {
                    "functions": [
                        {
                            "name": "amp_is_legacy",
                            "line": 665,
                            "end_line": 665
                        },
                        {
                            "name": "get_permalink",
                            "line": 666,
                            "end_line": 666
                        },
                        {
                            "name": "amp_is_canonical",
                            "line": 667,
                            "end_line": 667
                        },
                        {
                            "name": "add_query_arg",
                            "line": 668,
                            "end_line": 668
                        },
                        {
                            "name": "amp_get_slug",
                            "line": 668,
                            "end_line": 668
                        },
                        {
                            "name": "apply_filters",
                            "line": 684,
                            "end_line": 684
                        },
                        {
                            "name": "get_permalink",
                            "line": 690,
                            "end_line": 690
                        },
                        {
                            "name": "amp_is_canonical",
                            "line": 692,
                            "end_line": 692
                        },
                        {
                            "name": "wp_parse_url",
                            "line": 695,
                            "end_line": 695
                        },
                        {
                            "name": "get_permalink",
                            "line": 695,
                            "end_line": 695
                        },
                        {
                            "name": "get_option",
                            "line": 696,
                            "end_line": 696
                        },
                        {
                            "name": "is_post_type_hierarchical",
                            "line": 705,
                            "end_line": 705
                        },
                        {
                            "name": "get_post_type",
                            "line": 705,
                            "end_line": 705
                        },
                        {
                            "name": "get_post_type",
                            "line": 708,
                            "end_line": 708
                        },
                        {
                            "name": "add_query_arg",
                            "line": 711,
                            "end_line": 711
                        },
                        {
                            "name": "amp_get_slug",
                            "line": 711,
                            "end_line": 711
                        },
                        {
                            "name": "preg_replace",
                            "line": 713,
                            "end_line": 713
                        },
                        {
                            "name": "trailingslashit",
                            "line": 714,
                            "end_line": 714
                        },
                        {
                            "name": "user_trailingslashit",
                            "line": 714,
                            "end_line": 714
                        },
                        {
                            "name": "amp_get_slug",
                            "line": 714,
                            "end_line": 714
                        },
                        {
                            "name": "apply_filters",
                            "line": 730,
                            "end_line": 730
                        }
                    ]
                }
            },
            {
                "name": "amp_remove_endpoint",
                "namespace": "global",
                "aliases": {
                    "ReaderThemes": "\\AmpProject\\AmpWP\\Admin\\ReaderThemes",
                    "AmpWpPluginFactory": "\\AmpProject\\AmpWP\\AmpWpPluginFactory",
                    "Icon": "\\AmpProject\\AmpWP\\Icon",
                    "Option": "\\AmpProject\\AmpWP\\Option",
                    "QueryVar": "\\AmpProject\\AmpWP\\QueryVar"
                },
                "line": 741,
                "end_line": 750,
                "arguments": [
                    {
                        "name": "$url",
                        "default": null,
                        "type": ""
                    }
                ],
                "doc": {
                    "description": "Remove the AMP endpoint (and query var) from a given URL.",
                    "long_description": "",
                    "tags": [
                        {
                            "name": "since",
                            "content": "0.7"
                        },
                        {
                            "name": "param",
                            "content": "URL.",
                            "types": [
                                "string"
                            ],
                            "variable": "$url"
                        },
                        {
                            "name": "return",
                            "content": "URL with AMP stripped.",
                            "types": [
                                "string"
                            ]
                        }
                    ]
                },
                "hooks": [],
                "uses": {
                    "functions": [
                        {
                            "name": "preg_replace",
                            "line": 744,
                            "end_line": 744
                        },
                        {
                            "name": "preg_quote",
                            "line": 744,
                            "end_line": 744
                        },
                        {
                            "name": "amp_get_slug",
                            "line": 744,
                            "end_line": 744
                        },
                        {
                            "name": "remove_query_arg",
                            "line": 747,
                            "end_line": 747
                        },
                        {
                            "name": "amp_get_slug",
                            "line": 747,
                            "end_line": 747
                        }
                    ]
                }
            },
            {
                "name": "amp_add_amphtml_link",
                "namespace": "global",
                "aliases": {
                    "ReaderThemes": "\\AmpProject\\AmpWP\\Admin\\ReaderThemes",
                    "AmpWpPluginFactory": "\\AmpProject\\AmpWP\\AmpWpPluginFactory",
                    "Icon": "\\AmpProject\\AmpWP\\Icon",
                    "Option": "\\AmpProject\\AmpWP\\Option",
                    "QueryVar": "\\AmpProject\\AmpWP\\QueryVar"
                },
                "line": 759,
                "end_line": 809,
                "arguments": [],
                "doc": {
                    "description": "Add amphtml link.",
                    "long_description": "If there are known validation errors for the current URL then do not output anything.",
                    "tags": [
                        {
                            "name": "since",
                            "content": "1.0"
                        }
                    ]
                },
                "hooks": [
                    {
                        "name": "amp_frontend_show_canonical",
                        "line": 776,
                        "end_line": 789,
                        "type": "filter_deprecated",
                        "arguments": [
                            "array(true)",
                            "'2.0'",
                            "''",
                            "sprintf(esc_html__('Removal of %1$s link should be done by removing %2$s from the %3$s action at %4$s.', 'amp'), 'amphtml', __FUNCTION__ . '()', 'wp_head', 'template_redirect')"
                        ],
                        "doc": {
                            "description": "Filters whether to show the amphtml link on the frontend.",
                            "long_description": "This is deprecated since the name was wrong and the use case is not clear. To remove this from being printed, instead of using the filter you can rather do:\n     add_action( 'template_redirect', static function () {         remove_action( 'wp_head', 'amp_add_amphtml_link' );     } );",
                            "tags": [
                                {
                                    "name": "since",
                                    "content": "0.2"
                                },
                                {
                                    "name": "deprecated",
                                    "content": "Remove amp_add_amphtml_link() call on wp_head action instead.",
                                    "description": "Remove amp_add_amphtml_link() call on wp_head action instead."
                                }
                            ]
                        }
                    }
                ],
                "uses": {
                    "functions": [
                        {
                            "name": "amp_is_canonical",
                            "line": 761,
                            "end_line": 761
                        },
                        {
                            "name": "apply_filters_deprecated",
                            "line": 776,
                            "end_line": 789
                        },
                        {
                            "name": "sprintf",
                            "line": 781,
                            "end_line": 788
                        },
                        {
                            "name": "esc_html__",
                            "line": 783,
                            "end_line": 783
                        },
                        {
                            "name": "amp_is_available",
                            "line": 794,
                            "end_line": 794
                        },
                        {
                            "name": "printf",
                            "line": 795,
                            "end_line": 795
                        },
                        {
                            "name": "esc_html__",
                            "line": 795,
                            "end_line": 795
                        },
                        {
                            "name": "add_query_arg",
                            "line": 800,
                            "end_line": 800
                        },
                        {
                            "name": "amp_get_slug",
                            "line": 800,
                            "end_line": 800
                        },
                        {
                            "name": "amp_get_current_url",
                            "line": 800,
                            "end_line": 800
                        },
                        {
                            "name": "amp_get_permalink",
                            "line": 802,
                            "end_line": 802
                        },
                        {
                            "name": "get_queried_object_id",
                            "line": 802,
                            "end_line": 802
                        },
                        {
                            "name": "remove_query_arg",
                            "line": 806,
                            "end_line": 806
                        },
                        {
                            "name": "printf",
                            "line": 807,
                            "end_line": 807
                        },
                        {
                            "name": "esc_url",
                            "line": 807,
                            "end_line": 807
                        }
                    ],
                    "methods": [
                        {
                            "name": "is_paired_available",
                            "class": "\\AMP_Theme_Support",
                            "static": true,
                            "line": 799,
                            "end_line": 799
                        }
                    ]
                }
            },
            {
                "name": "amp_is_post_supported",
                "namespace": "global",
                "aliases": {
                    "ReaderThemes": "\\AmpProject\\AmpWP\\Admin\\ReaderThemes",
                    "AmpWpPluginFactory": "\\AmpProject\\AmpWP\\AmpWpPluginFactory",
                    "Icon": "\\AmpProject\\AmpWP\\Icon",
                    "Option": "\\AmpProject\\AmpWP\\Option",
                    "QueryVar": "\\AmpProject\\AmpWP\\QueryVar"
                },
                "line": 820,
                "end_line": 822,
                "arguments": [
                    {
                        "name": "$post",
                        "default": null,
                        "type": ""
                    }
                ],
                "doc": {
                    "description": "Determine whether a given post supports AMP.",
                    "long_description": "",
                    "tags": [
                        {
                            "name": "since",
                            "content": "2.0",
                            "description": "Formerly known as post_supports_amp()."
                        },
                        {
                            "name": "see",
                            "content": "",
                            "refers": "AMP_Post_Type_Support::get_support_errors()"
                        },
                        {
                            "name": "param",
                            "content": "Post.",
                            "types": [
                                "\\WP_Post"
                            ],
                            "variable": "$post"
                        },
                        {
                            "name": "return",
                            "content": "Whether the post supports AMP.",
                            "types": [
                                "bool"
                            ]
                        }
                    ]
                },
                "hooks": [],
                "uses": {
                    "functions": [
                        {
                            "name": "count",
                            "line": 821,
                            "end_line": 821
                        }
                    ],
                    "methods": [
                        {
                            "name": "get_support_errors",
                            "class": "\\AMP_Post_Type_Support",
                            "static": true,
                            "line": 821,
                            "end_line": 821
                        }
                    ]
                }
            },
            {
                "name": "post_supports_amp",
                "namespace": "global",
                "aliases": {
                    "ReaderThemes": "\\AmpProject\\AmpWP\\Admin\\ReaderThemes",
                    "AmpWpPluginFactory": "\\AmpProject\\AmpWP\\AmpWpPluginFactory",
                    "Icon": "\\AmpProject\\AmpWP\\Icon",
                    "Option": "\\AmpProject\\AmpWP\\Option",
                    "QueryVar": "\\AmpProject\\AmpWP\\QueryVar"
                },
                "line": 835,
                "end_line": 837,
                "arguments": [
                    {
                        "name": "$post",
                        "default": null,
                        "type": ""
                    }
                ],
                "doc": {
                    "description": "Determine whether a given post supports AMP.",
                    "long_description": "",
                    "tags": [
                        {
                            "name": "since",
                            "content": "0.1"
                        },
                        {
                            "name": "since",
                            "content": "0.6",
                            "description": "Returns false when post has meta to disable AMP."
                        },
                        {
                            "name": "since",
                            "content": "2.0",
                            "description": "Renamed to AMP-prefixed version, amp_is_post_supported()."
                        },
                        {
                            "name": "deprecated",
                            "content": "Use amp_is_post_supported() instead.",
                            "description": "Use amp_is_post_supported() instead."
                        },
                        {
                            "name": "param",
                            "content": "Post.",
                            "types": [
                                "\\WP_Post"
                            ],
                            "variable": "$post"
                        },
                        {
                            "name": "return",
                            "content": "Whether the post supports AMP.",
                            "types": [
                                "bool"
                            ]
                        }
                    ]
                },
                "hooks": [],
                "uses": {
                    "functions": [
                        {
                            "name": "amp_is_post_supported",
                            "line": 836,
                            "end_line": 836
                        }
                    ]
                }
            },
            {
                "name": "amp_is_request",
                "namespace": "global",
                "aliases": {
                    "ReaderThemes": "\\AmpProject\\AmpWP\\Admin\\ReaderThemes",
                    "AmpWpPluginFactory": "\\AmpProject\\AmpWP\\AmpWpPluginFactory",
                    "Icon": "\\AmpProject\\AmpWP\\Icon",
                    "Option": "\\AmpProject\\AmpWP\\Option",
                    "QueryVar": "\\AmpProject\\AmpWP\\QueryVar"
                },
                "line": 853,
                "end_line": 886,
                "arguments": [],
                "doc": {
                    "description": "Determine whether the current request is for an AMP page.",
                    "long_description": "This function cannot be called before the parse_query action because it needs to be able to determine the queried object is able to be served as AMP. If 'amp' theme support is not present, this function returns true just if the query var is present. If theme support is present, then it returns true in transitional mode if an AMP template is available and the query var is present, or else in standard mode if just the template is available.",
                    "tags": [
                        {
                            "name": "since",
                            "content": "2.0",
                            "description": "Formerly known as is_amp_endpoint()."
                        },
                        {
                            "name": "return",
                            "content": "Whether it is the AMP endpoint.",
                            "types": [
                                "bool"
                            ]
                        },
                        {
                            "name": "global",
                            "content": "WP_Query $wp_query"
                        }
                    ]
                },
                "hooks": [],
                "uses": {
                    "functions": [
                        {
                            "name": "amp_is_canonical",
                            "line": 861,
                            "end_line": 861
                        },
                        {
                            "name": "amp_get_slug",
                            "line": 863,
                            "end_line": 863
                        },
                        {
                            "name": "amp_get_slug",
                            "line": 868,
                            "end_line": 868
                        },
                        {
                            "name": "amp_is_available",
                            "line": 873,
                            "end_line": 873
                        },
                        {
                            "name": "did_action",
                            "line": 878,
                            "end_line": 878
                        }
                    ],
                    "methods": [
                        {
                            "name": "get",
                            "class": "$wp_query",
                            "static": false,
                            "line": 868,
                            "end_line": 868
                        },
                        {
                            "name": "get_option",
                            "class": "\\AMP_Options_Manager",
                            "static": true,
                            "line": 879,
                            "end_line": 879
                        }
                    ]
                }
            },
            {
                "name": "is_amp_endpoint",
                "namespace": "global",
                "aliases": {
                    "ReaderThemes": "\\AmpProject\\AmpWP\\Admin\\ReaderThemes",
                    "AmpWpPluginFactory": "\\AmpProject\\AmpWP\\AmpWpPluginFactory",
                    "Icon": "\\AmpProject\\AmpWP\\Icon",
                    "Option": "\\AmpProject\\AmpWP\\Option",
                    "QueryVar": "\\AmpProject\\AmpWP\\QueryVar"
                },
                "line": 903,
                "end_line": 905,
                "arguments": [],
                "doc": {
                    "description": "Determine whether the current response being served as AMP.",
                    "long_description": "This function cannot be called before the parse_query action because it needs to be able to determine the queried object is able to be served as AMP. If 'amp' theme support is not present, this function returns true just if the query var is present. If theme support is present, then it returns true in transitional mode if an AMP template is available and the query var is present, or else in standard mode if just the template is available.",
                    "tags": [
                        {
                            "name": "since",
                            "content": "0.1"
                        },
                        {
                            "name": "since",
                            "content": "2.0",
                            "description": "Renamed to AMP-prefixed version, amp_is_request()."
                        },
                        {
                            "name": "deprecated",
                            "content": "Use amp_is_request() instead.",
                            "description": "Use amp_is_request() instead."
                        },
                        {
                            "name": "return",
                            "content": "Whether it is the AMP endpoint.",
                            "types": [
                                "bool"
                            ]
                        }
                    ]
                },
                "hooks": [],
                "uses": {
                    "functions": [
                        {
                            "name": "amp_is_request",
                            "line": 904,
                            "end_line": 904
                        }
                    ]
                }
            },
            {
                "name": "amp_get_asset_url",
                "namespace": "global",
                "aliases": {
                    "ReaderThemes": "\\AmpProject\\AmpWP\\Admin\\ReaderThemes",
                    "AmpWpPluginFactory": "\\AmpProject\\AmpWP\\AmpWpPluginFactory",
                    "Icon": "\\AmpProject\\AmpWP\\Icon",
                    "Option": "\\AmpProject\\AmpWP\\Option",
                    "QueryVar": "\\AmpProject\\AmpWP\\QueryVar"
                },
                "line": 916,
                "end_line": 918,
                "arguments": [
                    {
                        "name": "$file",
                        "default": null,
                        "type": ""
                    }
                ],
                "doc": {
                    "description": "Get AMP asset URL.",
                    "long_description": "",
                    "tags": [
                        {
                            "name": "since",
                            "content": "0.1"
                        },
                        {
                            "name": "internal",
                            "content": ""
                        },
                        {
                            "name": "param",
                            "content": "Relative path to file in assets directory.",
                            "types": [
                                "string"
                            ],
                            "variable": "$file"
                        },
                        {
                            "name": "return",
                            "content": "URL.",
                            "types": [
                                "string"
                            ]
                        }
                    ]
                },
                "hooks": [],
                "uses": {
                    "functions": [
                        {
                            "name": "plugins_url",
                            "line": 917,
                            "end_line": 917
                        },
                        {
                            "name": "sprintf",
                            "line": 917,
                            "end_line": 917
                        }
                    ]
                }
            },
            {
                "name": "amp_get_boilerplate_code",
                "namespace": "global",
                "aliases": {
                    "ReaderThemes": "\\AmpProject\\AmpWP\\Admin\\ReaderThemes",
                    "AmpWpPluginFactory": "\\AmpProject\\AmpWP\\AmpWpPluginFactory",
                    "Icon": "\\AmpProject\\AmpWP\\Icon",
                    "Option": "\\AmpProject\\AmpWP\\Option",
                    "QueryVar": "\\AmpProject\\AmpWP\\QueryVar"
                },
                "line": 929,
                "end_line": 932,
                "arguments": [],
                "doc": {
                    "description": "Get AMP boilerplate code.",
                    "long_description": "",
                    "tags": [
                        {
                            "name": "since",
                            "content": "0.7"
                        },
                        {
                            "name": "internal",
                            "content": ""
                        },
                        {
                            "name": "link",
                            "content": "https:\/\/www.ampproject.org\/docs\/reference\/spec#boilerplate",
                            "link": "https:\/\/www.ampproject.org\/docs\/reference\/spec#boilerplate"
                        },
                        {
                            "name": "return",
                            "content": "Boilerplate code.",
                            "types": [
                                "string"
                            ]
                        }
                    ]
                },
                "hooks": [],
                "uses": {
                    "functions": [
                        {
                            "name": "amp_get_boilerplate_stylesheets",
                            "line": 930,
                            "end_line": 930
                        },
                        {
                            "name": "sprintf",
                            "line": 931,
                            "end_line": 931
                        }
                    ]
                }
            },
            {
                "name": "amp_get_boilerplate_stylesheets",
                "namespace": "global",
                "aliases": {
                    "ReaderThemes": "\\AmpProject\\AmpWP\\Admin\\ReaderThemes",
                    "AmpWpPluginFactory": "\\AmpProject\\AmpWP\\AmpWpPluginFactory",
                    "Icon": "\\AmpProject\\AmpWP\\Icon",
                    "Option": "\\AmpProject\\AmpWP\\Option",
                    "QueryVar": "\\AmpProject\\AmpWP\\QueryVar"
                },
                "line": 943,
                "end_line": 948,
                "arguments": [],
                "doc": {
                    "description": "Get AMP boilerplate stylesheets.",
                    "long_description": "",
                    "tags": [
                        {
                            "name": "since",
                            "content": "1.3"
                        },
                        {
                            "name": "internal",
                            "content": ""
                        },
                        {
                            "name": "link",
                            "content": "https:\/\/www.ampproject.org\/docs\/reference\/spec#boilerplate",
                            "link": "https:\/\/www.ampproject.org\/docs\/reference\/spec#boilerplate"
                        },
                        {
                            "name": "return",
                            "content": "Stylesheets, where first is contained in style[amp-boilerplate] and the second in noscript>style[amp-boilerplate].",
                            "types": [
                                "string[]"
                            ]
                        }
                    ]
                },
                "hooks": []
            },
            {
                "name": "amp_add_generator_metadata",
                "namespace": "global",
                "aliases": {
                    "ReaderThemes": "\\AmpProject\\AmpWP\\Admin\\ReaderThemes",
                    "AmpWpPluginFactory": "\\AmpProject\\AmpWP\\AmpWpPluginFactory",
                    "Icon": "\\AmpProject\\AmpWP\\Icon",
                    "Option": "\\AmpProject\\AmpWP\\Option",
                    "QueryVar": "\\AmpProject\\AmpWP\\QueryVar"
                },
                "line": 958,
                "end_line": 970,
                "arguments": [],
                "doc": {
                    "description": "Add generator metadata.",
                    "long_description": "",
                    "tags": [
                        {
                            "name": "since",
                            "content": "0.6"
                        },
                        {
                            "name": "since",
                            "content": "1.0",
                            "description": "Add template mode."
                        },
                        {
                            "name": "since",
                            "content": "2.0",
                            "description": "Add reader theme."
                        },
                        {
                            "name": "internal",
                            "content": ""
                        }
                    ]
                },
                "hooks": [],
                "uses": {
                    "functions": [
                        {
                            "name": "sprintf",
                            "line": 959,
                            "end_line": 959
                        },
                        {
                            "name": "sprintf",
                            "line": 962,
                            "end_line": 962
                        },
                        {
                            "name": "sprintf",
                            "line": 966,
                            "end_line": 966
                        },
                        {
                            "name": "printf",
                            "line": 969,
                            "end_line": 969
                        },
                        {
                            "name": "esc_attr",
                            "line": 969,
                            "end_line": 969
                        }
                    ],
                    "methods": [
                        {
                            "name": "get_option",
                            "class": "\\AMP_Options_Manager",
                            "static": true,
                            "line": 961,
                            "end_line": 961
                        },
                        {
                            "name": "get_option",
                            "class": "\\AMP_Options_Manager",
                            "static": true,
                            "line": 964,
                            "end_line": 964
                        }
                    ]
                }
            },
            {
                "name": "amp_register_default_scripts",
                "namespace": "global",
                "aliases": {
                    "ReaderThemes": "\\AmpProject\\AmpWP\\Admin\\ReaderThemes",
                    "AmpWpPluginFactory": "\\AmpProject\\AmpWP\\AmpWpPluginFactory",
                    "Icon": "\\AmpProject\\AmpWP\\Icon",
                    "Option": "\\AmpProject\\AmpWP\\Option",
                    "QueryVar": "\\AmpProject\\AmpWP\\QueryVar"
                },
                "line": 979,
                "end_line": 1035,
                "arguments": [
                    {
                        "name": "$wp_scripts",
                        "default": null,
                        "type": ""
                    }
                ],
                "doc": {
                    "description": "Register default scripts for AMP components.",
                    "long_description": "",
                    "tags": [
                        {
                            "name": "internal",
                            "content": ""
                        },
                        {
                            "name": "param",
                            "content": "Scripts.",
                            "types": [
                                "\\WP_Scripts"
                            ],
                            "variable": "$wp_scripts"
                        }
                    ]
                },
                "hooks": [],
                "uses": {
                    "methods": [
                        {
                            "name": "add",
                            "class": "$wp_scripts",
                            "static": false,
                            "line": 982,
                            "end_line": 987
                        },
                        {
                            "name": "add_data",
                            "class": "$wp_scripts",
                            "static": false,
                            "line": 988,
                            "end_line": 994
                        },
                        {
                            "name": "add",
                            "class": "$wp_scripts",
                            "static": false,
                            "line": 998,
                            "end_line": 1003
                        },
                        {
                            "name": "add_data",
                            "class": "$wp_scripts",
                            "static": false,
                            "line": 1004,
                            "end_line": 1010
                        },
                        {
                            "name": "get_extension_specs",
                            "class": "\\AMP_Allowed_Tags_Generated",
                            "static": true,
                            "line": 1013,
                            "end_line": 1013
                        },
                        {
                            "name": "add",
                            "class": "$wp_scripts",
                            "static": false,
                            "line": 1020,
                            "end_line": 1025
                        },
                        {
                            "name": "query",
                            "class": "$wp_scripts",
                            "static": false,
                            "line": 1028,
                            "end_line": 1028
                        }
                    ],
                    "functions": [
                        {
                            "name": "sprintf",
                            "line": 1014,
                            "end_line": 1018
                        },
                        {
                            "name": "end",
                            "line": 1017,
                            "end_line": 1017
                        }
                    ]
                }
            },
            {
                "name": "amp_register_default_styles",
                "namespace": "global",
                "aliases": {
                    "ReaderThemes": "\\AmpProject\\AmpWP\\Admin\\ReaderThemes",
                    "AmpWpPluginFactory": "\\AmpProject\\AmpWP\\AmpWpPluginFactory",
                    "Icon": "\\AmpProject\\AmpWP\\Icon",
                    "Option": "\\AmpProject\\AmpWP\\Option",
                    "QueryVar": "\\AmpProject\\AmpWP\\QueryVar"
                },
                "line": 1045,
                "end_line": 1053,
                "arguments": [
                    {
                        "name": "$styles",
                        "default": null,
                        "type": "\\WP_Styles"
                    }
                ],
                "doc": {
                    "description": "Register default styles.",
                    "long_description": "",
                    "tags": [
                        {
                            "name": "since",
                            "content": "2.0"
                        },
                        {
                            "name": "internal",
                            "content": ""
                        },
                        {
                            "name": "param",
                            "content": "Styles.",
                            "types": [
                                "\\WP_Styles"
                            ],
                            "variable": "$styles"
                        }
                    ]
                },
                "hooks": [],
                "uses": {
                    "methods": [
                        {
                            "name": "add",
                            "class": "$styles",
                            "static": false,
                            "line": 1046,
                            "end_line": 1051
                        },
                        {
                            "name": "add_data",
                            "class": "$styles",
                            "static": false,
                            "line": 1052,
                            "end_line": 1052
                        }
                    ],
                    "functions": [
                        {
                            "name": "amp_get_asset_url",
                            "line": 1048,
                            "end_line": 1048
                        }
                    ]
                }
            },
            {
                "name": "amp_render_scripts",
                "namespace": "global",
                "aliases": {
                    "ReaderThemes": "\\AmpProject\\AmpWP\\Admin\\ReaderThemes",
                    "AmpWpPluginFactory": "\\AmpProject\\AmpWP\\AmpWpPluginFactory",
                    "Icon": "\\AmpProject\\AmpWP\\Icon",
                    "Option": "\\AmpProject\\AmpWP\\Option",
                    "QueryVar": "\\AmpProject\\AmpWP\\QueryVar"
                },
                "line": 1071,
                "end_line": 1101,
                "arguments": [
                    {
                        "name": "$scripts",
                        "default": null,
                        "type": ""
                    }
                ],
                "doc": {
                    "description": "Generate HTML for AMP scripts that have not yet been printed.",
                    "long_description": "This is adapted from `wp_scripts()->do_items()`, but it runs only the bare minimum required to output the missing scripts, without allowing other filters to apply which may cause an invalid AMP response. The HTML for the scripts is returned instead of being printed.",
                    "tags": [
                        {
                            "name": "since",
                            "content": "0.7.2"
                        },
                        {
                            "name": "see",
                            "content": "",
                            "refers": "WP_Scripts::do_items()"
                        },
                        {
                            "name": "see",
                            "content": "",
                            "refers": "AMP_Base_Embed_Handler::get_scripts()"
                        },
                        {
                            "name": "see",
                            "content": "",
                            "refers": "AMP_Base_Sanitizer::get_scripts()"
                        },
                        {
                            "name": "internal",
                            "content": ""
                        },
                        {
                            "name": "param",
                            "content": "Script handles mapped to URLs or true.",
                            "types": [
                                "array"
                            ],
                            "variable": "$scripts"
                        },
                        {
                            "name": "return",
                            "content": "HTML for scripts tags that have not yet been done.",
                            "types": [
                                "string"
                            ]
                        }
                    ]
                },
                "hooks": [],
                "uses": {
                    "functions": [
                        {
                            "name": "is_string",
                            "line": 1079,
                            "end_line": 1079
                        },
                        {
                            "name": "wp_script_is",
                            "line": 1079,
                            "end_line": 1079
                        },
                        {
                            "name": "wp_scripts",
                            "line": 1080,
                            "end_line": 1080
                        },
                        {
                            "name": "array_diff",
                            "line": 1084,
                            "end_line": 1084
                        },
                        {
                            "name": "array_keys",
                            "line": 1084,
                            "end_line": 1084
                        },
                        {
                            "name": "wp_scripts",
                            "line": 1084,
                            "end_line": 1084
                        },
                        {
                            "name": "wp_script_is",
                            "line": 1085,
                            "end_line": 1085
                        },
                        {
                            "name": "wp_scripts",
                            "line": 1089,
                            "end_line": 1089
                        },
                        {
                            "name": "amp_filter_script_loader_tag",
                            "line": 1090,
                            "end_line": 1096
                        },
                        {
                            "name": "sprintf",
                            "line": 1091,
                            "end_line": 1094
                        },
                        {
                            "name": "esc_url",
                            "line": 1093,
                            "end_line": 1093
                        },
                        {
                            "name": "wp_scripts",
                            "line": 1098,
                            "end_line": 1098
                        }
                    ]
                }
            },
            {
                "name": "amp_filter_script_loader_tag",
                "namespace": "global",
                "aliases": {
                    "ReaderThemes": "\\AmpProject\\AmpWP\\Admin\\ReaderThemes",
                    "AmpWpPluginFactory": "\\AmpProject\\AmpWP\\AmpWpPluginFactory",
                    "Icon": "\\AmpProject\\AmpWP\\Icon",
                    "Option": "\\AmpProject\\AmpWP\\Option",
                    "QueryVar": "\\AmpProject\\AmpWP\\QueryVar"
                },
                "line": 1114,
                "end_line": 1164,
                "arguments": [
                    {
                        "name": "$tag",
                        "default": null,
                        "type": ""
                    },
                    {
                        "name": "$handle",
                        "default": null,
                        "type": ""
                    }
                ],
                "doc": {
                    "description": "Add AMP script attributes to enqueued scripts.",
                    "long_description": "",
                    "tags": [
                        {
                            "name": "link",
                            "content": "https:\/\/core.trac.wordpress.org\/ticket\/12009",
                            "link": "https:\/\/core.trac.wordpress.org\/ticket\/12009"
                        },
                        {
                            "name": "since",
                            "content": "0.7"
                        },
                        {
                            "name": "internal",
                            "content": ""
                        },
                        {
                            "name": "param",
                            "content": "The script tag.",
                            "types": [
                                "string"
                            ],
                            "variable": "$tag"
                        },
                        {
                            "name": "param",
                            "content": "The script handle.",
                            "types": [
                                "string"
                            ],
                            "variable": "$handle"
                        },
                        {
                            "name": "return",
                            "content": "Script loader tag.",
                            "types": [
                                "string"
                            ]
                        }
                    ]
                },
                "hooks": [],
                "uses": {
                    "functions": [
                        {
                            "name": "wp_scripts",
                            "line": 1116,
                            "end_line": 1116
                        },
                        {
                            "name": "strpos",
                            "line": 1117,
                            "end_line": 1117
                        },
                        {
                            "name": "strtok",
                            "line": 1130,
                            "end_line": 1130
                        },
                        {
                            "name": "substr",
                            "line": 1130,
                            "end_line": 1130
                        },
                        {
                            "name": "strlen",
                            "line": 1130,
                            "end_line": 1130
                        },
                        {
                            "name": "preg_match",
                            "line": 1148,
                            "end_line": 1148
                        },
                        {
                            "name": "sprintf",
                            "line": 1150,
                            "end_line": 1150
                        },
                        {
                            "name": "esc_attr",
                            "line": 1150,
                            "end_line": 1150
                        },
                        {
                            "name": "sprintf",
                            "line": 1152,
                            "end_line": 1152
                        },
                        {
                            "name": "esc_attr",
                            "line": 1152,
                            "end_line": 1152
                        },
                        {
                            "name": "esc_attr",
                            "line": 1152,
                            "end_line": 1152
                        },
                        {
                            "name": "preg_replace",
                            "line": 1154,
                            "end_line": 1159
                        }
                    ]
                }
            },
            {
                "name": "amp_filter_font_style_loader_tag_with_crossorigin_anonymous",
                "namespace": "global",
                "aliases": {
                    "ReaderThemes": "\\AmpProject\\AmpWP\\Admin\\ReaderThemes",
                    "AmpWpPluginFactory": "\\AmpProject\\AmpWP\\AmpWpPluginFactory",
                    "Icon": "\\AmpProject\\AmpWP\\Icon",
                    "Option": "\\AmpProject\\AmpWP\\Option",
                    "QueryVar": "\\AmpProject\\AmpWP\\QueryVar"
                },
                "line": 1188,
                "end_line": 1207,
                "arguments": [
                    {
                        "name": "$tag",
                        "default": null,
                        "type": ""
                    },
                    {
                        "name": "$handle",
                        "default": null,
                        "type": ""
                    },
                    {
                        "name": "$href",
                        "default": null,
                        "type": ""
                    }
                ],
                "doc": {
                    "description": "Explicitly opt-in to CORS mode by adding the crossorigin attribute to font stylesheet links.",
                    "long_description": "This explicitly triggers a CORS request, and gets back a non-opaque response, ensuring that a service worker caching the external stylesheet will not inflate the storage quota. This must be done in AMP and non-AMP alike because in transitional mode the service worker could cache the font stylesheets in a non-AMP document without CORS (crossorigin=\"anonymous\") in which case the service worker could then fail to serve the cached font resources in an AMP document with the warning:\n > The FetchEvent resulted in a network error response: an \"opaque\" response was used for a request whose type is not no-cors",
                    "tags": [
                        {
                            "name": "since",
                            "content": "1.0"
                        },
                        {
                            "name": "link",
                            "content": "https:\/\/developers.google.com\/web\/tools\/workbox\/guides\/storage-quota#beware_of_opaque_responses",
                            "link": "https:\/\/developers.google.com\/web\/tools\/workbox\/guides\/storage-quota#beware_of_opaque_responses"
                        },
                        {
                            "name": "link",
                            "content": "https:\/\/developers.google.com\/web\/tools\/workbox\/guides\/handle-third-party-requests#cross-origin_requests_and_opaque_responses",
                            "link": "https:\/\/developers.google.com\/web\/tools\/workbox\/guides\/handle-third-party-requests#cross-origin_requests_and_opaque_responses"
                        },
                        {
                            "name": "todo",
                            "content": "This should be proposed for WordPress core."
                        },
                        {
                            "name": "internal",
                            "content": ""
                        },
                        {
                            "name": "param",
                            "content": "Link tag HTML.",
                            "types": [
                                "string"
                            ],
                            "variable": "$tag"
                        },
                        {
                            "name": "param",
                            "content": "Dependency handle.",
                            "types": [
                                "string"
                            ],
                            "variable": "$handle"
                        },
                        {
                            "name": "param",
                            "content": "Link URL.",
                            "types": [
                                "string"
                            ],
                            "variable": "$href"
                        },
                        {
                            "name": "return",
                            "content": "Link tag HTML.",
                            "types": [
                                "string"
                            ]
                        }
                    ]
                },
                "hooks": [],
                "uses": {
                    "methods": [
                        {
                            "name": "get_allowed_tag",
                            "class": "\\AMP_Allowed_Tags_Generated",
                            "static": true,
                            "line": 1192,
                            "end_line": 1192
                        }
                    ],
                    "functions": [
                        {
                            "name": "preg_replace",
                            "line": 1200,
                            "end_line": 1200
                        },
                        {
                            "name": "preg_match",
                            "line": 1202,
                            "end_line": 1202
                        },
                        {
                            "name": "strpos",
                            "line": 1202,
                            "end_line": 1202
                        },
                        {
                            "name": "preg_replace",
                            "line": 1203,
                            "end_line": 1203
                        }
                    ]
                }
            },
            {
                "name": "amp_get_analytics",
                "namespace": "global",
                "aliases": {
                    "ReaderThemes": "\\AmpProject\\AmpWP\\Admin\\ReaderThemes",
                    "AmpWpPluginFactory": "\\AmpProject\\AmpWP\\AmpWpPluginFactory",
                    "Icon": "\\AmpProject\\AmpWP\\Icon",
                    "Option": "\\AmpProject\\AmpWP\\Option",
                    "QueryVar": "\\AmpProject\\AmpWP\\QueryVar"
                },
                "line": 1218,
                "end_line": 1248,
                "arguments": [
                    {
                        "name": "$analytics",
                        "default": "array()",
                        "type": ""
                    }
                ],
                "doc": {
                    "description": "Retrieve analytics data added in backend.",
                    "long_description": "",
                    "tags": [
                        {
                            "name": "since",
                            "content": "0.7"
                        },
                        {
                            "name": "internal",
                            "content": ""
                        },
                        {
                            "name": "param",
                            "content": "Analytics entries.",
                            "types": [
                                "array"
                            ],
                            "variable": "$analytics"
                        },
                        {
                            "name": "return",
                            "content": "Analytics.",
                            "types": [
                                "array"
                            ]
                        }
                    ]
                },
                "hooks": [
                    {
                        "name": "amp_analytics_entries",
                        "line": 1231,
                        "end_line": 1231,
                        "type": "filter",
                        "arguments": [
                            "$analytics_entries"
                        ],
                        "doc": {
                            "description": "Add amp-analytics tags.",
                            "long_description": "This filter allows you to easily insert any amp-analytics tags without needing much heavy lifting. This filter should be used to alter entries for transitional mode.",
                            "tags": [
                                {
                                    "name": "since",
                                    "content": "0.7"
                                },
                                {
                                    "name": "param",
                                    "content": "An associative array of the analytics entries we want to output. Each array entry must have a unique key, and the value should be an array with the following keys: `type`, `attributes`, `config_data`. See readme for more details.",
                                    "types": [
                                        "array"
                                    ],
                                    "variable": "$analytics_entries"
                                }
                            ]
                        }
                    }
                ],
                "uses": {
                    "methods": [
                        {
                            "name": "get_option",
                            "class": "\\AMP_Options_Manager",
                            "static": true,
                            "line": 1219,
                            "end_line": 1219
                        }
                    ],
                    "functions": [
                        {
                            "name": "apply_filters",
                            "line": 1231,
                            "end_line": 1231
                        },
                        {
                            "name": "is_string",
                            "line": 1241,
                            "end_line": 1241
                        },
                        {
                            "name": "json_decode",
                            "line": 1242,
                            "end_line": 1242
                        }
                    ]
                }
            },
            {
                "name": "amp_print_analytics",
                "namespace": "global",
                "aliases": {
                    "ReaderThemes": "\\AmpProject\\AmpWP\\Admin\\ReaderThemes",
                    "AmpWpPluginFactory": "\\AmpProject\\AmpWP\\AmpWpPluginFactory",
                    "Icon": "\\AmpProject\\AmpWP\\Icon",
                    "Option": "\\AmpProject\\AmpWP\\Option",
                    "QueryVar": "\\AmpProject\\AmpWP\\QueryVar"
                },
                "line": 1258,
                "end_line": 1318,
                "arguments": [
                    {
                        "name": "$analytics",
                        "default": null,
                        "type": ""
                    }
                ],
                "doc": {
                    "description": "Print analytics data.",
                    "long_description": "",
                    "tags": [
                        {
                            "name": "since",
                            "content": "0.7"
                        },
                        {
                            "name": "internal",
                            "content": ""
                        },
                        {
                            "name": "param",
                            "content": "Analytics entries, or empty string when called via wp_footer action.",
                            "types": [
                                "array",
                                "string"
                            ],
                            "variable": "$analytics"
                        }
                    ]
                },
                "hooks": [
                    {
                        "name": "amp_print_analytics",
                        "line": 1276,
                        "end_line": 1276,
                        "type": "action",
                        "arguments": [
                            "$analytics_entries"
                        ],
                        "doc": {
                            "description": "Triggers before analytics entries are printed as amp-analytics tags.",
                            "long_description": "This is useful for printing additional `amp-analytics` tags to the page without having to refactor any existing markup generation logic to use the data structure mutated by the `amp_analytics_entries` filter. For such cases, this action should be used for printing `amp-analytics` tags as opposed to using the `wp_footer` and `amp_post_template_footer` actions.",
                            "tags": [
                                {
                                    "name": "since",
                                    "content": "1.3"
                                },
                                {
                                    "name": "param",
                                    "content": "Analytics entries, already potentially modified by the amp_analytics_entries filter.",
                                    "types": [
                                        "array"
                                    ],
                                    "variable": "$analytics_entries"
                                }
                            ]
                        }
                    }
                ],
                "uses": {
                    "functions": [
                        {
                            "name": "amp_get_analytics",
                            "line": 1263,
                            "end_line": 1263
                        },
                        {
                            "name": "do_action",
                            "line": 1276,
                            "end_line": 1276
                        },
                        {
                            "name": "_doing_it_wrong",
                            "line": 1285,
                            "end_line": 1296
                        },
                        {
                            "name": "sprintf",
                            "line": 1287,
                            "end_line": 1294
                        },
                        {
                            "name": "esc_html__",
                            "line": 1289,
                            "end_line": 1289
                        },
                        {
                            "name": "esc_html",
                            "line": 1290,
                            "end_line": 1290
                        },
                        {
                            "name": "esc_html",
                            "line": 1293,
                            "end_line": 1293
                        },
                        {
                            "name": "implode",
                            "line": 1293,
                            "end_line": 1293
                        },
                        {
                            "name": "array_keys",
                            "line": 1293,
                            "end_line": 1293
                        },
                        {
                            "name": "wp_json_encode",
                            "line": 1304,
                            "end_line": 1304
                        },
                        {
                            "name": "array_merge",
                            "line": 1307,
                            "end_line": 1310
                        },
                        {
                            "name": "compact",
                            "line": 1308,
                            "end_line": 1308
                        }
                    ],
                    "methods": [
                        {
                            "name": "build_tag",
                            "class": "\\AMP_HTML_Utils",
                            "static": true,
                            "line": 1299,
                            "end_line": 1305
                        },
                        {
                            "name": "build_tag",
                            "class": "\\AMP_HTML_Utils",
                            "static": true,
                            "line": 1316,
                            "end_line": 1316
                        }
                    ]
                }
            },
            {
                "name": "amp_get_content_embed_handlers",
                "namespace": "global",
                "aliases": {
                    "ReaderThemes": "\\AmpProject\\AmpWP\\Admin\\ReaderThemes",
                    "AmpWpPluginFactory": "\\AmpProject\\AmpWP\\AmpWpPluginFactory",
                    "Icon": "\\AmpProject\\AmpWP\\Icon",
                    "Option": "\\AmpProject\\AmpWP\\Option",
                    "QueryVar": "\\AmpProject\\AmpWP\\QueryVar"
                },
                "line": 1330,
                "end_line": 1380,
                "arguments": [
                    {
                        "name": "$post",
                        "default": "null",
                        "type": ""
                    }
                ],
                "doc": {
                    "description": "Get content embed handlers.",
                    "long_description": "",
                    "tags": [
                        {
                            "name": "since",
                            "content": "0.7"
                        },
                        {
                            "name": "internal",
                            "content": ""
                        },
                        {
                            "name": "param",
                            "content": "Post that the content belongs to. Deprecated when theme supports AMP, as embeds may apply                      to non-post data (e.g. Text widget).",
                            "types": [
                                "\\WP_Post"
                            ],
                            "variable": "$post"
                        },
                        {
                            "name": "return",
                            "content": "Embed handlers.",
                            "types": [
                                "array"
                            ]
                        }
                    ]
                },
                "hooks": [
                    {
                        "name": "amp_content_embed_handlers",
                        "line": 1353,
                        "end_line": 1379,
                        "type": "filter",
                        "arguments": [
                            "array('AMP_Core_Block_Handler' => array(), 'AMP_Twitter_Embed_Handler' => array(), 'AMP_YouTube_Embed_Handler' => array(), 'AMP_Crowdsignal_Embed_Handler' => array(), 'AMP_DailyMotion_Embed_Handler' => array(), 'AMP_Vimeo_Embed_Handler' => array(), 'AMP_SoundCloud_Embed_Handler' => array(), 'AMP_Instagram_Embed_Handler' => array(), 'AMP_Issuu_Embed_Handler' => array(), 'AMP_Meetup_Embed_Handler' => array(), 'AMP_Facebook_Embed_Handler' => array(), 'AMP_Pinterest_Embed_Handler' => array(), 'AMP_Playlist_Embed_Handler' => array(), 'AMP_Reddit_Embed_Handler' => array(), 'AMP_TikTok_Embed_Handler' => array(), 'AMP_Tumblr_Embed_Handler' => array(), 'AMP_Gallery_Embed_Handler' => array(), 'AMP_Gfycat_Embed_Handler' => array(), 'AMP_Imgur_Embed_Handler' => array(), 'AMP_Scribd_Embed_Handler' => array(), 'AMP_WordPress_TV_Embed_Handler' => array())",
                            "$post"
                        ],
                        "doc": {
                            "description": "Filters the content embed handlers.",
                            "long_description": "",
                            "tags": [
                                {
                                    "name": "since",
                                    "content": "0.2"
                                },
                                {
                                    "name": "since",
                                    "content": "0.7",
                                    "description": "Deprecated $post parameter."
                                },
                                {
                                    "name": "param",
                                    "content": "Handlers.",
                                    "types": [
                                        "array"
                                    ],
                                    "variable": "$handlers"
                                },
                                {
                                    "name": "param",
                                    "content": "Post. Deprecated. It will be null when `amp_is_canonical()`.",
                                    "types": [
                                        "\\WP_Post"
                                    ],
                                    "variable": "$post"
                                }
                            ]
                        }
                    }
                ],
                "uses": {
                    "functions": [
                        {
                            "name": "amp_is_legacy",
                            "line": 1331,
                            "end_line": 1331,
                            "deprecation_version": "0.7"
                        },
                        {
                            "name": "_deprecated_argument",
                            "line": 1332,
                            "end_line": 1340
                        },
                        {
                            "name": "sprintf",
                            "line": 1335,
                            "end_line": 1339
                        },
                        {
                            "name": "esc_html__",
                            "line": 1337,
                            "end_line": 1337
                        },
                        {
                            "name": "apply_filters",
                            "line": 1353,
                            "end_line": 1379
                        }
                    ]
                }
            },
            {
                "name": "amp_is_dev_mode",
                "namespace": "global",
                "aliases": {
                    "ReaderThemes": "\\AmpProject\\AmpWP\\Admin\\ReaderThemes",
                    "AmpWpPluginFactory": "\\AmpProject\\AmpWP\\AmpWpPluginFactory",
                    "Icon": "\\AmpProject\\AmpWP\\Icon",
                    "Option": "\\AmpProject\\AmpWP\\Option",
                    "QueryVar": "\\AmpProject\\AmpWP\\QueryVar"
                },
                "line": 1393,
                "end_line": 1416,
                "arguments": [],
                "doc": {
                    "description": "Determine whether AMP dev mode is enabled.",
                    "long_description": "When enabled, the <html> element will get the data-ampdevmode attribute and the plugin will add the same attribute to elements associated with the admin bar and other elements that are provided by the `amp_dev_mode_element_xpaths` filter.",
                    "tags": [
                        {
                            "name": "since",
                            "content": "1.3"
                        },
                        {
                            "name": "return",
                            "content": "Whether AMP dev mode is enabled.",
                            "types": [
                                "bool"
                            ]
                        }
                    ]
                },
                "hooks": [
                    {
                        "name": "amp_dev_mode_enabled",
                        "line": 1405,
                        "end_line": 1415,
                        "type": "filter",
                        "arguments": [
                            "is_admin_bar_showing() && is_user_logged_in() || is_customize_preview()"
                        ],
                        "doc": {
                            "description": "Filters whether AMP mode is enabled.",
                            "long_description": "When enabled, the data-ampdevmode attribute will be added to the document element and it will allow the attributes to be added to the admin bar. It will also add the attribute to all elements which match the queries for the expressions returned by the 'amp_dev_mode_element_xpaths' filter.",
                            "tags": [
                                {
                                    "name": "since",
                                    "content": "1.3"
                                },
                                {
                                    "name": "param",
                                    "content": "Whether AMP dev mode is enabled.",
                                    "types": [
                                        "bool"
                                    ],
                                    "variable": ""
                                }
                            ]
                        }
                    }
                ],
                "uses": {
                    "functions": [
                        {
                            "name": "apply_filters",
                            "line": 1405,
                            "end_line": 1415
                        },
                        {
                            "name": "is_admin_bar_showing",
                            "line": 1411,
                            "end_line": 1411
                        },
                        {
                            "name": "is_user_logged_in",
                            "line": 1411,
                            "end_line": 1411
                        },
                        {
                            "name": "is_customize_preview",
                            "line": 1413,
                            "end_line": 1413
                        }
                    ]
                }
            },
            {
                "name": "amp_get_content_sanitizers",
                "namespace": "global",
                "aliases": {
                    "ReaderThemes": "\\AmpProject\\AmpWP\\Admin\\ReaderThemes",
                    "AmpWpPluginFactory": "\\AmpProject\\AmpWP\\AmpWpPluginFactory",
                    "Icon": "\\AmpProject\\AmpWP\\Icon",
                    "Option": "\\AmpProject\\AmpWP\\Option",
                    "QueryVar": "\\AmpProject\\AmpWP\\QueryVar"
                },
                "line": 1429,
                "end_line": 1605,
                "arguments": [
                    {
                        "name": "$post",
                        "default": "null",
                        "type": ""
                    }
                ],
                "doc": {
                    "description": "Get content sanitizers.",
                    "long_description": "",
                    "tags": [
                        {
                            "name": "since",
                            "content": "0.7"
                        },
                        {
                            "name": "since",
                            "content": "1.1",
                            "description": "Added AMP_Nav_Menu_Toggle_Sanitizer and AMP_Nav_Menu_Dropdown_Sanitizer."
                        },
                        {
                            "name": "internal",
                            "content": ""
                        },
                        {
                            "name": "param",
                            "content": "Post that the content belongs to. Deprecated when theme supports AMP, as sanitizers apply                      to non-post data (e.g. Text widget).",
                            "types": [
                                "\\WP_Post"
                            ],
                            "variable": "$post"
                        },
                        {
                            "name": "return",
                            "content": "Embed handlers.",
                            "types": [
                                "array"
                            ]
                        }
                    ]
                },
                "hooks": [
                    {
                        "name": "amp_to_amp_linking_enabled",
                        "line": 1457,
                        "end_line": 1460,
                        "type": "filter",
                        "arguments": [
                            "\\AMP_Theme_Support::TRANSITIONAL_MODE_SLUG === \\AMP_Options_Manager::get_option(\\AmpProject\\AmpWP\\Option::THEME_SUPPORT)"
                        ],
                        "doc": {
                            "description": "Filters whether AMP-to-AMP linking should be enabled.",
                            "long_description": "",
                            "tags": [
                                {
                                    "name": "since",
                                    "content": "1.4.0"
                                },
                                {
                                    "name": "param",
                                    "content": "Whether AMP-to-AMP linking should be enabled.",
                                    "types": [
                                        "bool"
                                    ],
                                    "variable": "$amp_to_amp_linking_enabled"
                                }
                            ]
                        }
                    },
                    {
                        "name": "amp_to_amp_excluded_urls",
                        "line": 1523,
                        "end_line": 1523,
                        "type": "filter",
                        "arguments": [
                            "array()"
                        ],
                        "doc": {
                            "description": "Filters the list of URLs which are excluded from being included in AMP-to-AMP linking.",
                            "long_description": "This only applies when the amp_to_amp_linking_enabled filter returns true, which it does by default in Transitional mode. This filter can be used to opt-in when in Reader mode. This does not apply in Standard mode. Only frontend URLs on the frontend need be excluded, as all other URLs are never made into AMP links.",
                            "tags": [
                                {
                                    "name": "since",
                                    "content": "1.5.0"
                                },
                                {
                                    "name": "param",
                                    "content": "The URLs to exclude from having AMP-to-AMP links.",
                                    "types": [
                                        "string[]"
                                    ],
                                    "variable": "$excluded_urls"
                                }
                            ]
                        }
                    },
                    {
                        "name": "amp_content_sanitizers",
                        "line": 1540,
                        "end_line": 1540,
                        "type": "filter",
                        "arguments": [
                            "$sanitizers",
                            "$post"
                        ],
                        "doc": {
                            "description": "Filters the content sanitizers.",
                            "long_description": "",
                            "tags": [
                                {
                                    "name": "since",
                                    "content": "0.2"
                                },
                                {
                                    "name": "since",
                                    "content": "0.7",
                                    "description": "Deprecated $post parameter. It will be null when `amp_is_canonical()`."
                                },
                                {
                                    "name": "param",
                                    "content": "Handlers.",
                                    "types": [
                                        "array"
                                    ],
                                    "variable": "$handlers"
                                },
                                {
                                    "name": "param",
                                    "content": "Post. Deprecated.",
                                    "types": [
                                        "\\WP_Post"
                                    ],
                                    "variable": "$post"
                                }
                            ]
                        }
                    },
                    {
                        "name": "amp_dev_mode_element_xpaths",
                        "line": 1553,
                        "end_line": 1553,
                        "type": "filter",
                        "arguments": [
                            "array()"
                        ],
                        "doc": {
                            "description": "Filters the XPath queries for elements that should be enabled for dev mode.",
                            "long_description": "By supplying XPath queries to this filter, the data-ampdevmode attribute will automatically be added to the root HTML element as well as to any elements that match the expressions. The attribute is added to the elements prior to running any of the sanitizers.",
                            "tags": [
                                {
                                    "name": "since",
                                    "content": "1.3"
                                },
                                {
                                    "name": "param",
                                    "content": "XPath element queries. Context is the root element.",
                                    "types": [
                                        "string[]"
                                    ],
                                    "variable": "$element_xpaths"
                                }
                            ]
                        }
                    },
                    {
                        "name": "amp_parsed_css_transient_caching_allowed",
                        "line": 1593,
                        "end_line": 1593,
                        "type": "filter",
                        "arguments": [
                            "true"
                        ],
                        "doc": {
                            "description": "Filters whether parsed CSS is allowed to be cached in transients.",
                            "long_description": "When this is filtered to be false, parsed CSS will not be stored in transients. This is important when there is highly-variable CSS content in order to prevent filling up the wp_options table with an endless number of entries.",
                            "tags": [
                                {
                                    "name": "since",
                                    "content": "1.5.0"
                                },
                                {
                                    "name": "param",
                                    "content": "Transient caching allowed.",
                                    "types": [
                                        "bool"
                                    ],
                                    "variable": "$transient_caching_allowed"
                                }
                            ]
                        }
                    }
                ],
                "uses": {
                    "methods": [
                        {
                            "name": "get_theme_support_args",
                            "class": "\\AMP_Theme_Support",
                            "static": true,
                            "line": 1430,
                            "end_line": 1430
                        },
                        {
                            "name": "get_option",
                            "class": "\\AMP_Options_Manager",
                            "static": true,
                            "line": 1459,
                            "end_line": 1459
                        },
                        {
                            "name": "get_option",
                            "class": "\\AMP_Options_Manager",
                            "static": true,
                            "line": 1509,
                            "end_line": 1509
                        }
                    ],
                    "functions": [
                        {
                            "name": "amp_is_legacy",
                            "line": 1432,
                            "end_line": 1432,
                            "deprecation_version": "0.7"
                        },
                        {
                            "name": "_deprecated_argument",
                            "line": 1433,
                            "end_line": 1441
                        },
                        {
                            "name": "sprintf",
                            "line": 1436,
                            "end_line": 1440
                        },
                        {
                            "name": "esc_html__",
                            "line": 1438,
                            "end_line": 1438
                        },
                        {
                            "name": "wp_parse_url",
                            "line": 1445,
                            "end_line": 1445
                        },
                        {
                            "name": "get_home_url",
                            "line": 1445,
                            "end_line": 1445
                        },
                        {
                            "name": "apply_filters",
                            "line": 1457,
                            "end_line": 1460
                        },
                        {
                            "name": "get_template",
                            "line": 1467,
                            "end_line": 1467
                        },
                        {
                            "name": "get_stylesheet",
                            "line": 1468,
                            "end_line": 1468
                        },
                        {
                            "name": "current_theme_supports",
                            "line": 1474,
                            "end_line": 1474
                        },
                        {
                            "name": "current_theme_supports",
                            "line": 1487,
                            "end_line": 1487
                        },
                        {
                            "name": "is_array",
                            "line": 1490,
                            "end_line": 1490
                        },
                        {
                            "name": "apply_filters",
                            "line": 1523,
                            "end_line": 1523
                        },
                        {
                            "name": "array_merge",
                            "line": 1525,
                            "end_line": 1528
                        },
                        {
                            "name": "amp_is_canonical",
                            "line": 1526,
                            "end_line": 1526
                        },
                        {
                            "name": "compact",
                            "line": 1527,
                            "end_line": 1527
                        },
                        {
                            "name": "apply_filters",
                            "line": 1540,
                            "end_line": 1540
                        },
                        {
                            "name": "amp_is_dev_mode",
                            "line": 1542,
                            "end_line": 1542
                        },
                        {
                            "name": "apply_filters",
                            "line": 1553,
                            "end_line": 1553
                        },
                        {
                            "name": "is_admin_bar_showing",
                            "line": 1555,
                            "end_line": 1555
                        },
                        {
                            "name": "is_customize_preview",
                            "line": 1561,
                            "end_line": 1561
                        },
                        {
                            "name": "array_merge",
                            "line": 1574,
                            "end_line": 1581
                        },
                        {
                            "name": "apply_filters",
                            "line": 1593,
                            "end_line": 1593
                        }
                    ]
                }
            },
            {
                "name": "amp_get_post_image_metadata",
                "namespace": "global",
                "aliases": {
                    "ReaderThemes": "\\AmpProject\\AmpWP\\Admin\\ReaderThemes",
                    "AmpWpPluginFactory": "\\AmpProject\\AmpWP\\AmpWpPluginFactory",
                    "Icon": "\\AmpProject\\AmpWP\\Icon",
                    "Option": "\\AmpProject\\AmpWP\\Option",
                    "QueryVar": "\\AmpProject\\AmpWP\\QueryVar"
                },
                "line": 1616,
                "end_line": 1664,
                "arguments": [
                    {
                        "name": "$post",
                        "default": "null",
                        "type": ""
                    }
                ],
                "doc": {
                    "description": "Grabs featured image or the first attached image for the post.",
                    "long_description": "",
                    "tags": [
                        {
                            "name": "since",
                            "content": "0.7",
                            "description": "This originally was located in the private method AMP_Post_Template::get_post_image_metadata()."
                        },
                        {
                            "name": "internal",
                            "content": ""
                        },
                        {
                            "name": "param",
                            "content": "Post or post ID.",
                            "types": [
                                "\\WP_Post",
                                "int"
                            ],
                            "variable": "$post"
                        },
                        {
                            "name": "return",
                            "content": "$post_image_meta Post image metadata, or false if not found.",
                            "types": [
                                "array",
                                "false"
                            ]
                        }
                    ]
                },
                "hooks": [],
                "uses": {
                    "functions": [
                        {
                            "name": "get_post",
                            "line": 1617,
                            "end_line": 1617
                        },
                        {
                            "name": "has_post_thumbnail",
                            "line": 1625,
                            "end_line": 1625
                        },
                        {
                            "name": "get_post_thumbnail_id",
                            "line": 1626,
                            "end_line": 1626
                        },
                        {
                            "name": "wp_attachment_is",
                            "line": 1627,
                            "end_line": 1627
                        },
                        {
                            "name": "get_posts",
                            "line": 1630,
                            "end_line": 1641
                        },
                        {
                            "name": "array_shift",
                            "line": 1644,
                            "end_line": 1644
                        },
                        {
                            "name": "wp_get_attachment_image_src",
                            "line": 1652,
                            "end_line": 1652
                        },
                        {
                            "name": "is_array",
                            "line": 1654,
                            "end_line": 1654
                        }
                    ]
                }
            },
            {
                "name": "amp_get_publisher_logo",
                "namespace": "global",
                "aliases": {
                    "ReaderThemes": "\\AmpProject\\AmpWP\\Admin\\ReaderThemes",
                    "AmpWpPluginFactory": "\\AmpProject\\AmpWP\\AmpWpPluginFactory",
                    "Icon": "\\AmpProject\\AmpWP\\Icon",
                    "Option": "\\AmpProject\\AmpWP\\Option",
                    "QueryVar": "\\AmpProject\\AmpWP\\QueryVar"
                },
                "line": 1681,
                "end_line": 1729,
                "arguments": [],
                "doc": {
                    "description": "Get the publisher logo.",
                    "long_description": "The following guidelines apply to logos used for general AMP pages.\n \"The logo should be a rectangle, not a square. The logo should fit in a 60x600px rectangle., and either be exactly 60px high (preferred), or exactly 600px wide. For example, 450x45px would not be acceptable, even though it fits in the 600x60px rectangle.\"",
                    "tags": [
                        {
                            "name": "since",
                            "content": "1.2.1"
                        },
                        {
                            "name": "link",
                            "content": "https:\/\/developers.google.com\/search\/docs\/data-types\/article#logo-guidelines",
                            "link": "https:\/\/developers.google.com\/search\/docs\/data-types\/article#logo-guidelines"
                        },
                        {
                            "name": "internal",
                            "content": ""
                        },
                        {
                            "name": "return",
                            "content": "Publisher logo image URL. WordPress logo if no site icon or custom logo defined, and no logo provided via 'amp_site_icon_url' filter.",
                            "types": [
                                "string"
                            ]
                        }
                    ]
                },
                "hooks": [
                    {
                        "name": "amp_site_icon_url",
                        "line": 1721,
                        "end_line": 1721,
                        "type": "filter",
                        "arguments": [
                            "$logo_image_url"
                        ],
                        "doc": {
                            "description": "Filters the publisher logo URL in the schema.org data.",
                            "long_description": "Previously, this only filtered the Site Icon, as that was the only possible schema.org publisher logo. But the Custom Logo is now the preferred publisher logo, if it exists and its dimensions aren't too big.",
                            "tags": [
                                {
                                    "name": "since",
                                    "content": "0.3"
                                },
                                {
                                    "name": "param",
                                    "content": "URL of the publisher logo, either the Custom Logo or the Site Icon.",
                                    "types": [
                                        "string"
                                    ],
                                    "variable": "$schema_img_url"
                                }
                            ]
                        }
                    }
                ],
                "uses": {
                    "functions": [
                        {
                            "name": "get_theme_mod",
                            "line": 1694,
                            "end_line": 1694
                        },
                        {
                            "name": "has_custom_logo",
                            "line": 1695,
                            "end_line": 1695
                        },
                        {
                            "name": "wp_get_attachment_image_src",
                            "line": 1696,
                            "end_line": 1696
                        },
                        {
                            "name": "get_option",
                            "line": 1703,
                            "end_line": 1703
                        },
                        {
                            "name": "wp_get_attachment_image_src",
                            "line": 1705,
                            "end_line": 1705
                        },
                        {
                            "name": "apply_filters",
                            "line": 1721,
                            "end_line": 1721
                        },
                        {
                            "name": "amp_get_asset_url",
                            "line": 1725,
                            "end_line": 1725
                        }
                    ]
                }
            },
            {
                "name": "amp_get_schemaorg_metadata",
                "namespace": "global",
                "aliases": {
                    "ReaderThemes": "\\AmpProject\\AmpWP\\Admin\\ReaderThemes",
                    "AmpWpPluginFactory": "\\AmpProject\\AmpWP\\AmpWpPluginFactory",
                    "Icon": "\\AmpProject\\AmpWP\\Icon",
                    "Option": "\\AmpProject\\AmpWP\\Option",
                    "QueryVar": "\\AmpProject\\AmpWP\\QueryVar"
                },
                "line": 1740,
                "end_line": 1811,
                "arguments": [],
                "doc": {
                    "description": "Get schema.org metadata for the current query.",
                    "long_description": "",
                    "tags": [
                        {
                            "name": "since",
                            "content": "0.7"
                        },
                        {
                            "name": "see",
                            "content": "Where the logic in this function originally existed.",
                            "refers": "AMP_Post_Template::build_post_data()"
                        },
                        {
                            "name": "internal",
                            "content": ""
                        },
                        {
                            "name": "return",
                            "content": "$metadata All schema.org metadata for the post.",
                            "types": [
                                "array"
                            ]
                        }
                    ]
                },
                "hooks": [
                    {
                        "name": "amp_post_template_metadata",
                        "line": 1794,
                        "end_line": 1794,
                        "type": "filter",
                        "arguments": [
                            "$metadata",
                            "$queried_object"
                        ],
                        "doc": {
                            "description": "Filters Schema.org metadata for a post.",
                            "long_description": "The 'post_template' in the filter name here is due to this filter originally being introduced in `AMP_Post_Template`. In general the `amp_schemaorg_metadata` filter should be used instead.",
                            "tags": [
                                {
                                    "name": "since",
                                    "content": "0.3"
                                },
                                {
                                    "name": "param",
                                    "content": "Metadata.",
                                    "types": [
                                        "array"
                                    ],
                                    "variable": "$metadata"
                                },
                                {
                                    "name": "param",
                                    "content": "Post.",
                                    "types": [
                                        "\\WP_Post"
                                    ],
                                    "variable": "$queried_object"
                                }
                            ]
                        }
                    },
                    {
                        "name": "amp_schemaorg_metadata",
                        "line": 1808,
                        "end_line": 1808,
                        "type": "filter",
                        "arguments": [
                            "$metadata"
                        ],
                        "doc": {
                            "description": "Filters Schema.org metadata for a query.",
                            "long_description": "Check the the main query for the context for which metadata should be added.",
                            "tags": [
                                {
                                    "name": "since",
                                    "content": "0.7"
                                },
                                {
                                    "name": "param",
                                    "content": "Metadata.",
                                    "types": [
                                        "array"
                                    ],
                                    "variable": "$metadata"
                                }
                            ]
                        }
                    }
                ],
                "uses": {
                    "functions": [
                        {
                            "name": "get_bloginfo",
                            "line": 1745,
                            "end_line": 1745
                        },
                        {
                            "name": "amp_get_publisher_logo",
                            "line": 1749,
                            "end_line": 1749
                        },
                        {
                            "name": "get_queried_object",
                            "line": 1757,
                            "end_line": 1757
                        },
                        {
                            "name": "array_merge",
                            "line": 1759,
                            "end_line": 1768
                        },
                        {
                            "name": "is_page",
                            "line": 1762,
                            "end_line": 1762
                        },
                        {
                            "name": "get_permalink",
                            "line": 1763,
                            "end_line": 1763
                        },
                        {
                            "name": "get_the_title",
                            "line": 1764,
                            "end_line": 1764
                        },
                        {
                            "name": "mysql2date",
                            "line": 1765,
                            "end_line": 1765
                        },
                        {
                            "name": "mysql2date",
                            "line": 1766,
                            "end_line": 1766
                        },
                        {
                            "name": "get_userdata",
                            "line": 1770,
                            "end_line": 1770
                        },
                        {
                            "name": "html_entity_decode",
                            "line": 1774,
                            "end_line": 1774
                        },
                        {
                            "name": "get_bloginfo",
                            "line": 1774,
                            "end_line": 1774
                        },
                        {
                            "name": "amp_get_post_image_metadata",
                            "line": 1778,
                            "end_line": 1778
                        },
                        {
                            "name": "apply_filters",
                            "line": 1794,
                            "end_line": 1794
                        },
                        {
                            "name": "is_archive",
                            "line": 1795,
                            "end_line": 1795
                        },
                        {
                            "name": "apply_filters",
                            "line": 1808,
                            "end_line": 1808
                        }
                    ]
                }
            },
            {
                "name": "amp_print_schemaorg_metadata",
                "namespace": "global",
                "aliases": {
                    "ReaderThemes": "\\AmpProject\\AmpWP\\Admin\\ReaderThemes",
                    "AmpWpPluginFactory": "\\AmpProject\\AmpWP\\AmpWpPluginFactory",
                    "Icon": "\\AmpProject\\AmpWP\\Icon",
                    "Option": "\\AmpProject\\AmpWP\\Option",
                    "QueryVar": "\\AmpProject\\AmpWP\\QueryVar"
                },
                "line": 1821,
                "end_line": 1829,
                "arguments": [],
                "doc": {
                    "description": "Output schema.org metadata.",
                    "long_description": "",
                    "tags": [
                        {
                            "name": "since",
                            "content": "0.7"
                        },
                        {
                            "name": "since",
                            "content": "1.1",
                            "description": "we pass `JSON_UNESCAPED_UNICODE` to `wp_json_encode`."
                        },
                        {
                            "name": "see",
                            "content": "",
                            "refers": "https:\/\/github.com\/ampproject\/amp-wp\/issues\/1969"
                        },
                        {
                            "name": "internal",
                            "content": ""
                        }
                    ]
                },
                "hooks": [],
                "uses": {
                    "functions": [
                        {
                            "name": "amp_get_schemaorg_metadata",
                            "line": 1822,
                            "end_line": 1822
                        },
                        {
                            "name": "wp_json_encode",
                            "line": 1827,
                            "end_line": 1827
                        }
                    ]
                }
            },
            {
                "name": "amp_wp_kses_mustache",
                "namespace": "global",
                "aliases": {
                    "ReaderThemes": "\\AmpProject\\AmpWP\\Admin\\ReaderThemes",
                    "AmpWpPluginFactory": "\\AmpProject\\AmpWP\\AmpWpPluginFactory",
                    "Icon": "\\AmpProject\\AmpWP\\Icon",
                    "Option": "\\AmpProject\\AmpWP\\Option",
                    "QueryVar": "\\AmpProject\\AmpWP\\QueryVar"
                },
                "line": 1841,
                "end_line": 1844,
                "arguments": [
                    {
                        "name": "$markup",
                        "default": null,
                        "type": ""
                    }
                ],
                "doc": {
                    "description": "Filters content and keeps only allowable HTML elements by amp-mustache.",
                    "long_description": "",
                    "tags": [
                        {
                            "name": "see",
                            "content": "",
                            "refers": "wp_kses()"
                        },
                        {
                            "name": "since",
                            "content": "1.0"
                        },
                        {
                            "name": "internal",
                            "content": ""
                        },
                        {
                            "name": "param",
                            "content": "Markup to sanitize.",
                            "types": [
                                "string"
                            ],
                            "variable": "$markup"
                        },
                        {
                            "name": "return",
                            "content": "HTML markup with tags allowed by amp-mustache.",
                            "types": [
                                "string"
                            ]
                        }
                    ]
                },
                "hooks": [],
                "uses": {
                    "functions": [
                        {
                            "name": "wp_kses",
                            "line": 1843,
                            "end_line": 1843
                        },
                        {
                            "name": "array_fill_keys",
                            "line": 1843,
                            "end_line": 1843
                        }
                    ]
                }
            },
            {
                "name": "amp_add_admin_bar_view_link",
                "namespace": "global",
                "aliases": {
                    "ReaderThemes": "\\AmpProject\\AmpWP\\Admin\\ReaderThemes",
                    "AmpWpPluginFactory": "\\AmpProject\\AmpWP\\AmpWpPluginFactory",
                    "Icon": "\\AmpProject\\AmpWP\\Icon",
                    "Option": "\\AmpProject\\AmpWP\\Option",
                    "QueryVar": "\\AmpProject\\AmpWP\\QueryVar"
                },
                "line": 1857,
                "end_line": 1908,
                "arguments": [
                    {
                        "name": "$wp_admin_bar",
                        "default": null,
                        "type": ""
                    }
                ],
                "doc": {
                    "description": "Add \"View AMP\" admin bar item for Transitional\/Reader mode.",
                    "long_description": "Note that when theme support is present (in Native\/Transitional modes), the admin bar item will be further amended by the `AMP_Validation_Manager::add_admin_bar_menu_items()` method.",
                    "tags": [
                        {
                            "name": "see",
                            "content": "",
                            "refers": "\\AMP_Validation_Manager::add_admin_bar_menu_items()"
                        },
                        {
                            "name": "internal",
                            "content": ""
                        },
                        {
                            "name": "param",
                            "content": "Admin bar.",
                            "types": [
                                "\\WP_Admin_Bar"
                            ],
                            "variable": "$wp_admin_bar"
                        }
                    ]
                },
                "hooks": [],
                "uses": {
                    "functions": [
                        {
                            "name": "is_admin",
                            "line": 1858,
                            "end_line": 1858
                        },
                        {
                            "name": "amp_is_canonical",
                            "line": 1858,
                            "end_line": 1858
                        },
                        {
                            "name": "amp_is_available",
                            "line": 1858,
                            "end_line": 1858
                        },
                        {
                            "name": "amp_is_request",
                            "line": 1862,
                            "end_line": 1862
                        },
                        {
                            "name": "amp_remove_endpoint",
                            "line": 1865,
                            "end_line": 1865
                        },
                        {
                            "name": "amp_get_current_url",
                            "line": 1865,
                            "end_line": 1865
                        },
                        {
                            "name": "is_singular",
                            "line": 1866,
                            "end_line": 1866
                        },
                        {
                            "name": "amp_get_permalink",
                            "line": 1867,
                            "end_line": 1867
                        },
                        {
                            "name": "get_queried_object_id",
                            "line": 1867,
                            "end_line": 1867
                        },
                        {
                            "name": "add_query_arg",
                            "line": 1869,
                            "end_line": 1869
                        },
                        {
                            "name": "amp_get_slug",
                            "line": 1869,
                            "end_line": 1869
                        },
                        {
                            "name": "amp_get_current_url",
                            "line": 1869,
                            "end_line": 1869
                        },
                        {
                            "name": "remove_query_arg",
                            "line": 1872,
                            "end_line": 1872
                        },
                        {
                            "name": "esc_html__",
                            "line": 1883,
                            "end_line": 1883
                        },
                        {
                            "name": "esc_url",
                            "line": 1884,
                            "end_line": 1884
                        },
                        {
                            "name": "esc_html",
                            "line": 1892,
                            "end_line": 1892
                        },
                        {
                            "name": "__",
                            "line": 1892,
                            "end_line": 1892
                        },
                        {
                            "name": "__",
                            "line": 1892,
                            "end_line": 1892
                        },
                        {
                            "name": "esc_url",
                            "line": 1893,
                            "end_line": 1893
                        },
                        {
                            "name": "get_object_vars",
                            "line": 1900,
                            "end_line": 1900
                        },
                        {
                            "name": "amp_is_legacy",
                            "line": 1901,
                            "end_line": 1901
                        },
                        {
                            "name": "add_query_arg",
                            "line": 1902,
                            "end_line": 1902
                        },
                        {
                            "name": "add_query_arg",
                            "line": 1904,
                            "end_line": 1904
                        },
                        {
                            "name": "amp_get_slug",
                            "line": 1904,
                            "end_line": 1904
                        }
                    ],
                    "methods": [
                        {
                            "name": "logo",
                            "class": "\\AmpProject\\AmpWP\\Icon",
                            "static": true,
                            "line": 1874,
                            "end_line": 1874
                        },
                        {
                            "name": "link",
                            "class": "\\AmpProject\\AmpWP\\Icon",
                            "static": true,
                            "line": 1874,
                            "end_line": 1874
                        },
                        {
                            "name": "add_node",
                            "class": "$wp_admin_bar",
                            "static": false,
                            "line": 1880,
                            "end_line": 1886
                        },
                        {
                            "name": "to_html",
                            "class": "$icon",
                            "static": false,
                            "line": 1883,
                            "end_line": 1883
                        },
                        {
                            "name": "add_node",
                            "class": "$wp_admin_bar",
                            "static": false,
                            "line": 1888,
                            "end_line": 1895
                        },
                        {
                            "name": "get_node",
                            "class": "$wp_admin_bar",
                            "static": false,
                            "line": 1898,
                            "end_line": 1898
                        },
                        {
                            "name": "get_option",
                            "class": "\\AMP_Options_Manager",
                            "static": true,
                            "line": 1899,
                            "end_line": 1899
                        },
                        {
                            "name": "add_node",
                            "class": "$wp_admin_bar",
                            "static": false,
                            "line": 1906,
                            "end_line": 1906
                        }
                    ]
                }
            },
            {
                "name": "amp_generate_script_hash",
                "namespace": "global",
                "aliases": {
                    "ReaderThemes": "\\AmpProject\\AmpWP\\Admin\\ReaderThemes",
                    "AmpWpPluginFactory": "\\AmpProject\\AmpWP\\AmpWpPluginFactory",
                    "Icon": "\\AmpProject\\AmpWP\\Icon",
                    "Option": "\\AmpProject\\AmpWP\\Option",
                    "QueryVar": "\\AmpProject\\AmpWP\\QueryVar"
                },
                "line": 1926,
                "end_line": 1937,
                "arguments": [
                    {
                        "name": "$script",
                        "default": null,
                        "type": ""
                    }
                ],
                "doc": {
                    "description": "Generate hash for inline amp-script.",
                    "long_description": "The sha384 hash used by amp-script is represented not as hexadecimal but as base64url, which is defined in RFC 4648 under section 5, \"Base 64 Encoding with URL and Filename Safe Alphabet\". It is sometimes referred to as \"web safe\".",
                    "tags": [
                        {
                            "name": "since",
                            "content": "1.4.0"
                        },
                        {
                            "name": "link",
                            "content": "https:\/\/amp.dev\/documentation\/components\/amp-script\/#security-features",
                            "link": "https:\/\/amp.dev\/documentation\/components\/amp-script\/#security-features"
                        },
                        {
                            "name": "link",
                            "content": "https:\/\/github.com\/ampproject\/amphtml\/blob\/e8707858895c2af25903af25d396e144e64690ba\/extensions\/amp-script\/0.1\/amp-script.js#L401-L425",
                            "link": "https:\/\/github.com\/ampproject\/amphtml\/blob\/e8707858895c2af25903af25d396e144e64690ba\/extensions\/amp-script\/0.1\/amp-script.js#L401-L425"
                        },
                        {
                            "name": "link",
                            "content": "https:\/\/github.com\/ampproject\/amphtml\/blob\/27b46b9c8c0fb3711a00376668d808f413d798ed\/src\/service\/crypto-impl.js#L67-L124",
                            "link": "https:\/\/github.com\/ampproject\/amphtml\/blob\/27b46b9c8c0fb3711a00376668d808f413d798ed\/src\/service\/crypto-impl.js#L67-L124"
                        },
                        {
                            "name": "link",
                            "content": "https:\/\/github.com\/ampproject\/amphtml\/blob\/c4a663d0ba13d0488c6fe73c55dc8c971ac6ec0d\/src\/utils\/base64.js#L52-L61",
                            "link": "https:\/\/github.com\/ampproject\/amphtml\/blob\/c4a663d0ba13d0488c6fe73c55dc8c971ac6ec0d\/src\/utils\/base64.js#L52-L61"
                        },
                        {
                            "name": "link",
                            "content": "https:\/\/tools.ietf.org\/html\/rfc4648#section-5",
                            "link": "https:\/\/tools.ietf.org\/html\/rfc4648#section-5"
                        },
                        {
                            "name": "param",
                            "content": "Script.",
                            "types": [
                                "string"
                            ],
                            "variable": "$script"
                        },
                        {
                            "name": "return",
                            "content": "Script hash or null if the sha384 algorithm is not supported.",
                            "types": [
                                "string",
                                "null"
                            ]
                        }
                    ]
                },
                "hooks": [],
                "uses": {
                    "functions": [
                        {
                            "name": "hash",
                            "line": 1927,
                            "end_line": 1927
                        },
                        {
                            "name": "str_replace",
                            "line": 1931,
                            "end_line": 1935
                        },
                        {
                            "name": "base64_encode",
                            "line": 1934,
                            "end_line": 1934
                        }
                    ]
                }
            }
        ]
    },
    "125": {
        "file": {
            "description": "Class AMP_Base_Embed_Handler",
            "long_description": "Used by some children.",
            "tags": [
                {
                    "name": "package",
                    "content": "AMP"
                }
            ]
        },
        "path": "includes\/embeds\/class-amp-base-embed-handler.php",
        "root": "\/app\/public\/content\/plugins\/amp",
        "classes": [
            {
                "name": "AMP_Base_Embed_Handler",
                "namespace": "global",
                "line": 15,
                "end_line": 112,
                "final": false,
                "abstract": true,
                "extends": "",
                "implements": [],
                "properties": [
                    {
                        "name": "$DEFAULT_WIDTH",
                        "line": 21,
                        "end_line": 21,
                        "default": "600",
                        "static": false,
                        "visibility": "protected",
                        "doc": {
                            "description": "Default width.",
                            "long_description": "",
                            "tags": [
                                {
                                    "name": "var",
                                    "content": "",
                                    "types": [
                                        "int"
                                    ],
                                    "variable": ""
                                }
                            ]
                        }
                    },
                    {
                        "name": "$DEFAULT_HEIGHT",
                        "line": 28,
                        "end_line": 28,
                        "default": "480",
                        "static": false,
                        "visibility": "protected",
                        "doc": {
                            "description": "Default height.",
                            "long_description": "",
                            "tags": [
                                {
                                    "name": "var",
                                    "content": "",
                                    "types": [
                                        "int"
                                    ],
                                    "variable": ""
                                }
                            ]
                        }
                    },
                    {
                        "name": "$args",
                        "line": 35,
                        "end_line": 35,
                        "default": "array()",
                        "static": false,
                        "visibility": "protected",
                        "doc": {
                            "description": "Default arguments.",
                            "long_description": "",
                            "tags": [
                                {
                                    "name": "var",
                                    "content": "",
                                    "types": [
                                        "array"
                                    ],
                                    "variable": ""
                                }
                            ]
                        }
                    },
                    {
                        "name": "$did_convert_elements",
                        "line": 42,
                        "end_line": 42,
                        "default": "false",
                        "static": false,
                        "visibility": "protected",
                        "doc": {
                            "description": "Whether or not conversion was completed.",
                            "long_description": "",
                            "tags": [
                                {
                                    "name": "var",
                                    "content": "",
                                    "types": [
                                        "boolean"
                                    ],
                                    "variable": ""
                                }
                            ]
                        }
                    }
                ],
                "methods": [
                    {
                        "name": "register_embed",
                        "namespace": "",
                        "aliases": [],
                        "line": 47,
                        "end_line": 47,
                        "final": false,
                        "abstract": true,
                        "static": false,
                        "visibility": "public",
                        "arguments": [],
                        "doc": {
                            "description": "Registers embed.",
                            "long_description": "",
                            "tags": []
                        }
                    },
                    {
                        "name": "unregister_embed",
                        "namespace": "",
                        "aliases": [],
                        "line": 52,
                        "end_line": 52,
                        "final": false,
                        "abstract": true,
                        "static": false,
                        "visibility": "public",
                        "arguments": [],
                        "doc": {
                            "description": "Unregisters embed.",
                            "long_description": "",
                            "tags": []
                        }
                    },
                    {
                        "name": "__construct",
                        "namespace": "",
                        "aliases": [],
                        "line": 59,
                        "end_line": 67,
                        "final": false,
                        "abstract": false,
                        "static": false,
                        "visibility": "public",
                        "arguments": [
                            {
                                "name": "$args",
                                "default": "array()",
                                "type": ""
                            }
                        ],
                        "doc": {
                            "description": "Constructor.",
                            "long_description": "",
                            "tags": [
                                {
                                    "name": "param",
                                    "content": "Height and width for embed.",
                                    "types": [
                                        "array"
                                    ],
                                    "variable": "$args"
                                }
                            ]
                        },
                        "uses": {
                            "functions": [
                                {
                                    "name": "wp_parse_args",
                                    "line": 60,
                                    "end_line": 66
                                }
                            ]
                        }
                    },
                    {
                        "name": "get_scripts",
                        "namespace": "",
                        "aliases": [],
                        "line": 79,
                        "end_line": 81,
                        "final": false,
                        "abstract": false,
                        "static": false,
                        "visibility": "public",
                        "arguments": [],
                        "doc": {
                            "description": "Get mapping of AMP component names to AMP script URLs.",
                            "long_description": "This is normally no longer needed because the validating sanitizer will automatically detect the need for them via the spec.",
                            "tags": [
                                {
                                    "name": "see",
                                    "content": "",
                                    "refers": "AMP_Tag_And_Attribute_Sanitizer::get_scripts()"
                                },
                                {
                                    "name": "return",
                                    "content": "Scripts.",
                                    "types": [
                                        "array"
                                    ]
                                }
                            ]
                        }
                    },
                    {
                        "name": "match_element_attributes",
                        "namespace": "",
                        "aliases": [],
                        "line": 93,
                        "end_line": 111,
                        "final": false,
                        "abstract": false,
                        "static": false,
                        "visibility": "protected",
                        "arguments": [
                            {
                                "name": "$html",
                                "default": null,
                                "type": ""
                            },
                            {
                                "name": "$tag_name",
                                "default": null,
                                "type": ""
                            },
                            {
                                "name": "$attribute_names",
                                "default": null,
                                "type": ""
                            }
                        ],
                        "doc": {
                            "description": "Get regex pattern for matching HTML attributes from a given tag name.",
                            "long_description": "",
                            "tags": [
                                {
                                    "name": "since",
                                    "content": "1.5.0"
                                },
                                {
                                    "name": "param",
                                    "content": "HTML source haystack.",
                                    "types": [
                                        "string"
                                    ],
                                    "variable": "$html"
                                },
                                {
                                    "name": "param",
                                    "content": "Tag name.",
                                    "types": [
                                        "string"
                                    ],
                                    "variable": "$tag_name"
                                },
                                {
                                    "name": "param",
                                    "content": "Attribute names.",
                                    "types": [
                                        "string[]"
                                    ],
                                    "variable": "$attribute_names"
                                },
                                {
                                    "name": "return",
                                    "content": "Matched attributes, or null if the element was not matched at all.",
                                    "types": [
                                        "string[]",
                                        "null"
                                    ]
                                }
                            ]
                        },
                        "uses": {
                            "functions": [
                                {
                                    "name": "sprintf",
                                    "line": 94,
                                    "end_line": 106
                                },
                                {
                                    "name": "preg_quote",
                                    "line": 96,
                                    "end_line": 96
                                },
                                {
                                    "name": "implode",
                                    "line": 97,
                                    "end_line": 105
                                },
                                {
                                    "name": "array_map",
                                    "line": 99,
                                    "end_line": 104
                                },
                                {
                                    "name": "sprintf",
                                    "line": 101,
                                    "end_line": 101
                                },
                                {
                                    "name": "preg_quote",
                                    "line": 101,
                                    "end_line": 101
                                },
                                {
                                    "name": "preg_match",
                                    "line": 107,
                                    "end_line": 107
                                },
                                {
                                    "name": "wp_array_slice_assoc",
                                    "line": 110,
                                    "end_line": 110
                                }
                            ]
                        }
                    }
                ],
                "doc": {
                    "description": "Class AMP_Base_Embed_Handler",
                    "long_description": "",
                    "tags": [
                        {
                            "name": "since",
                            "content": "0.2"
                        }
                    ]
                }
            }
        ]
    },
    "156": {
        "file": {
            "description": "",
            "long_description": "",
            "tags": []
        },
        "path": "templates\/html-start.php",
        "root": "\/app\/public\/content\/plugins\/amp",
        "uses": {
            "methods": [
                {
                    "name": "build_attributes_string",
                    "class": "\\AMP_HTML_Utils",
                    "static": true,
                    "line": 22,
                    "end_line": 22
                },
                {
                    "name": "get",
                    "class": "$this",
                    "static": false,
                    "line": 22,
                    "end_line": 22
                },
                {
                    "name": "load_parts",
                    "class": "$this",
                    "static": false,
                    "line": 41,
                    "end_line": 41
                },
                {
                    "name": "get",
                    "class": "$this",
                    "static": false,
                    "line": 62,
                    "end_line": 62
                }
            ],
            "functions": [
                {
                    "name": "do_action",
                    "line": 38,
                    "end_line": 38
                },
                {
                    "name": "do_action",
                    "line": 57,
                    "end_line": 57
                },
                {
                    "name": "esc_attr",
                    "line": 62,
                    "end_line": 62
                },
                {
                    "name": "do_action",
                    "line": 72,
                    "end_line": 72
                }
            ]
        },
        "hooks": [
            {
                "name": "amp_post_template_head",
                "line": 38,
                "end_line": 38,
                "type": "action",
                "arguments": [
                    "$this"
                ],
                "doc": {
                    "description": "Fires when rendering <head> in Reader mode templates.",
                    "long_description": "",
                    "tags": [
                        {
                            "name": "since",
                            "content": "0.2"
                        },
                        {
                            "name": "param",
                            "content": "",
                            "types": [
                                "\\AMP_Post_Template"
                            ],
                            "variable": "$this"
                        }
                    ]
                }
            },
            {
                "name": "amp_post_template_css",
                "line": 57,
                "end_line": 57,
                "type": "action",
                "arguments": [
                    "$this"
                ],
                "doc": {
                    "description": "Fires when printing CSS styles in Reader mode templates.",
                    "long_description": "Callbacks should print bare CSS without any `<style>` or `<link>` tags. As an alternative to using this, please consider:\n     add_action( 'amp_post_template_head', function() { wp_print_styles( 'foo' ); } );",
                    "tags": [
                        {
                            "name": "since",
                            "content": "0.3"
                        },
                        {
                            "name": "param",
                            "content": "",
                            "types": [
                                "\\AMP_Post_Template"
                            ],
                            "variable": "$this"
                        }
                    ]
                }
            },
            {
                "name": "amp_post_template_body_open",
                "line": 72,
                "end_line": 72,
                "type": "action",
                "arguments": [
                    "$this"
                ],
                "doc": {
                    "description": "Fires immediately after printing the <body>.",
                    "long_description": "",
                    "tags": [
                        {
                            "name": "since",
                            "content": "1.2.1"
                        },
                        {
                            "name": "see",
                            "content": "",
                            "refers": "wp_body_open()"
                        },
                        {
                            "name": "param",
                            "content": "",
                            "types": [
                                "\\AMP_Post_Template"
                            ],
                            "variable": "$this"
                        }
                    ]
                }
            }
        ]
    },
    "164": {
        "file": {
            "description": "Single view template.",
            "long_description": "\ud83d\udeab\ud83d\udeab\ud83d\udeab DO NOT EDIT THIS FILE WHILE INSIDE THE PLUGIN! Changes You make will be lost when a new version of the AMP plugin is released. You need to copy this file out of the plugin and put it into your custom theme, for example. To learn about how to customize these Reader-mode AMP templates, please see: https:\/\/amp-wp.org\/documentation\/how-the-plugin-works\/classic-templates\/ \ud83d\udeab\ud83d\udeab\ud83d\udeab",
            "tags": [
                {
                    "name": "package",
                    "content": "AMP"
                }
            ]
        },
        "path": "templates\/single.php",
        "root": "\/app\/public\/content\/plugins\/amp",
        "uses": {
            "methods": [
                {
                    "name": "load_parts",
                    "class": "$this",
                    "static": false,
                    "line": 21,
                    "end_line": 21
                },
                {
                    "name": "load_parts",
                    "class": "$this",
                    "static": false,
                    "line": 24,
                    "end_line": 24
                },
                {
                    "name": "get",
                    "class": "$this",
                    "static": false,
                    "line": 28,
                    "end_line": 28
                },
                {
                    "name": "load_parts",
                    "class": "$this",
                    "static": false,
                    "line": 36,
                    "end_line": 36
                },
                {
                    "name": "load_parts",
                    "class": "$this",
                    "static": false,
                    "line": 40,
                    "end_line": 40
                },
                {
                    "name": "get",
                    "class": "$this",
                    "static": false,
                    "line": 43,
                    "end_line": 43
                },
                {
                    "name": "load_parts",
                    "class": "$this",
                    "static": false,
                    "line": 54,
                    "end_line": 54
                },
                {
                    "name": "load_parts",
                    "class": "$this",
                    "static": false,
                    "line": 59,
                    "end_line": 59
                },
                {
                    "name": "load_parts",
                    "class": "$this",
                    "static": false,
                    "line": 62,
                    "end_line": 62
                }
            ],
            "functions": [
                {
                    "name": "apply_filters",
                    "line": 36,
                    "end_line": 36
                },
                {
                    "name": "apply_filters",
                    "line": 54,
                    "end_line": 54
                }
            ]
        },
        "hooks": [
            {
                "name": "amp_post_article_header_meta",
                "line": 36,
                "end_line": 36,
                "type": "filter",
                "arguments": [
                    "array('meta-author', 'meta-time')"
                ],
                "doc": {
                    "description": "Filters the template parts loaded in the header area of the AMP legacy post template.",
                    "long_description": "",
                    "tags": [
                        {
                            "name": "since",
                            "content": "0.4"
                        },
                        {
                            "name": "param",
                            "content": "Templates to load.",
                            "types": [
                                "string[]"
                            ],
                            "variable": ""
                        }
                    ]
                }
            },
            {
                "name": "amp_post_article_footer_meta",
                "line": 54,
                "end_line": 54,
                "type": "filter",
                "arguments": [
                    "array('meta-taxonomy', 'meta-comments-link')"
                ],
                "doc": {
                    "description": "Filters the template parts to load in the footer area of the AMP legacy post template.",
                    "long_description": "",
                    "tags": [
                        {
                            "name": "since",
                            "content": "0.4"
                        },
                        {
                            "name": "param",
                            "content": "Templates to load.",
                            "types": [
                                "string[]"
                            ],
                            "variable": ""
                        }
                    ]
                }
            }
        ]
    },
    "166": {
        "file": {
            "description": "",
            "long_description": "",
            "tags": []
        },
        "path": "templates\/html-end.php",
        "root": "\/app\/public\/content\/plugins\/amp",
        "uses": {
            "functions": [
                {
                    "name": "do_action",
                    "line": 31,
                    "end_line": 31
                }
            ]
        },
        "hooks": [
            {
                "name": "amp_post_template_footer",
                "line": 31,
                "end_line": 31,
                "type": "action",
                "arguments": [
                    "$this"
                ],
                "doc": {
                    "description": "Fires just before printing the <\/body> closing tag.",
                    "long_description": "",
                    "tags": [
                        {
                            "name": "since",
                            "content": "0.2"
                        },
                        {
                            "name": "see",
                            "content": "",
                            "refers": "wp_footer()"
                        },
                        {
                            "name": "param",
                            "content": "",
                            "types": [
                                "\\AMP_Post_Template"
                            ],
                            "variable": "$this"
                        }
                    ]
                }
            }
        ]
    },
    "167": {
        "file": {
            "description": "Functions for managing legacy templates",
            "long_description": "",
            "tags": [
                {
                    "name": "package",
                    "content": "AMP"
                }
            ]
        },
        "path": "back-compat\/back-compat.php",
        "root": "\/app\/public\/content\/plugins\/amp",
        "functions": [
            {
                "name": "amp_backcompat_use_v03_templates",
                "namespace": "global",
                "aliases": [],
                "line": 20,
                "end_line": 24,
                "arguments": [],
                "doc": {
                    "description": "Add hooks to use legacy AMP post templates from before v0.4.",
                    "long_description": "If you want to use the template that shipped with v0.3 and earlier, you can use this to force that. Note that this may not stick around forever, so use caution and `function_exists`.\n Note that the old legacy post templates from AMP plugin v0.3 should no longer be used. Update to using the current AMP legacy post templates or better yet switch to using a full Reader theme.",
                    "tags": [
                        {
                            "name": "deprecated",
                            "content": "Use Reader themes instead of old legacy AMP post templates.",
                            "description": "Use Reader themes instead of old legacy AMP post templates."
                        },
                        {
                            "name": "since",
                            "content": "0.4"
                        }
                    ]
                },
                "hooks": [],
                "uses": {
                    "functions": [
                        {
                            "name": "_deprecated_function",
                            "line": 21,
                            "end_line": 21,
                            "deprecation_version": "2.0"
                        },
                        {
                            "name": "add_filter",
                            "line": 22,
                            "end_line": 22
                        },
                        {
                            "name": "add_filter",
                            "line": 23,
                            "end_line": 23
                        }
                    ]
                }
            },
            {
                "name": "_amp_backcompat_use_v03_templates_callback",
                "namespace": "global",
                "aliases": [],
                "line": 35,
                "end_line": 37,
                "arguments": [
                    {
                        "name": "$templates",
                        "default": null,
                        "type": ""
                    }
                ],
                "doc": {
                    "description": "Callback for getting the legacy templates directory.",
                    "long_description": "",
                    "tags": [
                        {
                            "name": "internal",
                            "content": ""
                        },
                        {
                            "name": "deprecated",
                            "content": ""
                        },
                        {
                            "name": "param",
                            "content": "Template directory.",
                            "types": [
                                "string"
                            ],
                            "variable": "$templates"
                        },
                        {
                            "name": "return",
                            "content": "Legacy template directory.",
                            "types": [
                                "string"
                            ]
                        }
                    ]
                },
                "hooks": []
            }
        ]
    },
    "172": {
        "file": {
            "description": "",
            "long_description": "",
            "tags": []
        },
        "path": "back-compat\/templates-v0-3\/single.php",
        "root": "\/app\/public\/content\/plugins\/amp",
        "uses": {
            "functions": [
                {
                    "name": "language_attributes",
                    "line": 16,
                    "end_line": 16
                },
                {
                    "name": "do_action",
                    "line": 22,
                    "end_line": 22
                },
                {
                    "name": "do_action",
                    "line": 29,
                    "end_line": 29
                },
                {
                    "name": "wp_kses_data",
                    "line": 36,
                    "end_line": 36
                },
                {
                    "name": "apply_filters",
                    "line": 47,
                    "end_line": 47
                },
                {
                    "name": "do_action",
                    "line": 54,
                    "end_line": 54
                }
            ],
            "methods": [
                {
                    "name": "load_parts",
                    "class": "$this",
                    "static": false,
                    "line": 26,
                    "end_line": 26
                },
                {
                    "name": "load_parts",
                    "class": "$this",
                    "static": false,
                    "line": 34,
                    "end_line": 34
                },
                {
                    "name": "get",
                    "class": "$this",
                    "static": false,
                    "line": 36,
                    "end_line": 36
                },
                {
                    "name": "load_parts",
                    "class": "$this",
                    "static": false,
                    "line": 47,
                    "end_line": 47
                },
                {
                    "name": "get",
                    "class": "$this",
                    "static": false,
                    "line": 50,
                    "end_line": 50
                }
            ]
        },
        "hooks": [
            {
                "name": "amp_post_template_head",
                "line": 22,
                "end_line": 22,
                "type": "action",
                "arguments": [
                    "$this"
                ],
                "doc": {
                    "description": "This action is documented in templates\/html-start.php",
                    "long_description": "",
                    "tags": []
                }
            },
            {
                "name": "amp_post_template_css",
                "line": 29,
                "end_line": 29,
                "type": "action",
                "arguments": [
                    "$this"
                ],
                "doc": {
                    "description": "This action is documented in templates\/html-start.php",
                    "long_description": "",
                    "tags": []
                }
            },
            {
                "name": "amp_post_template_meta_parts",
                "line": 47,
                "end_line": 47,
                "type": "filter",
                "arguments": [
                    "array('meta-author', 'meta-time', 'meta-taxonomy')"
                ],
                "doc": {
                    "description": "Filters the template parts to load in the meta area of the AMP legacy post template from before v0.4.",
                    "long_description": "",
                    "tags": [
                        {
                            "name": "since",
                            "content": "0.2"
                        },
                        {
                            "name": "deprecated",
                            "content": ""
                        },
                        {
                            "name": "param",
                            "content": "Templates to load.",
                            "types": [
                                "string[]"
                            ],
                            "variable": ""
                        }
                    ]
                }
            },
            {
                "name": "amp_post_template_footer",
                "line": 54,
                "end_line": 54,
                "type": "action",
                "arguments": [
                    "$this"
                ],
                "doc": {
                    "description": "This action is documented in templates\/html-start.php",
                    "long_description": "",
                    "tags": []
                }
            }
        ]
    }
}